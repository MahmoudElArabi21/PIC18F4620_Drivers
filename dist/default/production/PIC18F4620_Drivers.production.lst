

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 04 17:45:34 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4620 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     
    61                           	psect	idataCOMRAM
    62   00F978                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _lat_regs
    66   00F978  89                 	db	137
    67   00F979  0F                 	db	15
    68   00F97A  8A                 	db	138
    69   00F97B  0F                 	db	15
    70   00F97C  8B                 	db	139
    71   00F97D  0F                 	db	15
    72   00F97E  8C                 	db	140
    73   00F97F  0F                 	db	15
    74   00F980  8D                 	db	141
    75   00F981  0F                 	db	15
    76                           
    77                           ;initializer for _port_regs
    78   00F982  80                 	db	128
    79   00F983  0F                 	db	15
    80   00F984  81                 	db	129
    81   00F985  0F                 	db	15
    82   00F986  82                 	db	130
    83   00F987  0F                 	db	15
    84   00F988  83                 	db	131
    85   00F989  0F                 	db	15
    86   00F98A  84                 	db	132
    87   00F98B  0F                 	db	15
    88                           
    89                           ;initializer for _tris_regs
    90   00F98C  92                 	db	146
    91   00F98D  0F                 	db	15
    92   00F98E  93                 	db	147
    93   00F98F  0F                 	db	15
    94   00F990  94                 	db	148
    95   00F991  0F                 	db	15
    96   00F992  95                 	db	149
    97   00F993  0F                 	db	15
    98   00F994  96                 	db	150
    99   00F995  0F                 	db	15
   100                           
   101                           ;initializer for _btn_low
   102   00F996  D2                 	db	210
   103   00F997  01                 	db	1
   104   00F998  01                 	db	1
   105                           
   106                           ;initializer for _btn_high
   107   00F999  43                 	db	67
   108   00F99A  01                 	db	1
   109   00F99B  00                 	db	0
   110                           
   111                           ;initializer for _led2
   112   00F99C  0A                 	db	10
   113                           
   114                           ;initializer for _led1
   115   00F99D  02                 	db	2
   116   000000                     _LATA	set	3977
   117   000000                     _PORTE	set	3972
   118   000000                     _PORTD	set	3971
   119   000000                     _PORTC	set	3970
   120   000000                     _PORTB	set	3969
   121   000000                     _PORTA	set	3968
   122   000000                     _TRISA	set	3986
   123   000000                     _TRISE	set	3990
   124   000000                     _TRISD	set	3989
   125   000000                     _TRISC	set	3988
   126   000000                     _TRISB	set	3987
   127   000000                     _LATE	set	3981
   128   000000                     _LATD	set	3980
   129   000000                     _LATC	set	3979
   130   000000                     _LATB	set	3978
   131                           
   132                           ; #config settings
   133                           
   134                           	psect	cinit
   135   00F99E                     __pcinit:
   136                           	callstack 0
   137   00F99E                     start_initialization:
   138                           	callstack 0
   139   00F99E                     __initialization:
   140                           	callstack 0
   141                           
   142                           ; Initialize objects allocated to COMRAM (38 bytes)
   143                           ; load TBLPTR registers with __pidataCOMRAM
   144   00F99E  0E78               	movlw	low __pidataCOMRAM
   145   00F9A0  6EF6               	movwf	tblptrl,c
   146   00F9A2  0EF9               	movlw	high __pidataCOMRAM
   147   00F9A4  6EF7               	movwf	tblptrh,c
   148   00F9A6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   149   00F9A8  6EF8               	movwf	tblptru,c
   150   00F9AA  EE00  F001         	lfsr	0,__pdataCOMRAM
   151   00F9AE  EE10 F026          	lfsr	1,38
   152   00F9B2                     copy_data0:
   153   00F9B2  0009               	tblrd		*+
   154   00F9B4  CFF5 FFEE          	movff	tablat,postinc0
   155   00F9B8  50E5               	movf	postdec1,w,c
   156   00F9BA  50E1               	movf	fsr1l,w,c
   157   00F9BC  E1FA               	bnz	copy_data0
   158                           
   159                           ; Clear objects allocated to COMRAM (4 bytes)
   160   00F9BE  6A3C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   161   00F9C0  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   162   00F9C2  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   163   00F9C4  6A39               	clrf	__pbssCOMRAM& (0+255),c
   164   00F9C6                     end_of_initialization:
   165                           	callstack 0
   166   00F9C6                     __end_of__initialization:
   167                           	callstack 0
   168   00F9C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169   00F9C8  6EF8               	movwf	tblptru,c
   170   00F9CA  0100               	movlb	0
   171   00F9CC  EF5C  F07E         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174   000039                     __pbssCOMRAM:
   175                           	callstack 0
   176   000039                     led_toggle@F3059:
   177                           	callstack 0
   178   000039                     	ds	1
   179   00003A                     led_turn_off@F3054:
   180                           	callstack 0
   181   00003A                     	ds	1
   182   00003B                     led_turn_on@F3049:
   183                           	callstack 0
   184   00003B                     	ds	1
   185   00003C                     led_init@F3044:
   186                           	callstack 0
   187   00003C                     	ds	1
   188                           
   189                           	psect	dataCOMRAM
   190   000001                     __pdataCOMRAM:
   191                           	callstack 0
   192   000001                     _lat_regs:
   193                           	callstack 0
   194   000001                     	ds	10
   195   00000B                     _port_regs:
   196                           	callstack 0
   197   00000B                     	ds	10
   198   000015                     _tris_regs:
   199                           	callstack 0
   200   000015                     	ds	10
   201   00001F                     _btn_low:
   202                           	callstack 0
   203   00001F                     	ds	3
   204   000022                     _btn_high:
   205                           	callstack 0
   206   000022                     	ds	3
   207   000025                     _led2:
   208                           	callstack 0
   209   000025                     	ds	1
   210   000026                     _led1:
   211                           	callstack 0
   212   000026                     	ds	1
   213                           
   214                           	psect	cstackCOMRAM
   215   000027                     __pcstackCOMRAM:
   216                           	callstack 0
   217   000027                     gpio_pin_direction_init@my_pin:
   218                           	callstack 0
   219   000027                     gpio_pin_logic_write@my_pin:
   220                           	callstack 0
   221   000027                     gpio_pin_logic_read@my_pin:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x0
   225   000027                     	ds	2
   226   000029                     ??_gpio_pin_logic_write:
   227   000029                     ??_gpio_pin_direction_init:
   228   000029                     gpio_pin_logic_read@retlogic:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x2
   232   000029                     	ds	2
   233   00002B                     ??_gpio_pin_logic_read:
   234                           
   235                           ; 1 bytes @ 0x4
   236   00002B                     	ds	4
   237   00002F                     gpio_pin_direction_init@ret:
   238                           	callstack 0
   239   00002F                     gpio_pin_logic_write@ret:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x8
   243   00002F                     	ds	1
   244   000030                     led_turn_on@my_led:
   245                           	callstack 0
   246   000030                     led_turn_off@my_led:
   247                           	callstack 0
   248   000030                     gpio_pin_initialize@my_pin:
   249                           	callstack 0
   250   000030                     button_read_status@my_btn:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x9
   254   000030                     	ds	2
   255   000032                     ??_led_turn_on:
   256   000032                     ??_led_turn_off:
   257   000032                     gpio_pin_initialize@ret:
   258                           	callstack 0
   259   000032                     button_read_status@btn_state:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263   000032                     	ds	1
   264   000033                     led_turn_on@my_pin:
   265                           	callstack 0
   266   000033                     led_turn_off@my_pin:
   267                           	callstack 0
   268   000033                     led_init@my_led:
   269                           	callstack 0
   270   000033                     button_inittialze@my_btn:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xC
   274   000033                     	ds	1
   275   000034                     
   276                           ; 1 bytes @ 0xD
   277   000034                     	ds	1
   278   000035                     ??_led_init:
   279   000035                     button_read_status@Pin_Logic_Status:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xE
   283   000035                     	ds	1
   284   000036                     led_init@my_pin:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0xF
   288   000036                     	ds	1
   289   000037                     main@btn_high_status:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x10
   293   000037                     	ds	1
   294   000038                     main@btn_low_status:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x11
   298   000038                     	ds	1
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303 ;; *************** function _main *****************
   304 ;; Defined at:
   305 ;;		line 33 in file "app.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;  btn_low_stat    1   17[COMRAM] enum E3041
   310 ;;  btn_high_sta    1   16[COMRAM] enum E3041
   311 ;; Return value:  Size  Location     Type
   312 ;;                  2  171[None  ] int 
   313 ;; Registers used:
   314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;Total ram usage:        2 bytes
   325 ;; Hardware stack levels required when called: 3
   326 ;; This function calls:
   327 ;;		_button_inittialze
   328 ;;		_button_read_status
   329 ;;		_led_init
   330 ;;		_led_turn_off
   331 ;;		_led_turn_on
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text0
   338   00FCB8                     __ptext0:
   339                           	callstack 0
   340   00FCB8                     _main:
   341                           	callstack 28
   342   00FCB8                     
   343                           ;app.c: 34:     led_init(&led1);
   344   00FCB8  0E26               	movlw	low _led1
   345   00FCBA  6E33               	movwf	led_init@my_led^0,c
   346   00FCBC  0E00               	movlw	high _led1
   347   00FCBE  6E34               	movwf	(led_init@my_led+1)^0,c
   348   00FCC0  EC6B  F07D         	call	_led_init	;wreg free
   349                           
   350                           ;app.c: 35:     led_init(&led2);
   351   00FCC4  0E25               	movlw	low _led2
   352   00FCC6  6E33               	movwf	led_init@my_led^0,c
   353   00FCC8  0E00               	movlw	high _led2
   354   00FCCA  6E34               	movwf	(led_init@my_led+1)^0,c
   355   00FCCC  EC6B  F07D         	call	_led_init	;wreg free
   356                           
   357                           ;app.c: 36:     button_inittialze(&btn_high);
   358   00FCD0  0E22               	movlw	low _btn_high
   359   00FCD2  6E33               	movwf	button_inittialze@my_btn^0,c
   360   00FCD4  0E00               	movlw	high _btn_high
   361   00FCD6  6E34               	movwf	(button_inittialze@my_btn+1)^0,c
   362   00FCD8  ECAA  F07C         	call	_button_inittialze	;wreg free
   363                           
   364                           ;app.c: 37:     button_inittialze(&btn_low);
   365   00FCDC  0E1F               	movlw	low _btn_low
   366   00FCDE  6E33               	movwf	button_inittialze@my_btn^0,c
   367   00FCE0  0E00               	movlw	high _btn_low
   368   00FCE2  6E34               	movwf	(button_inittialze@my_btn+1)^0,c
   369   00FCE4  ECAA  F07C         	call	_button_inittialze	;wreg free
   370   00FCE8                     
   371                           ;app.c: 38:     btn_press_state_t btn_high_status = btn_released;
   372   00FCE8  0E01               	movlw	1
   373   00FCEA  6E37               	movwf	main@btn_high_status^0,c
   374   00FCEC                     
   375                           ;app.c: 39:     btn_press_state_t btn_low_status = btn_released;
   376   00FCEC  0E01               	movlw	1
   377   00FCEE  6E38               	movwf	main@btn_low_status^0,c
   378   00FCF0                     l172:
   379                           
   380                           ;app.c: 41:         button_read_status(&btn_high, &btn_high_status);
   381   00FCF0  0E22               	movlw	low _btn_high
   382   00FCF2  6E30               	movwf	button_read_status@my_btn^0,c
   383   00FCF4  0E00               	movlw	high _btn_high
   384   00FCF6  6E31               	movwf	(button_read_status@my_btn+1)^0,c
   385   00FCF8  0E37               	movlw	low main@btn_high_status
   386   00FCFA  6E32               	movwf	button_read_status@btn_state^0,c
   387   00FCFC  0E00               	movlw	high main@btn_high_status
   388   00FCFE  6E33               	movwf	(button_read_status@btn_state+1)^0,c
   389   00FD00  ECFD  F07D         	call	_button_read_status	;wreg free
   390                           
   391                           ;app.c: 42:         button_read_status(&btn_low, &btn_low_status);
   392   00FD04  0E1F               	movlw	low _btn_low
   393   00FD06  6E30               	movwf	button_read_status@my_btn^0,c
   394   00FD08  0E00               	movlw	high _btn_low
   395   00FD0A  6E31               	movwf	(button_read_status@my_btn+1)^0,c
   396   00FD0C  0E38               	movlw	low main@btn_low_status
   397   00FD0E  6E32               	movwf	button_read_status@btn_state^0,c
   398   00FD10  0E00               	movlw	high main@btn_low_status
   399   00FD12  6E33               	movwf	(button_read_status@btn_state+1)^0,c
   400   00FD14  ECFD  F07D         	call	_button_read_status	;wreg free
   401   00FD18                     
   402                           ;app.c: 44:         if(btn_pressed == btn_high_status){
   403   00FD18  5037               	movf	main@btn_high_status^0,w,c
   404   00FD1A  A4D8               	btfss	status,2,c
   405   00FD1C  EF92  F07E         	goto	u751
   406   00FD20  EF94  F07E         	goto	u750
   407   00FD24                     u751:
   408   00FD24  EF9C  F07E         	goto	l1358
   409   00FD28                     u750:
   410   00FD28                     
   411                           ;app.c: 45:             led_turn_on(&led1);
   412   00FD28  0E26               	movlw	low _led1
   413   00FD2A  6E30               	movwf	led_turn_on@my_led^0,c
   414   00FD2C  0E00               	movlw	high _led1
   415   00FD2E  6E31               	movwf	(led_turn_on@my_led+1)^0,c
   416   00FD30  EC38  F07D         	call	_led_turn_on	;wreg free
   417                           
   418                           ;app.c: 46:         }
   419   00FD34  EFA2  F07E         	goto	l1360
   420   00FD38                     l1358:
   421                           
   422                           ;app.c: 48:             led_turn_off(&led1);
   423   00FD38  0E26               	movlw	low _led1
   424   00FD3A  6E30               	movwf	led_turn_off@my_led^0,c
   425   00FD3C  0E00               	movlw	high _led1
   426   00FD3E  6E31               	movwf	(led_turn_off@my_led+1)^0,c
   427   00FD40  EC05  F07D         	call	_led_turn_off	;wreg free
   428   00FD44                     l1360:
   429                           
   430                           ;app.c: 51:         if(btn_pressed == btn_low_status){
   431   00FD44  5038               	movf	main@btn_low_status^0,w,c
   432   00FD46  A4D8               	btfss	status,2,c
   433   00FD48  EFA8  F07E         	goto	u761
   434   00FD4C  EFAA  F07E         	goto	u760
   435   00FD50                     u761:
   436   00FD50  EFB2  F07E         	goto	l1364
   437   00FD54                     u760:
   438   00FD54                     
   439                           ;app.c: 52:             led_turn_on(&led2);
   440   00FD54  0E25               	movlw	low _led2
   441   00FD56  6E30               	movwf	led_turn_on@my_led^0,c
   442   00FD58  0E00               	movlw	high _led2
   443   00FD5A  6E31               	movwf	(led_turn_on@my_led+1)^0,c
   444   00FD5C  EC38  F07D         	call	_led_turn_on	;wreg free
   445                           
   446                           ;app.c: 53:         }
   447   00FD60  EF78  F07E         	goto	l172
   448   00FD64                     l1364:
   449                           
   450                           ;app.c: 55:             led_turn_off(&led2);
   451   00FD64  0E25               	movlw	low _led2
   452   00FD66  6E30               	movwf	led_turn_off@my_led^0,c
   453   00FD68  0E00               	movlw	high _led2
   454   00FD6A  6E31               	movwf	(led_turn_off@my_led+1)^0,c
   455   00FD6C  EC05  F07D         	call	_led_turn_off	;wreg free
   456   00FD70  EF78  F07E         	goto	l172
   457   00FD74  EF00  F000         	goto	start
   458   00FD78                     __end_of_main:
   459                           	callstack 0
   460                           
   461 ;; *************** function _led_turn_on *****************
   462 ;; Defined at:
   463 ;;		line 15 in file "ECU_L/LED/led.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  my_led          2    9[COMRAM] PTR const struct .
   466 ;;		 -> led2(1), led1(1), 
   467 ;; Auto vars:     Size  Location     Type
   468 ;;  my_pin          1   12[COMRAM] struct .
   469 ;;  ret             1    0        unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      unsigned char 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;Total ram usage:        4 bytes
   484 ;; Hardware stack levels used: 1
   485 ;; Hardware stack levels required when called: 1
   486 ;; This function calls:
   487 ;;		_gpio_pin_logic_write
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           	psect	text1
   494   00FA70                     __ptext1:
   495                           	callstack 0
   496   00FA70                     _led_turn_on:
   497                           	callstack 29
   498   00FA70                     
   499                           ;ECU_L/LED/led.c: 17:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_high};
   500   00FA70  C03B  F033         	movff	led_turn_on@F3049,led_turn_on@my_pin
   501   00FA74  C030  FFD9         	movff	led_turn_on@my_led,fsr2l
   502   00FA78  C031  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   503   00FA7C  50DF               	movf	223,w,c
   504   00FA7E  0B07               	andlw	7
   505   00FA80  6E32               	movwf	??_led_turn_on^0,c
   506   00FA82  5033               	movf	led_turn_on@my_pin^0,w,c
   507   00FA84  1832               	xorwf	??_led_turn_on^0,w,c
   508   00FA86  0BF8               	andlw	-8
   509   00FA88  1832               	xorwf	??_led_turn_on^0,w,c
   510   00FA8A  6E33               	movwf	led_turn_on@my_pin^0,c
   511   00FA8C  C030  FFD9         	movff	led_turn_on@my_led,fsr2l
   512   00FA90  C031  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   513   00FA94  30DF               	rrcf	223,w,c
   514   00FA96  32E8               	rrcf	wreg,f,c
   515   00FA98  32E8               	rrcf	wreg,f,c
   516   00FA9A  0B07               	andlw	7
   517   00FA9C  6E32               	movwf	??_led_turn_on^0,c
   518   00FA9E  4632               	rlncf	??_led_turn_on^0,f,c
   519   00FAA0  4632               	rlncf	??_led_turn_on^0,f,c
   520   00FAA2  4632               	rlncf	??_led_turn_on^0,f,c
   521   00FAA4  5033               	movf	led_turn_on@my_pin^0,w,c
   522   00FAA6  1832               	xorwf	??_led_turn_on^0,w,c
   523   00FAA8  0BC7               	andlw	-57
   524   00FAAA  1832               	xorwf	??_led_turn_on^0,w,c
   525   00FAAC  6E33               	movwf	led_turn_on@my_pin^0,c
   526   00FAAE  9C33               	bcf	led_turn_on@my_pin^0,6,c
   527   00FAB0  8E33               	bsf	led_turn_on@my_pin^0,7,c
   528   00FAB2                     
   529                           ;ECU_L/LED/led.c: 18:     if(my_led == ((void*)0)){
   530   00FAB2  5030               	movf	led_turn_on@my_led^0,w,c
   531   00FAB4  1031               	iorwf	(led_turn_on@my_led+1)^0,w,c
   532   00FAB6  A4D8               	btfss	status,2,c
   533   00FAB8  EF60  F07D         	goto	u661
   534   00FABC  EF62  F07D         	goto	u660
   535   00FAC0                     u661:
   536   00FAC0  EF64  F07D         	goto	l1286
   537   00FAC4                     u660:
   538   00FAC4                     
   539                           ;ECU_L/LED/led.c: 20:     }
   540   00FAC4  EF6A  F07D         	goto	l20
   541   00FAC8                     l1286:
   542   00FAC8  0E33               	movlw	low led_turn_on@my_pin
   543   00FACA  6E27               	movwf	gpio_pin_logic_write@my_pin^0,c
   544   00FACC  0E00               	movlw	high led_turn_on@my_pin
   545   00FACE  6E28               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   546   00FAD0  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
   547   00FAD4                     l20:
   548   00FAD4  0012               	return		;funcret
   549   00FAD6                     __end_of_led_turn_on:
   550                           	callstack 0
   551                           
   552 ;; *************** function _led_turn_off *****************
   553 ;; Defined at:
   554 ;;		line 26 in file "ECU_L/LED/led.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  my_led          2    9[COMRAM] PTR const struct .
   557 ;;		 -> led2(1), led1(1), 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  my_pin          1   12[COMRAM] struct .
   560 ;;  ret             1    0        unsigned char 
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      unsigned char 
   563 ;; Registers used:
   564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        4 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; Hardware stack levels required when called: 1
   577 ;; This function calls:
   578 ;;		_gpio_pin_logic_write
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585   00FA0A                     __ptext2:
   586                           	callstack 0
   587   00FA0A                     _led_turn_off:
   588                           	callstack 29
   589   00FA0A                     
   590                           ;ECU_L/LED/led.c: 28:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_low};
   591   00FA0A  C03A  F033         	movff	led_turn_off@F3054,led_turn_off@my_pin
   592   00FA0E  C030  FFD9         	movff	led_turn_off@my_led,fsr2l
   593   00FA12  C031  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   594   00FA16  50DF               	movf	223,w,c
   595   00FA18  0B07               	andlw	7
   596   00FA1A  6E32               	movwf	??_led_turn_off^0,c
   597   00FA1C  5033               	movf	led_turn_off@my_pin^0,w,c
   598   00FA1E  1832               	xorwf	??_led_turn_off^0,w,c
   599   00FA20  0BF8               	andlw	-8
   600   00FA22  1832               	xorwf	??_led_turn_off^0,w,c
   601   00FA24  6E33               	movwf	led_turn_off@my_pin^0,c
   602   00FA26  C030  FFD9         	movff	led_turn_off@my_led,fsr2l
   603   00FA2A  C031  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   604   00FA2E  30DF               	rrcf	223,w,c
   605   00FA30  32E8               	rrcf	wreg,f,c
   606   00FA32  32E8               	rrcf	wreg,f,c
   607   00FA34  0B07               	andlw	7
   608   00FA36  6E32               	movwf	??_led_turn_off^0,c
   609   00FA38  4632               	rlncf	??_led_turn_off^0,f,c
   610   00FA3A  4632               	rlncf	??_led_turn_off^0,f,c
   611   00FA3C  4632               	rlncf	??_led_turn_off^0,f,c
   612   00FA3E  5033               	movf	led_turn_off@my_pin^0,w,c
   613   00FA40  1832               	xorwf	??_led_turn_off^0,w,c
   614   00FA42  0BC7               	andlw	-57
   615   00FA44  1832               	xorwf	??_led_turn_off^0,w,c
   616   00FA46  6E33               	movwf	led_turn_off@my_pin^0,c
   617   00FA48  9C33               	bcf	led_turn_off@my_pin^0,6,c
   618   00FA4A  9E33               	bcf	led_turn_off@my_pin^0,7,c
   619   00FA4C                     
   620                           ;ECU_L/LED/led.c: 29:     if(my_led == ((void*)0)){
   621   00FA4C  5030               	movf	led_turn_off@my_led^0,w,c
   622   00FA4E  1031               	iorwf	(led_turn_off@my_led+1)^0,w,c
   623   00FA50  A4D8               	btfss	status,2,c
   624   00FA52  EF2D  F07D         	goto	u671
   625   00FA56  EF2F  F07D         	goto	u670
   626   00FA5A                     u671:
   627   00FA5A  EF31  F07D         	goto	l1306
   628   00FA5E                     u670:
   629   00FA5E                     
   630                           ;ECU_L/LED/led.c: 31:     }
   631   00FA5E  EF37  F07D         	goto	l27
   632   00FA62                     l1306:
   633   00FA62  0E33               	movlw	low led_turn_off@my_pin
   634   00FA64  6E27               	movwf	gpio_pin_logic_write@my_pin^0,c
   635   00FA66  0E00               	movlw	high led_turn_off@my_pin
   636   00FA68  6E28               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   637   00FA6A  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
   638   00FA6E                     l27:
   639   00FA6E  0012               	return		;funcret
   640   00FA70                     __end_of_led_turn_off:
   641                           	callstack 0
   642                           
   643 ;; *************** function _led_init *****************
   644 ;; Defined at:
   645 ;;		line 4 in file "ECU_L/LED/led.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  my_led          2   12[COMRAM] PTR const struct .
   648 ;;		 -> led2(1), led1(1), 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  my_pin          1   15[COMRAM] struct .
   651 ;;  ret             1    0        unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      unsigned char 
   654 ;; Registers used:
   655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        4 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 2
   668 ;; This function calls:
   669 ;;		_gpio_pin_initialize
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text3
   676   00FAD6                     __ptext3:
   677                           	callstack 0
   678   00FAD6                     _led_init:
   679                           	callstack 28
   680   00FAD6                     
   681                           ;ECU_L/LED/led.c: 6:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio_
      +                          output, my_led->led_status};
   682   00FAD6  C03C  F036         	movff	led_init@F3044,led_init@my_pin
   683   00FADA  C033  FFD9         	movff	led_init@my_led,fsr2l
   684   00FADE  C034  FFDA         	movff	led_init@my_led+1,fsr2h
   685   00FAE2  50DF               	movf	223,w,c
   686   00FAE4  0B07               	andlw	7
   687   00FAE6  6E35               	movwf	??_led_init^0,c
   688   00FAE8  5036               	movf	led_init@my_pin^0,w,c
   689   00FAEA  1835               	xorwf	??_led_init^0,w,c
   690   00FAEC  0BF8               	andlw	-8
   691   00FAEE  1835               	xorwf	??_led_init^0,w,c
   692   00FAF0  6E36               	movwf	led_init@my_pin^0,c
   693   00FAF2  C033  FFD9         	movff	led_init@my_led,fsr2l
   694   00FAF6  C034  FFDA         	movff	led_init@my_led+1,fsr2h
   695   00FAFA  30DF               	rrcf	223,w,c
   696   00FAFC  32E8               	rrcf	wreg,f,c
   697   00FAFE  32E8               	rrcf	wreg,f,c
   698   00FB00  0B07               	andlw	7
   699   00FB02  6E35               	movwf	??_led_init^0,c
   700   00FB04  4635               	rlncf	??_led_init^0,f,c
   701   00FB06  4635               	rlncf	??_led_init^0,f,c
   702   00FB08  4635               	rlncf	??_led_init^0,f,c
   703   00FB0A  5036               	movf	led_init@my_pin^0,w,c
   704   00FB0C  1835               	xorwf	??_led_init^0,w,c
   705   00FB0E  0BC7               	andlw	-57
   706   00FB10  1835               	xorwf	??_led_init^0,w,c
   707   00FB12  6E36               	movwf	led_init@my_pin^0,c
   708   00FB14  9C36               	bcf	led_init@my_pin^0,6,c
   709   00FB16  C033  FFD9         	movff	led_init@my_led,fsr2l
   710   00FB1A  C034  FFDA         	movff	led_init@my_led+1,fsr2h
   711   00FB1E  ACDF               	btfss	indf2,6,c
   712   00FB20  D002               	bra	u645
   713   00FB22  8E36               	bsf	led_init@my_pin^0,7,c
   714   00FB24  D001               	bra	u647
   715   00FB26                     u645:
   716   00FB26  9E36               	bcf	led_init@my_pin^0,7,c
   717   00FB28                     u647:
   718   00FB28                     
   719                           ;ECU_L/LED/led.c: 7:     if(my_led == ((void*)0)){
   720   00FB28  5033               	movf	led_init@my_led^0,w,c
   721   00FB2A  1034               	iorwf	(led_init@my_led+1)^0,w,c
   722   00FB2C  A4D8               	btfss	status,2,c
   723   00FB2E  EF9B  F07D         	goto	u651
   724   00FB32  EF9D  F07D         	goto	u650
   725   00FB36                     u651:
   726   00FB36  EF9F  F07D         	goto	l1266
   727   00FB3A                     u650:
   728   00FB3A                     
   729                           ;ECU_L/LED/led.c: 9:     }
   730   00FB3A  EFA5  F07D         	goto	l13
   731   00FB3E                     l1266:
   732   00FB3E  0E36               	movlw	low led_init@my_pin
   733   00FB40  6E30               	movwf	gpio_pin_initialize@my_pin^0,c
   734   00FB42  0E00               	movlw	high led_init@my_pin
   735   00FB44  6E31               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   736   00FB46  ECE8  F07C         	call	_gpio_pin_initialize	;wreg free
   737   00FB4A                     l13:
   738   00FB4A  0012               	return		;funcret
   739   00FB4C                     __end_of_led_init:
   740                           	callstack 0
   741                           
   742 ;; *************** function _button_read_status *****************
   743 ;; Defined at:
   744 ;;		line 14 in file "ECU_L/BUTTON/button.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  my_btn          2    9[COMRAM] PTR struct .
   747 ;;		 -> btn_low(3), btn_high(3), 
   748 ;;  btn_state       2   11[COMRAM] PTR enum E3024
   749 ;;		 -> main@btn_low_status(1), main@btn_high_status(1), 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  Pin_Logic_St    1   14[COMRAM] enum E2965
   752 ;;  ret             1    0        unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        6 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 1
   769 ;; This function calls:
   770 ;;		_gpio_pin_logic_read
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text4
   777   00FBFA                     __ptext4:
   778                           	callstack 0
   779   00FBFA                     _button_read_status:
   780                           	callstack 29
   781   00FBFA                     
   782                           ;ECU_L/BUTTON/button.c: 16:     logic_t Pin_Logic_Status = gpio_low;
   783   00FBFA  0E00               	movlw	0
   784   00FBFC  6E35               	movwf	button_read_status@Pin_Logic_Status^0,c
   785   00FBFE                     
   786                           ;ECU_L/BUTTON/button.c: 17:     if((((void*)0) == my_btn) || (((void*)0) == btn_state)){
   787   00FBFE  5030               	movf	button_read_status@my_btn^0,w,c
   788   00FC00  1031               	iorwf	(button_read_status@my_btn+1)^0,w,c
   789   00FC02  B4D8               	btfsc	status,2,c
   790   00FC04  EF06  F07E         	goto	u691
   791   00FC08  EF08  F07E         	goto	u690
   792   00FC0C                     u691:
   793   00FC0C  EF11  F07E         	goto	l1326
   794   00FC10                     u690:
   795   00FC10  5032               	movf	button_read_status@btn_state^0,w,c
   796   00FC12  1033               	iorwf	(button_read_status@btn_state+1)^0,w,c
   797   00FC14  A4D8               	btfss	status,2,c
   798   00FC16  EF0F  F07E         	goto	u701
   799   00FC1A  EF11  F07E         	goto	u700
   800   00FC1E                     u701:
   801   00FC1E  EF13  F07E         	goto	l1328
   802   00FC22                     u700:
   803   00FC22                     l1326:
   804                           
   805                           ;ECU_L/BUTTON/button.c: 19:     }
   806   00FC22  EF5B  F07E         	goto	l202
   807   00FC26                     l1328:
   808                           
   809                           ;ECU_L/BUTTON/button.c: 21:         gpio_pin_logic_read(&(my_btn->button_pin), &Pin_Logi
      +                          c_Status);
   810   00FC26  C030  F027         	movff	button_read_status@my_btn,gpio_pin_logic_read@my_pin
   811   00FC2A  C031  F028         	movff	button_read_status@my_btn+1,gpio_pin_logic_read@my_pin+1
   812   00FC2E  0E35               	movlw	low button_read_status@Pin_Logic_Status
   813   00FC30  6E29               	movwf	gpio_pin_logic_read@retlogic^0,c
   814   00FC32  0E00               	movlw	high button_read_status@Pin_Logic_Status
   815   00FC34  6E2A               	movwf	(gpio_pin_logic_read@retlogic+1)^0,c
   816   00FC36  ECA6  F07D         	call	_gpio_pin_logic_read	;wreg free
   817   00FC3A                     
   818                           ;ECU_L/BUTTON/button.c: 22:         if(btn_active_high == my_btn->button_activate){
   819   00FC3A  EE20 F002          	lfsr	2,2
   820   00FC3E  5030               	movf	button_read_status@my_btn^0,w,c
   821   00FC40  26D9               	addwf	fsr2l,f,c
   822   00FC42  5031               	movf	(button_read_status@my_btn+1)^0,w,c
   823   00FC44  22DA               	addwfc	fsr2h,f,c
   824   00FC46  50DF               	movf	indf2,w,c
   825   00FC48  A4D8               	btfss	status,2,c
   826   00FC4A  EF29  F07E         	goto	u711
   827   00FC4E  EF2B  F07E         	goto	u710
   828   00FC52                     u711:
   829   00FC52  EF43  F07E         	goto	l1338
   830   00FC56                     u710:
   831   00FC56                     
   832                           ;ECU_L/BUTTON/button.c: 23:             if(gpio_high == Pin_Logic_Status){
   833   00FC56  0435               	decf	button_read_status@Pin_Logic_Status^0,w,c
   834   00FC58  A4D8               	btfss	status,2,c
   835   00FC5A  EF31  F07E         	goto	u721
   836   00FC5E  EF33  F07E         	goto	u720
   837   00FC62                     u721:
   838   00FC62  EF3B  F07E         	goto	l1336
   839   00FC66                     u720:
   840   00FC66                     l1334:
   841                           
   842                           ;ECU_L/BUTTON/button.c: 24:                 *btn_state = btn_pressed;
   843   00FC66  C032  FFD9         	movff	button_read_status@btn_state,fsr2l
   844   00FC6A  C033  FFDA         	movff	button_read_status@btn_state+1,fsr2h
   845   00FC6E  0E00               	movlw	0
   846   00FC70  6EDF               	movwf	indf2,c
   847                           
   848                           ;ECU_L/BUTTON/button.c: 25:             }
   849   00FC72  EF5B  F07E         	goto	l202
   850   00FC76                     l1336:
   851                           
   852                           ;ECU_L/BUTTON/button.c: 27:                 *btn_state = btn_released;
   853   00FC76  C032  FFD9         	movff	button_read_status@btn_state,fsr2l
   854   00FC7A  C033  FFDA         	movff	button_read_status@btn_state+1,fsr2h
   855   00FC7E  0E01               	movlw	1
   856   00FC80  6EDF               	movwf	indf2,c
   857   00FC82  EF5B  F07E         	goto	l202
   858   00FC86                     l1338:
   859   00FC86  EE20 F002          	lfsr	2,2
   860   00FC8A  5030               	movf	button_read_status@my_btn^0,w,c
   861   00FC8C  26D9               	addwf	fsr2l,f,c
   862   00FC8E  5031               	movf	(button_read_status@my_btn+1)^0,w,c
   863   00FC90  22DA               	addwfc	fsr2h,f,c
   864   00FC92  04DE               	decf	postinc2,w,c
   865   00FC94  A4D8               	btfss	status,2,c
   866   00FC96  EF4F  F07E         	goto	u731
   867   00FC9A  EF51  F07E         	goto	u730
   868   00FC9E                     u731:
   869   00FC9E  EF5B  F07E         	goto	l194
   870   00FCA2                     u730:
   871   00FCA2                     
   872                           ;ECU_L/BUTTON/button.c: 31:             if(gpio_high == Pin_Logic_Status){
   873   00FCA2  0435               	decf	button_read_status@Pin_Logic_Status^0,w,c
   874   00FCA4  A4D8               	btfss	status,2,c
   875   00FCA6  EF57  F07E         	goto	u741
   876   00FCAA  EF59  F07E         	goto	u740
   877   00FCAE                     u741:
   878   00FCAE  EF33  F07E         	goto	l1334
   879   00FCB2                     u740:
   880   00FCB2  EF3B  F07E         	goto	l1336
   881   00FCB6                     l194:
   882   00FCB6                     l202:
   883   00FCB6  0012               	return		;funcret
   884   00FCB8                     __end_of_button_read_status:
   885                           	callstack 0
   886                           
   887 ;; *************** function _gpio_pin_logic_read *****************
   888 ;; Defined at:
   889 ;;		line 59 in file "MCAL/GPIO/gpio.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  my_pin          2    0[COMRAM] PTR const struct .
   892 ;;		 -> btn_low.button_pin(1), btn_low(3), btn_high.button_pin(1), btn_high(3), 
   893 ;;  retlogic        2    2[COMRAM] PTR enum E2965
   894 ;;		 -> button_read_status@Pin_Logic_Status(1), 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  ret             1    0        unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   908 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;Total ram usage:        9 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_button_read_status
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text5
   920   00FB4C                     __ptext5:
   921                           	callstack 0
   922   00FB4C                     _gpio_pin_logic_read:
   923                           	callstack 29
   924   00FB4C                     
   925                           ;MCAL/GPIO/gpio.c: 61:     if(((void*)0) == my_pin || my_pin->pin > 7 || ((void*)0) == r
      +                          etlogic){
   926   00FB4C  5027               	movf	gpio_pin_logic_read@my_pin^0,w,c
   927   00FB4E  1028               	iorwf	(gpio_pin_logic_read@my_pin+1)^0,w,c
   928   00FB50  B4D8               	btfsc	status,2,c
   929   00FB52  EFAD  F07D         	goto	u601
   930   00FB56  EFAF  F07D         	goto	u600
   931   00FB5A                     u601:
   932   00FB5A  EFC9  F07D         	goto	l1244
   933   00FB5E                     u600:
   934   00FB5E  C027  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
   935   00FB62  C028  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
   936   00FB66  30DF               	rrcf	223,w,c
   937   00FB68  32E8               	rrcf	wreg,f,c
   938   00FB6A  32E8               	rrcf	wreg,f,c
   939   00FB6C  0B07               	andlw	7
   940   00FB6E  6E2B               	movwf	??_gpio_pin_logic_read^0,c
   941   00FB70  0E08               	movlw	8
   942   00FB72  602B               	cpfslt	??_gpio_pin_logic_read^0,c
   943   00FB74  EFBE  F07D         	goto	u611
   944   00FB78  EFC0  F07D         	goto	u610
   945   00FB7C                     u611:
   946   00FB7C  EFC9  F07D         	goto	l1244
   947   00FB80                     u610:
   948   00FB80  5029               	movf	gpio_pin_logic_read@retlogic^0,w,c
   949   00FB82  102A               	iorwf	(gpio_pin_logic_read@retlogic+1)^0,w,c
   950   00FB84  A4D8               	btfss	status,2,c
   951   00FB86  EFC7  F07D         	goto	u621
   952   00FB8A  EFC9  F07D         	goto	u620
   953   00FB8E                     u621:
   954   00FB8E  EFCB  F07D         	goto	l1246
   955   00FB92                     u620:
   956   00FB92                     l1244:
   957                           
   958                           ;MCAL/GPIO/gpio.c: 63:     }
   959   00FB92  EFFC  F07D         	goto	l108
   960   00FB96                     l1246:
   961                           
   962                           ;MCAL/GPIO/gpio.c: 65:         *retlogic = ((*port_regs[my_pin->port]>>my_pin->pin) & 1)
      +                          ;
   963   00FB96  C027  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
   964   00FB9A  C028  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
   965   00FB9E  30DF               	rrcf	223,w,c
   966   00FBA0  32E8               	rrcf	wreg,f,c
   967   00FBA2  32E8               	rrcf	wreg,f,c
   968   00FBA4  0B07               	andlw	7
   969   00FBA6  6E2B               	movwf	??_gpio_pin_logic_read^0,c
   970   00FBA8  C027  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
   971   00FBAC  C028  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
   972   00FBB0  50DF               	movf	223,w,c
   973   00FBB2  0B07               	andlw	7
   974   00FBB4  6E2C               	movwf	(??_gpio_pin_logic_read+1)^0,c
   975   00FBB6  502C               	movf	(??_gpio_pin_logic_read+1)^0,w,c
   976   00FBB8  0D02               	mullw	2
   977   00FBBA  0E0B               	movlw	low _port_regs
   978   00FBBC  24F3               	addwf	243,w,c
   979   00FBBE  6ED9               	movwf	fsr2l,c
   980   00FBC0  0E00               	movlw	high _port_regs
   981   00FBC2  20F4               	addwfc	prodh,w,c
   982   00FBC4  6EDA               	movwf	fsr2h,c
   983   00FBC6  CFDE F02D          	movff	postinc2,??_gpio_pin_logic_read+2
   984   00FBCA  CFDD F02E          	movff	postdec2,??_gpio_pin_logic_read+3
   985   00FBCE  C02D  FFD9         	movff	??_gpio_pin_logic_read+2,fsr2l
   986   00FBD2  C02E  FFDA         	movff	??_gpio_pin_logic_read+3,fsr2h
   987   00FBD6  50DF               	movf	indf2,w,c
   988   00FBD8  6E2F               	movwf	(??_gpio_pin_logic_read+4)^0,c
   989   00FBDA  2A2B               	incf	??_gpio_pin_logic_read^0,f,c
   990   00FBDC  EFF2  F07D         	goto	u634
   991   00FBE0                     u635:
   992   00FBE0  90D8               	bcf	status,0,c
   993   00FBE2  322F               	rrcf	(??_gpio_pin_logic_read+4)^0,f,c
   994   00FBE4                     u634:
   995   00FBE4  2E2B               	decfsz	??_gpio_pin_logic_read^0,f,c
   996   00FBE6  EFF0  F07D         	goto	u635
   997   00FBEA  502F               	movf	(??_gpio_pin_logic_read+4)^0,w,c
   998   00FBEC  0B01               	andlw	1
   999   00FBEE  C029  FFD9         	movff	gpio_pin_logic_read@retlogic,fsr2l
  1000   00FBF2  C02A  FFDA         	movff	gpio_pin_logic_read@retlogic+1,fsr2h
  1001   00FBF6  6EDF               	movwf	indf2,c
  1002   00FBF8                     l108:
  1003   00FBF8  0012               	return		;funcret
  1004   00FBFA                     __end_of_gpio_pin_logic_read:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _button_inittialze *****************
  1008 ;; Defined at:
  1009 ;;		line 4 in file "ECU_L/BUTTON/button.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  my_btn          2   12[COMRAM] PTR struct .
  1012 ;;		 -> btn_low(3), btn_high(3), 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  ret             1    0        unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        2 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 2
  1031 ;; This function calls:
  1032 ;;		_gpio_pin_initialize
  1033 ;; This function is called by:
  1034 ;;		_main
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text6
  1039   00F954                     __ptext6:
  1040                           	callstack 0
  1041   00F954                     _button_inittialze:
  1042                           	callstack 28
  1043   00F954                     
  1044                           ;ECU_L/BUTTON/button.c: 6:     if(((void*)0) == my_btn){
  1045   00F954  5033               	movf	button_inittialze@my_btn^0,w,c
  1046   00F956  1034               	iorwf	(button_inittialze@my_btn+1)^0,w,c
  1047   00F958  A4D8               	btfss	status,2,c
  1048   00F95A  EFB1  F07C         	goto	u681
  1049   00F95E  EFB3  F07C         	goto	u680
  1050   00F962                     u681:
  1051   00F962  EFB5  F07C         	goto	l1316
  1052   00F966                     u680:
  1053   00F966                     
  1054                           ;ECU_L/BUTTON/button.c: 8:     }
  1055   00F966  EFBB  F07C         	goto	l188
  1056   00F96A                     l1316:
  1057   00F96A  C033  F030         	movff	button_inittialze@my_btn,gpio_pin_initialize@my_pin
  1058   00F96E  C034  F031         	movff	button_inittialze@my_btn+1,gpio_pin_initialize@my_pin+1
  1059   00F972  ECE8  F07C         	call	_gpio_pin_initialize	;wreg free
  1060   00F976                     l188:
  1061   00F976  0012               	return		;funcret
  1062   00F978                     __end_of_button_inittialze:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _gpio_pin_initialize *****************
  1066 ;; Defined at:
  1067 ;;		line 79 in file "MCAL/GPIO/gpio.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  my_pin          2    9[COMRAM] PTR const struct .
  1070 ;;		 -> btn_low.button_pin(1), btn_low(3), btn_high.button_pin(1), btn_high(3), 
  1071 ;;		 -> led_init@my_pin(1), 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  ret             1   11[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      unsigned char 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        3 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 1
  1090 ;; This function calls:
  1091 ;;		_gpio_pin_direction_init
  1092 ;;		_gpio_pin_logic_write
  1093 ;; This function is called by:
  1094 ;;		_led_init
  1095 ;;		_button_inittialze
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text7
  1100   00F9D0                     __ptext7:
  1101                           	callstack 0
  1102   00F9D0                     _gpio_pin_initialize:
  1103                           	callstack 28
  1104   00F9D0                     
  1105                           ;MCAL/GPIO/gpio.c: 81:     if (((void*)0) == my_pin){
  1106   00F9D0  5030               	movf	gpio_pin_initialize@my_pin^0,w,c
  1107   00F9D2  1031               	iorwf	(gpio_pin_initialize@my_pin+1)^0,w,c
  1108   00F9D4  A4D8               	btfss	status,2,c
  1109   00F9D6  EFEF  F07C         	goto	u591
  1110   00F9DA  EFF1  F07C         	goto	u590
  1111   00F9DE                     u591:
  1112   00F9DE  EFF5  F07C         	goto	l1230
  1113   00F9E2                     u590:
  1114   00F9E2                     
  1115                           ;MCAL/GPIO/gpio.c: 82:         ret = (Std_ReturnType)0x00;
  1116   00F9E2  0E00               	movlw	0
  1117   00F9E4  6E32               	movwf	gpio_pin_initialize@ret^0,c
  1118                           
  1119                           ;MCAL/GPIO/gpio.c: 83:     }
  1120   00F9E6  EF03  F07D         	goto	l1232
  1121   00F9EA                     l1230:
  1122                           
  1123                           ;MCAL/GPIO/gpio.c: 85:         ret = gpio_pin_direction_init(my_pin);
  1124   00F9EA  C030  F027         	movff	gpio_pin_initialize@my_pin,gpio_pin_direction_init@my_pin
  1125   00F9EE  C031  F028         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_direction_init@my_pin+1
  1126   00F9F2  ECBC  F07E         	call	_gpio_pin_direction_init	;wreg free
  1127   00F9F6  6E32               	movwf	gpio_pin_initialize@ret^0,c
  1128                           
  1129                           ;MCAL/GPIO/gpio.c: 86:         ret = gpio_pin_logic_write(my_pin);
  1130   00F9F8  C030  F027         	movff	gpio_pin_initialize@my_pin,gpio_pin_logic_write@my_pin
  1131   00F9FC  C031  F028         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_logic_write@my_pin+1
  1132   00FA00  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
  1133   00FA04  6E32               	movwf	gpio_pin_initialize@ret^0,c
  1134   00FA06                     l1232:
  1135                           
  1136                           ;MCAL/GPIO/gpio.c: 88:     return ret;
  1137   00FA06  5032               	movf	gpio_pin_initialize@ret^0,w,c
  1138   00FA08  0012               	return		;funcret
  1139   00FA0A                     __end_of_gpio_pin_initialize:
  1140                           	callstack 0
  1141                           
  1142 ;; *************** function _gpio_pin_logic_write *****************
  1143 ;; Defined at:
  1144 ;;		line 41 in file "MCAL/GPIO/gpio.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1147 ;;		 -> btn_low.button_pin(1), btn_low(3), btn_high.button_pin(1), btn_high(3), 
  1148 ;;		 -> led_turn_off@my_pin(1), led_turn_on@my_pin(1), led_init@my_pin(1), 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  ret             1    8[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      unsigned char 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;Total ram usage:        9 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_led_turn_on
  1170 ;;		_led_turn_off
  1171 ;;		_gpio_pin_initialize
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text8
  1176   00FEBC                     __ptext8:
  1177                           	callstack 0
  1178   00FEBC                     _gpio_pin_logic_write:
  1179                           	callstack 29
  1180   00FEBC                     
  1181                           ;MCAL/GPIO/gpio.c: 42:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1182   00FEBC  0E01               	movlw	1
  1183   00FEBE  6E2F               	movwf	gpio_pin_logic_write@ret^0,c
  1184   00FEC0                     
  1185                           ;MCAL/GPIO/gpio.c: 43:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
  1186   00FEC0  5027               	movf	gpio_pin_logic_write@my_pin^0,w,c
  1187   00FEC2  1028               	iorwf	(gpio_pin_logic_write@my_pin+1)^0,w,c
  1188   00FEC4  B4D8               	btfsc	status,2,c
  1189   00FEC6  EF67  F07F         	goto	u471
  1190   00FECA  EF69  F07F         	goto	u470
  1191   00FECE                     u471:
  1192   00FECE  EF7A  F07F         	goto	l1182
  1193   00FED2                     u470:
  1194   00FED2  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1195   00FED6  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1196   00FEDA  30DF               	rrcf	223,w,c
  1197   00FEDC  32E8               	rrcf	wreg,f,c
  1198   00FEDE  32E8               	rrcf	wreg,f,c
  1199   00FEE0  0B07               	andlw	7
  1200   00FEE2  6E29               	movwf	??_gpio_pin_logic_write^0,c
  1201   00FEE4  0E07               	movlw	7
  1202   00FEE6  6429               	cpfsgt	??_gpio_pin_logic_write^0,c
  1203   00FEE8  EF78  F07F         	goto	u481
  1204   00FEEC  EF7A  F07F         	goto	u480
  1205   00FEF0                     u481:
  1206   00FEF0  EFDD  F07F         	goto	l1190
  1207   00FEF4                     u480:
  1208   00FEF4                     l1182:
  1209                           
  1210                           ;MCAL/GPIO/gpio.c: 44:         ret = (Std_ReturnType)0x00;
  1211   00FEF4  0E00               	movlw	0
  1212   00FEF6  6E2F               	movwf	gpio_pin_logic_write@ret^0,c
  1213                           
  1214                           ;MCAL/GPIO/gpio.c: 45:     }
  1215   00FEF8  EFFE  F07F         	goto	l1192
  1216   00FEFC                     l1184:
  1217                           
  1218                           ;MCAL/GPIO/gpio.c: 49:                 (*lat_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1219   00FEFC  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1220   00FF00  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1221   00FF04  30DF               	rrcf	223,w,c
  1222   00FF06  32E8               	rrcf	wreg,f,c
  1223   00FF08  32E8               	rrcf	wreg,f,c
  1224   00FF0A  0B07               	andlw	7
  1225   00FF0C  6E29               	movwf	??_gpio_pin_logic_write^0,c
  1226   00FF0E  0E01               	movlw	1
  1227   00FF10  6E2A               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1228   00FF12  2A29               	incf	??_gpio_pin_logic_write^0,f,c
  1229   00FF14  EF8E  F07F         	goto	u494
  1230   00FF18                     u495:
  1231   00FF18  90D8               	bcf	status,0,c
  1232   00FF1A  362A               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1233   00FF1C                     u494:
  1234   00FF1C  2E29               	decfsz	??_gpio_pin_logic_write^0,f,c
  1235   00FF1E  EF8C  F07F         	goto	u495
  1236   00FF22  502A               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1237   00FF24  0AFF               	xorlw	255
  1238   00FF26  6E2B               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1239   00FF28  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1240   00FF2C  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1241   00FF30  50DF               	movf	223,w,c
  1242   00FF32  0B07               	andlw	7
  1243   00FF34  6E2C               	movwf	(??_gpio_pin_logic_write+3)^0,c
  1244   00FF36  502C               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  1245   00FF38  0D02               	mullw	2
  1246   00FF3A  0E01               	movlw	low _lat_regs
  1247   00FF3C  24F3               	addwf	243,w,c
  1248   00FF3E  6ED9               	movwf	fsr2l,c
  1249   00FF40  0E00               	movlw	high _lat_regs
  1250   00FF42  20F4               	addwfc	prodh,w,c
  1251   00FF44  6EDA               	movwf	fsr2h,c
  1252   00FF46  CFDE F02D          	movff	postinc2,??_gpio_pin_logic_write+4
  1253   00FF4A  CFDD F02E          	movff	postdec2,??_gpio_pin_logic_write+5
  1254   00FF4E  C02D  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  1255   00FF52  C02E  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  1256   00FF56  502B               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1257   00FF58  16DF               	andwf	indf2,f,c
  1258                           
  1259                           ;MCAL/GPIO/gpio.c: 50:                 break;
  1260   00FF5A  EFFE  F07F         	goto	l1192
  1261   00FF5E                     l1186:
  1262                           
  1263                           ;MCAL/GPIO/gpio.c: 52:                 (*lat_regs[my_pin->port] |=(1<<my_pin->pin));
  1264   00FF5E  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1265   00FF62  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1266   00FF66  30DF               	rrcf	223,w,c
  1267   00FF68  32E8               	rrcf	wreg,f,c
  1268   00FF6A  32E8               	rrcf	wreg,f,c
  1269   00FF6C  0B07               	andlw	7
  1270   00FF6E  6E29               	movwf	??_gpio_pin_logic_write^0,c
  1271   00FF70  0E01               	movlw	1
  1272   00FF72  6E2A               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1273   00FF74  2A29               	incf	??_gpio_pin_logic_write^0,f,c
  1274   00FF76  EFBF  F07F         	goto	u504
  1275   00FF7A                     u505:
  1276   00FF7A  90D8               	bcf	status,0,c
  1277   00FF7C  362A               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1278   00FF7E                     u504:
  1279   00FF7E  2E29               	decfsz	??_gpio_pin_logic_write^0,f,c
  1280   00FF80  EFBD  F07F         	goto	u505
  1281   00FF84  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1282   00FF88  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1283   00FF8C  50DF               	movf	223,w,c
  1284   00FF8E  0B07               	andlw	7
  1285   00FF90  6E2B               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1286   00FF92  502B               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1287   00FF94  0D02               	mullw	2
  1288   00FF96  0E01               	movlw	low _lat_regs
  1289   00FF98  24F3               	addwf	243,w,c
  1290   00FF9A  6ED9               	movwf	fsr2l,c
  1291   00FF9C  0E00               	movlw	high _lat_regs
  1292   00FF9E  20F4               	addwfc	prodh,w,c
  1293   00FFA0  6EDA               	movwf	fsr2h,c
  1294   00FFA2  CFDE F02C          	movff	postinc2,??_gpio_pin_logic_write+3
  1295   00FFA6  CFDD F02D          	movff	postdec2,??_gpio_pin_logic_write+4
  1296   00FFAA  C02C  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  1297   00FFAE  C02D  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  1298   00FFB2  502A               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1299   00FFB4  12DF               	iorwf	indf2,f,c
  1300                           
  1301                           ;MCAL/GPIO/gpio.c: 53:                 break;
  1302   00FFB6  EFFE  F07F         	goto	l1192
  1303   00FFBA                     l1190:
  1304   00FFBA  C027  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1305   00FFBE  C028  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1306   00FFC2  BEDF               	btfsc	indf2,7,c
  1307   00FFC4  EFE6  F07F         	goto	u511
  1308   00FFC8  EFE9  F07F         	goto	u510
  1309   00FFCC                     u511:
  1310   00FFCC  0E01               	movlw	1
  1311   00FFCE  EFEA  F07F         	goto	u520
  1312   00FFD2                     u510:
  1313   00FFD2  0E00               	movlw	0
  1314   00FFD4                     u520:
  1315   00FFD4  6E29               	movwf	??_gpio_pin_logic_write^0,c
  1316   00FFD6  6A2A               	clrf	(??_gpio_pin_logic_write+1)^0,c
  1317                           
  1318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 1, Range of values is 0 to 0
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            4     3 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325   00FFD8  502A               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1326   00FFDA  0A00               	xorlw	0	; case 0
  1327   00FFDC  B4D8               	btfsc	status,2,c
  1328   00FFDE  EFF3  F07F         	goto	l1374
  1329   00FFE2  EF7A  F07F         	goto	l1182
  1330   00FFE6                     l1374:
  1331                           
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 2, Range of values is 0 to 1
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte            7     4 (average)
  1337                           ;	Chosen strategy is simple_byte
  1338   00FFE6  5029               	movf	??_gpio_pin_logic_write^0,w,c
  1339   00FFE8  0A00               	xorlw	0	; case 0
  1340   00FFEA  B4D8               	btfsc	status,2,c
  1341   00FFEC  EF7E  F07F         	goto	l1184
  1342   00FFF0  0A01               	xorlw	1	; case 1
  1343   00FFF2  B4D8               	btfsc	status,2,c
  1344   00FFF4  EFAF  F07F         	goto	l1186
  1345   00FFF8  EF7A  F07F         	goto	l1182
  1346   00FFFC                     l1192:
  1347                           
  1348                           ;MCAL/GPIO/gpio.c: 57:     return ret;
  1349   00FFFC  502F               	movf	gpio_pin_logic_write@ret^0,w,c
  1350   00FFFE  0012               	return		;funcret
  1351   010000                     __end_of_gpio_pin_logic_write:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _gpio_pin_direction_init *****************
  1355 ;; Defined at:
  1356 ;;		line 13 in file "MCAL/GPIO/gpio.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1359 ;;		 -> btn_low.button_pin(1), btn_low(3), btn_high.button_pin(1), btn_high(3), 
  1360 ;;		 -> led_init@my_pin(1), 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  ret             1    8[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      unsigned char 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        9 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_gpio_pin_initialize
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text9
  1386   00FD78                     __ptext9:
  1387                           	callstack 0
  1388   00FD78                     _gpio_pin_direction_init:
  1389                           	callstack 28
  1390   00FD78                     
  1391                           ;MCAL/GPIO/gpio.c: 14:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1392   00FD78  0E01               	movlw	1
  1393   00FD7A  6E2F               	movwf	gpio_pin_direction_init@ret^0,c
  1394   00FD7C                     
  1395                           ;MCAL/GPIO/gpio.c: 15:     if(((void*)0) == my_pin || my_pin->pin > 7){
  1396   00FD7C  5027               	movf	gpio_pin_direction_init@my_pin^0,w,c
  1397   00FD7E  1028               	iorwf	(gpio_pin_direction_init@my_pin+1)^0,w,c
  1398   00FD80  B4D8               	btfsc	status,2,c
  1399   00FD82  EFC5  F07E         	goto	u531
  1400   00FD86  EFC7  F07E         	goto	u530
  1401   00FD8A                     u531:
  1402   00FD8A  EFD8  F07E         	goto	l1206
  1403   00FD8E                     u530:
  1404   00FD8E  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1405   00FD92  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1406   00FD96  30DF               	rrcf	223,w,c
  1407   00FD98  32E8               	rrcf	wreg,f,c
  1408   00FD9A  32E8               	rrcf	wreg,f,c
  1409   00FD9C  0B07               	andlw	7
  1410   00FD9E  6E29               	movwf	??_gpio_pin_direction_init^0,c
  1411   00FDA0  0E07               	movlw	7
  1412   00FDA2  6429               	cpfsgt	??_gpio_pin_direction_init^0,c
  1413   00FDA4  EFD6  F07E         	goto	u541
  1414   00FDA8  EFD8  F07E         	goto	u540
  1415   00FDAC                     u541:
  1416   00FDAC  EF3B  F07F         	goto	l1214
  1417   00FDB0                     u540:
  1418   00FDB0                     l1206:
  1419                           
  1420                           ;MCAL/GPIO/gpio.c: 16:         ret = (Std_ReturnType)0x00;
  1421   00FDB0  0E00               	movlw	0
  1422   00FDB2  6E2F               	movwf	gpio_pin_direction_init@ret^0,c
  1423                           
  1424                           ;MCAL/GPIO/gpio.c: 17:     }
  1425   00FDB4  EF5C  F07F         	goto	l1216
  1426   00FDB8                     l1208:
  1427                           
  1428                           ;MCAL/GPIO/gpio.c: 21:                 (*tris_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1429   00FDB8  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1430   00FDBC  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1431   00FDC0  30DF               	rrcf	223,w,c
  1432   00FDC2  32E8               	rrcf	wreg,f,c
  1433   00FDC4  32E8               	rrcf	wreg,f,c
  1434   00FDC6  0B07               	andlw	7
  1435   00FDC8  6E29               	movwf	??_gpio_pin_direction_init^0,c
  1436   00FDCA  0E01               	movlw	1
  1437   00FDCC  6E2A               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1438   00FDCE  2A29               	incf	??_gpio_pin_direction_init^0,f,c
  1439   00FDD0  EFEC  F07E         	goto	u554
  1440   00FDD4                     u555:
  1441   00FDD4  90D8               	bcf	status,0,c
  1442   00FDD6  362A               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1443   00FDD8                     u554:
  1444   00FDD8  2E29               	decfsz	??_gpio_pin_direction_init^0,f,c
  1445   00FDDA  EFEA  F07E         	goto	u555
  1446   00FDDE  502A               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1447   00FDE0  0AFF               	xorlw	255
  1448   00FDE2  6E2B               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1449   00FDE4  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1450   00FDE8  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1451   00FDEC  50DF               	movf	223,w,c
  1452   00FDEE  0B07               	andlw	7
  1453   00FDF0  6E2C               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1454   00FDF2  502C               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1455   00FDF4  0D02               	mullw	2
  1456   00FDF6  0E15               	movlw	low _tris_regs
  1457   00FDF8  24F3               	addwf	243,w,c
  1458   00FDFA  6ED9               	movwf	fsr2l,c
  1459   00FDFC  0E00               	movlw	high _tris_regs
  1460   00FDFE  20F4               	addwfc	prodh,w,c
  1461   00FE00  6EDA               	movwf	fsr2h,c
  1462   00FE02  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+4
  1463   00FE06  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+5
  1464   00FE0A  C02D  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1465   00FE0E  C02E  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1466   00FE12  502B               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1467   00FE14  16DF               	andwf	indf2,f,c
  1468                           
  1469                           ;MCAL/GPIO/gpio.c: 22:                 break;
  1470   00FE16  EF5C  F07F         	goto	l1216
  1471   00FE1A                     l1210:
  1472                           
  1473                           ;MCAL/GPIO/gpio.c: 24:                 (*tris_regs[my_pin->port] |=(1<<my_pin->pin));
  1474   00FE1A  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1475   00FE1E  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1476   00FE22  30DF               	rrcf	223,w,c
  1477   00FE24  32E8               	rrcf	wreg,f,c
  1478   00FE26  32E8               	rrcf	wreg,f,c
  1479   00FE28  0B07               	andlw	7
  1480   00FE2A  6E29               	movwf	??_gpio_pin_direction_init^0,c
  1481   00FE2C  0E01               	movlw	1
  1482   00FE2E  6E2A               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1483   00FE30  2A29               	incf	??_gpio_pin_direction_init^0,f,c
  1484   00FE32  EF1D  F07F         	goto	u564
  1485   00FE36                     u565:
  1486   00FE36  90D8               	bcf	status,0,c
  1487   00FE38  362A               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1488   00FE3A                     u564:
  1489   00FE3A  2E29               	decfsz	??_gpio_pin_direction_init^0,f,c
  1490   00FE3C  EF1B  F07F         	goto	u565
  1491   00FE40  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1492   00FE44  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1493   00FE48  50DF               	movf	223,w,c
  1494   00FE4A  0B07               	andlw	7
  1495   00FE4C  6E2B               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1496   00FE4E  502B               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1497   00FE50  0D02               	mullw	2
  1498   00FE52  0E15               	movlw	low _tris_regs
  1499   00FE54  24F3               	addwf	243,w,c
  1500   00FE56  6ED9               	movwf	fsr2l,c
  1501   00FE58  0E00               	movlw	high _tris_regs
  1502   00FE5A  20F4               	addwfc	prodh,w,c
  1503   00FE5C  6EDA               	movwf	fsr2h,c
  1504   00FE5E  CFDE F02C          	movff	postinc2,??_gpio_pin_direction_init+3
  1505   00FE62  CFDD F02D          	movff	postdec2,??_gpio_pin_direction_init+4
  1506   00FE66  C02C  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1507   00FE6A  C02D  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1508   00FE6E  502A               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1509   00FE70  12DF               	iorwf	indf2,f,c
  1510                           
  1511                           ;MCAL/GPIO/gpio.c: 25:                 break;
  1512   00FE72  EF5C  F07F         	goto	l1216
  1513   00FE76                     l1214:
  1514   00FE76  C027  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1515   00FE7A  C028  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1516   00FE7E  BCDF               	btfsc	indf2,6,c
  1517   00FE80  EF44  F07F         	goto	u571
  1518   00FE84  EF47  F07F         	goto	u570
  1519   00FE88                     u571:
  1520   00FE88  0E01               	movlw	1
  1521   00FE8A  EF48  F07F         	goto	u580
  1522   00FE8E                     u570:
  1523   00FE8E  0E00               	movlw	0
  1524   00FE90                     u580:
  1525   00FE90  6E29               	movwf	??_gpio_pin_direction_init^0,c
  1526   00FE92  6A2A               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1527                           
  1528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1529                           ; Switch size 1, requested type "simple"
  1530                           ; Number of cases is 1, Range of values is 0 to 0
  1531                           ; switch strategies available:
  1532                           ; Name         Instructions Cycles
  1533                           ; simple_byte            4     3 (average)
  1534                           ;	Chosen strategy is simple_byte
  1535   00FE94  502A               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1536   00FE96  0A00               	xorlw	0	; case 0
  1537   00FE98  B4D8               	btfsc	status,2,c
  1538   00FE9A  EF51  F07F         	goto	l1376
  1539   00FE9E  EFD8  F07E         	goto	l1206
  1540   00FEA2                     l1376:
  1541                           
  1542                           ; Switch size 1, requested type "simple"
  1543                           ; Number of cases is 2, Range of values is 0 to 1
  1544                           ; switch strategies available:
  1545                           ; Name         Instructions Cycles
  1546                           ; simple_byte            7     4 (average)
  1547                           ;	Chosen strategy is simple_byte
  1548   00FEA2  5029               	movf	??_gpio_pin_direction_init^0,w,c
  1549   00FEA4  0A00               	xorlw	0	; case 0
  1550   00FEA6  B4D8               	btfsc	status,2,c
  1551   00FEA8  EFDC  F07E         	goto	l1208
  1552   00FEAC  0A01               	xorlw	1	; case 1
  1553   00FEAE  B4D8               	btfsc	status,2,c
  1554   00FEB0  EF0D  F07F         	goto	l1210
  1555   00FEB4  EFD8  F07E         	goto	l1206
  1556   00FEB8                     l1216:
  1557                           
  1558                           ;MCAL/GPIO/gpio.c: 29:     return ret;
  1559   00FEB8  502F               	movf	gpio_pin_direction_init@ret^0,w,c
  1560   00FEBA  0012               	return		;funcret
  1561   00FEBC                     __end_of_gpio_pin_direction_init:
  1562                           	callstack 0
  1563   000000                     
  1564                           	psect	rparam
  1565   000000                     
  1566                           	psect	idloc
  1567                           
  1568                           ;Config register IDLOC0 @ 0x200000
  1569                           ;	unspecified, using default values
  1570   200000                     	org	2097152
  1571   200000  FF                 	db	255
  1572                           
  1573                           ;Config register IDLOC1 @ 0x200001
  1574                           ;	unspecified, using default values
  1575   200001                     	org	2097153
  1576   200001  FF                 	db	255
  1577                           
  1578                           ;Config register IDLOC2 @ 0x200002
  1579                           ;	unspecified, using default values
  1580   200002                     	org	2097154
  1581   200002  FF                 	db	255
  1582                           
  1583                           ;Config register IDLOC3 @ 0x200003
  1584                           ;	unspecified, using default values
  1585   200003                     	org	2097155
  1586   200003  FF                 	db	255
  1587                           
  1588                           ;Config register IDLOC4 @ 0x200004
  1589                           ;	unspecified, using default values
  1590   200004                     	org	2097156
  1591   200004  FF                 	db	255
  1592                           
  1593                           ;Config register IDLOC5 @ 0x200005
  1594                           ;	unspecified, using default values
  1595   200005                     	org	2097157
  1596   200005  FF                 	db	255
  1597                           
  1598                           ;Config register IDLOC6 @ 0x200006
  1599                           ;	unspecified, using default values
  1600   200006                     	org	2097158
  1601   200006  FF                 	db	255
  1602                           
  1603                           ;Config register IDLOC7 @ 0x200007
  1604                           ;	unspecified, using default values
  1605   200007                     	org	2097159
  1606   200007  FF                 	db	255
  1607                           
  1608                           	psect	config
  1609                           
  1610                           ; Padding undefined space
  1611   300000                     	org	3145728
  1612   300000  FF                 	db	255
  1613                           
  1614                           ;Config register CONFIG1H @ 0x300001
  1615                           ;	unspecified, using default values
  1616                           ;	Oscillator Selection bits
  1617                           ;	OSC = 0x7, unprogrammed default
  1618                           ;	Fail-Safe Clock Monitor Enable bit
  1619                           ;	FCMEN = 0x0, unprogrammed default
  1620                           ;	Internal/External Oscillator Switchover bit
  1621                           ;	IESO = 0x0, unprogrammed default
  1622   300001                     	org	3145729
  1623   300001  07                 	db	7
  1624                           
  1625                           ;Config register CONFIG2L @ 0x300002
  1626                           ;	unspecified, using default values
  1627                           ;	Power-up Timer Enable bit
  1628                           ;	PWRT = 0x1, unprogrammed default
  1629                           ;	Brown-out Reset Enable bits
  1630                           ;	BOREN = 0x3, unprogrammed default
  1631                           ;	Brown Out Reset Voltage bits
  1632                           ;	BORV = 0x3, unprogrammed default
  1633   300002                     	org	3145730
  1634   300002  1F                 	db	31
  1635                           
  1636                           ;Config register CONFIG2H @ 0x300003
  1637                           ;	unspecified, using default values
  1638                           ;	Watchdog Timer Enable bit
  1639                           ;	WDT = 0x1, unprogrammed default
  1640                           ;	Watchdog Timer Postscale Select bits
  1641                           ;	WDTPS = 0xF, unprogrammed default
  1642   300003                     	org	3145731
  1643   300003  1F                 	db	31
  1644                           
  1645                           ; Padding undefined space
  1646   300004                     	org	3145732
  1647   300004  FF                 	db	255
  1648                           
  1649                           ;Config register CONFIG3H @ 0x300005
  1650                           ;	unspecified, using default values
  1651                           ;	CCP2 MUX bit
  1652                           ;	CCP2MX = 0x1, unprogrammed default
  1653                           ;	PORTB A/D Enable bit
  1654                           ;	PBADEN = 0x1, unprogrammed default
  1655                           ;	Low-Power Timer1 Oscillator Enable bit
  1656                           ;	LPT1OSC = 0x0, unprogrammed default
  1657                           ;	MCLR Pin Enable bit
  1658                           ;	MCLRE = 0x1, unprogrammed default
  1659   300005                     	org	3145733
  1660   300005  83                 	db	131
  1661                           
  1662                           ;Config register CONFIG4L @ 0x300006
  1663                           ;	unspecified, using default values
  1664                           ;	Stack Full/Underflow Reset Enable bit
  1665                           ;	STVREN = 0x1, unprogrammed default
  1666                           ;	Single-Supply ICSP Enable bit
  1667                           ;	LVP = 0x1, unprogrammed default
  1668                           ;	Extended Instruction Set Enable bit
  1669                           ;	XINST = 0x0, unprogrammed default
  1670                           ;	Background Debugger Enable bit
  1671                           ;	DEBUG = 0x1, unprogrammed default
  1672   300006                     	org	3145734
  1673   300006  85                 	db	133
  1674                           
  1675                           ; Padding undefined space
  1676   300007                     	org	3145735
  1677   300007  FF                 	db	255
  1678                           
  1679                           ;Config register CONFIG5L @ 0x300008
  1680                           ;	unspecified, using default values
  1681                           ;	Code Protection bit
  1682                           ;	CP0 = 0x1, unprogrammed default
  1683                           ;	Code Protection bit
  1684                           ;	CP1 = 0x1, unprogrammed default
  1685                           ;	Code Protection bit
  1686                           ;	CP2 = 0x1, unprogrammed default
  1687                           ;	Code Protection bit
  1688                           ;	CP3 = 0x1, unprogrammed default
  1689   300008                     	org	3145736
  1690   300008  0F                 	db	15
  1691                           
  1692                           ;Config register CONFIG5H @ 0x300009
  1693                           ;	unspecified, using default values
  1694                           ;	Boot Block Code Protection bit
  1695                           ;	CPB = 0x1, unprogrammed default
  1696                           ;	Data EEPROM Code Protection bit
  1697                           ;	CPD = 0x1, unprogrammed default
  1698   300009                     	org	3145737
  1699   300009  C0                 	db	192
  1700                           
  1701                           ;Config register CONFIG6L @ 0x30000A
  1702                           ;	unspecified, using default values
  1703                           ;	Write Protection bit
  1704                           ;	WRT0 = 0x1, unprogrammed default
  1705                           ;	Write Protection bit
  1706                           ;	WRT1 = 0x1, unprogrammed default
  1707                           ;	Write Protection bit
  1708                           ;	WRT2 = 0x1, unprogrammed default
  1709                           ;	Write Protection bit
  1710                           ;	WRT3 = 0x1, unprogrammed default
  1711   30000A                     	org	3145738
  1712   30000A  0F                 	db	15
  1713                           
  1714                           ;Config register CONFIG6H @ 0x30000B
  1715                           ;	unspecified, using default values
  1716                           ;	Configuration Register Write Protection bit
  1717                           ;	WRTC = 0x1, unprogrammed default
  1718                           ;	Boot Block Write Protection bit
  1719                           ;	WRTB = 0x1, unprogrammed default
  1720                           ;	Data EEPROM Write Protection bit
  1721                           ;	WRTD = 0x1, unprogrammed default
  1722   30000B                     	org	3145739
  1723   30000B  E0                 	db	224
  1724                           
  1725                           ;Config register CONFIG7L @ 0x30000C
  1726                           ;	unspecified, using default values
  1727                           ;	Table Read Protection bit
  1728                           ;	EBTR0 = 0x1, unprogrammed default
  1729                           ;	Table Read Protection bit
  1730                           ;	EBTR1 = 0x1, unprogrammed default
  1731                           ;	Table Read Protection bit
  1732                           ;	EBTR2 = 0x1, unprogrammed default
  1733                           ;	Table Read Protection bit
  1734                           ;	EBTR3 = 0x1, unprogrammed default
  1735   30000C                     	org	3145740
  1736   30000C  0F                 	db	15
  1737                           
  1738                           ;Config register CONFIG7H @ 0x30000D
  1739                           ;	unspecified, using default values
  1740                           ;	Boot Block Table Read Protection bit
  1741                           ;	EBTRB = 0x1, unprogrammed default
  1742   30000D                     	org	3145741
  1743   30000D  40                 	db	64
  1744                           tosu	equ	0xFFF
  1745                           tosh	equ	0xFFE
  1746                           tosl	equ	0xFFD
  1747                           stkptr	equ	0xFFC
  1748                           pclatu	equ	0xFFB
  1749                           pclath	equ	0xFFA
  1750                           pcl	equ	0xFF9
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           prodh	equ	0xFF4
  1756                           prodl	equ	0xFF3
  1757                           indf0	equ	0xFEF
  1758                           postinc0	equ	0xFEE
  1759                           postdec0	equ	0xFED
  1760                           preinc0	equ	0xFEC
  1761                           plusw0	equ	0xFEB
  1762                           fsr0h	equ	0xFEA
  1763                           fsr0l	equ	0xFE9
  1764                           wreg	equ	0xFE8
  1765                           indf1	equ	0xFE7
  1766                           postinc1	equ	0xFE6
  1767                           postdec1	equ	0xFE5
  1768                           preinc1	equ	0xFE4
  1769                           plusw1	equ	0xFE3
  1770                           fsr1h	equ	0xFE2
  1771                           fsr1l	equ	0xFE1
  1772                           bsr	equ	0xFE0
  1773                           indf2	equ	0xFDF
  1774                           postinc2	equ	0xFDE
  1775                           postdec2	equ	0xFDD
  1776                           preinc2	equ	0xFDC
  1777                           plusw2	equ	0xFDB
  1778                           fsr2h	equ	0xFDA
  1779                           fsr2l	equ	0xFD9
  1780                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      60
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_read_status@btn_state	PTR enum E3024 size(2) Largest target is 1
		 -> main@btn_low_status(COMRAM[1]), main@btn_high_status(COMRAM[1]), 

    button_read_status@my_btn	PTR struct . size(2) Largest target is 3
		 -> btn_low(COMRAM[3]), btn_high(COMRAM[3]), 

    button_inittialze@my_btn	PTR struct . size(2) Largest target is 3
		 -> btn_low(COMRAM[3]), btn_high(COMRAM[3]), 

    gpio_pin_initialize@my_pin	PTR const struct . size(2) Largest target is 3
		 -> btn_low.button_pin(COMRAM[1]), btn_low(COMRAM[3]), btn_high.button_pin(COMRAM[1]), btn_high(COMRAM[3]), 
		 -> led_init@my_pin(COMRAM[1]), 

    gpio_pin_logic_read@retlogic	PTR enum E2965 size(2) Largest target is 1
		 -> button_read_status@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_logic_read@my_pin	PTR const struct . size(2) Largest target is 3
		 -> btn_low.button_pin(COMRAM[1]), btn_low(COMRAM[3]), btn_high.button_pin(COMRAM[1]), btn_high(COMRAM[3]), 

    gpio_pin_logic_write@my_pin	PTR const struct . size(2) Largest target is 3
		 -> btn_low.button_pin(COMRAM[1]), btn_low(COMRAM[3]), btn_high.button_pin(COMRAM[1]), btn_high(COMRAM[3]), 
		 -> led_turn_off@my_pin(COMRAM[1]), led_turn_on@my_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_direction_init@my_pin	PTR const struct . size(2) Largest target is 3
		 -> btn_low.button_pin(COMRAM[1]), btn_low(COMRAM[3]), btn_high.button_pin(COMRAM[1]), btn_high(COMRAM[3]), 
		 -> led_init@my_pin(COMRAM[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@my_led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    led_turn_on@my_led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    led_init@my_led	PTR const struct . size(2) Largest target is 1
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_led_init
    _led_turn_on->_gpio_pin_logic_write
    _led_turn_off->_gpio_pin_logic_write
    _led_init->_gpio_pin_initialize
    _button_read_status->_gpio_pin_logic_read
    _button_inittialze->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_direction_init
    _gpio_pin_initialize->_gpio_pin_logic_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4616
                                             16 COMRAM     2     2      0
                  _button_inittialze
                 _button_read_status
                           _led_init
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2     667
                                              9 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2     667
                                              9 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_init                                             5     3      2    1194
                                             12 COMRAM     4     2      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _button_read_status                                   7     3      4     871
                                              9 COMRAM     6     2      4
                _gpio_pin_logic_read
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_read                                 10     6      4     292
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _button_inittialze                                    3     1      2    1111
                                             12 COMRAM     2     0      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     1      2     906
                                              9 COMRAM     3     1      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_write                                 9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     255
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_inittialze
     _gpio_pin_initialize
       _gpio_pin_direction_init
       _gpio_pin_logic_write
   _button_read_status
     _gpio_pin_logic_read
   _led_init
     _gpio_pin_initialize
   _led_turn_off
     _gpio_pin_logic_write
   _led_turn_on
     _gpio_pin_logic_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      3C       1       47.2%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      39        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 04 17:45:34 2023

                                l20 FAD4                                  l13 FB4A  
                                l27 FA6E                                  l82 FEBA  
       button_read_status@btn_state 0032                                 l101 FFFE  
                               l120 FA08                                 l202 FCB6  
                               l108 FBF8                                 l172 FCF0  
                               l194 FCB6                                 l188 F976  
                               u510 FFD2                                 u511 FFCC  
                               u520 FFD4                                 u504 FF7E  
                               u600 FB5E                                 u505 FF7A  
                               u601 FB5A                                 u530 FD8E  
                               u610 FB80                                 u531 FD8A  
                               u611 FB7C                                 u540 FDB0  
                               u620 FB92                                 u700 FC22  
                               u541 FDAC                                 u621 FB8E  
                               u701 FC1E                                 u470 FED2  
                               u710 FC56                                 u471 FECE  
                               u711 FC52                                 u480 FEF4  
                               u720 FC66                                 u481 FEF0  
                               u721 FC62                                 u570 FE8E  
                               u554 FDD8                                 u634 FBE4  
                               u730 FCA2                                 u650 FB3A  
                               u571 FE88                                 u555 FDD4  
                               u635 FBE0                                 u731 FC9E  
                               u651 FB36                                 u580 FE90  
                               u564 FE3A                                 u740 FCB2  
                               u660 FAC4                                 u565 FE36  
                               u741 FCAE                                 u645 FB26  
                               u661 FAC0                                 u494 FF1C  
                               u590 F9E2                                 u670 FA5E  
                               u750 FD28                                 u495 FF18  
                               u591 F9DE                                 u647 FB28  
                               u671 FA5A                                 u751 FD24  
                               u680 F966                                 u760 FD54  
                               u681 F962                                 u761 FD50  
                               u690 FC10                                 u691 FC0C  
            ??_gpio_pin_logic_write 0029                                 prod 000FF3  
                               wreg 000FE8          gpio_pin_logic_write@my_pin 0027  
                      ?_led_turn_on 0030                                l1200 FD78  
                              l1210 FE1A                                l1202 FD7C  
                              l1204 FD8E                                l1300 FA4A  
                              l1214 FE76                                l1206 FDB0  
                              l1230 F9EA                                l1310 F954  
                              l1302 FA4C                                l1208 FDB8  
                              l1216 FEB8                                l1232 FA06  
                              l1224 F9D0                                l1312 F954  
                              l1240 FB5E                                l1320 FBFA  
                              l1304 FA5E                                l1226 F9D0  
                              l1314 F966                                l1242 FB80  
                              l1330 FC3A                                l1322 FBFE  
                              l1250 FAD6                                l1306 FA62  
                              l1180 FED2                                l1228 F9E2  
                              l1316 F96A                                l1244 FB92  
                              l1236 FB4C                                l1340 FCA2  
                              l1332 FC56                                l1324 FC10  
                              l1260 FB16                                l1252 FAD6  
                              l1190 FFBA                                l1182 FEF4  
                              l1246 FB96                                l1238 FB4C  
                              l1334 FC66                                l1326 FC22  
                              l1262 FB28                                l1254 FADA  
                              l1270 FA70                                l1350 FCE8  
                              l1184 FEFC                                l1192 FFFC  
                              l1176 FEBC                                l1336 FC76  
                              l1328 FC26                                l1264 FB3A  
                              l1256 FAF2                                l1280 FAB0  
                              l1272 FA70                                l1360 FD44  
                              l1352 FCEC                                l1186 FF5E  
                              l1178 FEC0                                l1338 FC86  
                              l1266 FB3E                                l1258 FB14  
                              l1290 FA0A                                l1282 FAB2  
                              l1274 FA74                                l1362 FD54  
                              l1354 FD18                                l1292 FA0A  
                              l1284 FAC4                                l1276 FA8C  
                              l1364 FD64                                l1356 FD28  
                              l1348 FCB8                                l1374 FFE6  
                              l1294 FA0E                                l1286 FAC8  
                              l1278 FAAE                                l1358 FD38  
                              l1376 FEA2                                l1296 FA26  
                              l1298 FA48                                _LATA 000F89  
                              _LATB 000F8A                                _LATC 000F8B  
                              _LATD 000F8C                                _LATE 000F8D  
                              _led1 0026                                _led2 0025  
                              _main FCB8          __end_of_button_read_status FCB8  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr1l 000FE1                                fsr2l 000FD9  
          ?_gpio_pin_direction_init 0027             button_inittialze@my_btn 0033  
                              prodl 000FF3                                start 0000  
                     ?_led_turn_off 0030                        ___param_bank 000000  
                             ?_main 0027                               _PORTA 000F80  
                             _PORTB 000F81                               _PORTC 000F82  
                             _PORTD 000F83                               _PORTE 000F84  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                               tablat 000FF5  
                             status 000FD8                      ??_led_turn_off 0032  
                   __initialization F99E                        __end_of_main FD78  
                            ??_main 0037                       __activetblptr 000002  
                  led_turn_on@F3049 003B                   _button_inittialze F954  
                ?_button_inittialze 0033                 ??_button_inittialze 0035  
                  __end_of_led_init FB4C                              isa$std 000001  
                     led_init@F3044 003C                        __pdataCOMRAM 0001  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8           __end_of_button_inittialze F978  
                        __accesstop 0080             __end_of__initialization F9C6  
                     ___rparam_used 000001                      __pcstackCOMRAM 0027  
              __end_of_led_turn_off FA70                   led_turn_off@F3054 003A  
                   led_toggle@F3059 0039                  _button_read_status FBFA  
               ?_button_read_status 0030                   led_turn_on@my_led 0030  
                 led_turn_on@my_pin 0033                           ?_led_init 0033  
button_read_status@Pin_Logic_Status 0035                ??_button_read_status 0034  
                           __Hparam 0000                             __Lparam 0000  
               _gpio_pin_initialize F9D0                 _gpio_pin_logic_read FB4C  
                           __pcinit F99E                             __ramtop 1000  
                           __ptext0 FCB8                             __ptext1 FA70  
                           __ptext2 FA0A                             __ptext3 FAD6  
                           __ptext4 FBFA                             __ptext5 FB4C  
                           __ptext6 F954                             __ptext7 F9D0  
                           __ptext8 FEBC                             __ptext9 FD78  
                           _btn_low 001F                ?_gpio_pin_initialize 0030  
                        ??_led_init 0035                end_of_initialization F9C6  
              ?_gpio_pin_logic_read 0027                       __Lmediumconst 0000  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
                    led_init@my_led 0033                      led_init@my_pin 0036  
             ??_gpio_pin_initialize 0032                  main@btn_low_status 0038  
             ??_gpio_pin_logic_read 002B                        _led_turn_off FA0A  
           _gpio_pin_direction_init FD78                       __pidataCOMRAM F978  
               start_initialization F99E                       ??_led_turn_on 0032  
          button_read_status@my_btn 0030                         __pbssCOMRAM 0039  
               __end_of_led_turn_on FAD6        __end_of_gpio_pin_logic_write 0000  
         ??_gpio_pin_direction_init 0029           gpio_pin_initialize@my_pin 0030  
                led_turn_off@my_led 0030                  led_turn_off@my_pin 0033  
                         _port_regs 000B                           _tris_regs 0015  
            gpio_pin_initialize@ret 0032     __end_of_gpio_pin_direction_init FEBC  
                       _led_turn_on FA70                           copy_data0 F9B2  
                          __Hrparam 0000                            __Lrparam 0000  
       __end_of_gpio_pin_initialize FA0A                 main@btn_high_status 0037  
       __end_of_gpio_pin_logic_read FBFA                _gpio_pin_logic_write FEBC  
                          _btn_high 0022                            _led_init FAD6  
                          _lat_regs 0001                            isa$xinst 000000  
             ?_gpio_pin_logic_write 0027             gpio_pin_logic_write@ret 002F  
         gpio_pin_logic_read@my_pin 0027         gpio_pin_logic_read@retlogic 0029  
     gpio_pin_direction_init@my_pin 0027          gpio_pin_direction_init@ret 002F  
