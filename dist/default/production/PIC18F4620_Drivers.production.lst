

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Aug 10 04:01:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,inline
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4620 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   0015A4                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _lat_regs
    74   0015A4  89                 	db	137
    75   0015A5  0F                 	db	15
    76   0015A6  8A                 	db	138
    77   0015A7  0F                 	db	15
    78   0015A8  8B                 	db	139
    79   0015A9  0F                 	db	15
    80   0015AA  8C                 	db	140
    81   0015AB  0F                 	db	15
    82   0015AC  8D                 	db	141
    83   0015AD  0F                 	db	15
    84                           
    85                           ;initializer for _port_regs
    86   0015AE  80                 	db	128
    87   0015AF  0F                 	db	15
    88   0015B0  81                 	db	129
    89   0015B1  0F                 	db	15
    90   0015B2  82                 	db	130
    91   0015B3  0F                 	db	15
    92   0015B4  83                 	db	131
    93   0015B5  0F                 	db	15
    94   0015B6  84                 	db	132
    95   0015B7  0F                 	db	15
    96                           
    97                           ;initializer for _tris_regs
    98   0015B8  92                 	db	146
    99   0015B9  0F                 	db	15
   100   0015BA  93                 	db	147
   101   0015BB  0F                 	db	15
   102   0015BC  94                 	db	148
   103   0015BD  0F                 	db	15
   104   0015BE  95                 	db	149
   105   0015BF  0F                 	db	15
   106   0015C0  96                 	db	150
   107   0015C1  0F                 	db	15
   108                           
   109                           ;initializer for _RB7_Flag
   110   0015C2  01                 	db	1
   111                           
   112                           ;initializer for _RB6_Flag
   113   0015C3  01                 	db	1
   114                           
   115                           ;initializer for _RB5_Flag
   116   0015C4  01                 	db	1
   117                           
   118                           ;initializer for _RB4_Flag
   119   0015C5  01                 	db	1
   120                           
   121                           ;initializer for _adc_1
   122   0015C6  00                 	db	0
   123   0015C7  00                 	db	0
   124   0015C8  00                 	db	0
   125   0015C9  05                 	db	5
   126   0015CA  05                 	db	5
   127   0015CB  00                 	db	0
   128   0015CC  02                 	db	2
   129                           
   130                           	psect	smallconst
   131   001000                     __psmallconst:
   132                           	callstack 0
   133   001000  00                 	db	0
   134   001001  37                 	db	55
   135   001002  38                 	db	56
   136   001003  39                 	db	57
   137   001004  2F                 	db	47
   138   001005  34                 	db	52
   139   001006  35                 	db	53
   140   001007  36                 	db	54
   141   001008  2A                 	db	42
   142   001009  31                 	db	49
   143   00100A  32                 	db	50
   144   00100B  33                 	db	51
   145   00100C  2D                 	db	45
   146   00100D  23                 	db	35
   147   00100E  30                 	db	48
   148   00100F  3D                 	db	61
   149   001010  2B                 	db	43
   150   001011                     __end_of_btn_values:
   151                           	callstack 0
   152   000000                     _ADRESL	set	4035
   153   000000                     _ADRESH	set	4036
   154   000000                     _ADCON0bits	set	4034
   155   000000                     _ADCON1bits	set	4033
   156   000000                     _INTCON2bits	set	4081
   157   000000                     _EECON2	set	4007
   158   000000                     _PORTBbits	set	3969
   159   000000                     _EECON1bits	set	4006
   160   000000                     _EEDATA	set	4008
   161   000000                     _EEADR	set	4009
   162   000000                     _EEADRH	set	4010
   163   000000                     _INTCONbits	set	4082
   164   000000                     _LATA	set	3977
   165   000000                     _PORTE	set	3972
   166   000000                     _PORTD	set	3971
   167   000000                     _PORTC	set	3970
   168   000000                     _PORTB	set	3969
   169   000000                     _PORTA	set	3968
   170   000000                     _TRISA	set	3986
   171   000000                     _ADCON2bits	set	4032
   172   000000                     _INTCON3bits	set	4080
   173   000000                     _PIE1bits	set	3997
   174   000000                     _TRISE	set	3990
   175   000000                     _TRISD	set	3989
   176   000000                     _TRISC	set	3988
   177   000000                     _TRISB	set	3987
   178   000000                     _LATE	set	3981
   179   000000                     _LATD	set	3980
   180   000000                     _LATC	set	3979
   181   000000                     _LATB	set	3978
   182   000000                     _PIR1bits	set	3998
   183   001011                     STR_1:
   184   001011  25                 	db	37
   185   001012  69                 	db	105	;'i'
   186   001013  00                 	db	0
   187   001014  00                 	db	0	; dummy byte at the end
   188   000000                     
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192   00156E                     __pcinit:
   193                           	callstack 0
   194   00156E                     start_initialization:
   195                           	callstack 0
   196   00156E                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to COMRAM (41 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201   00156E  0EA4               	movlw	low __pidataCOMRAM
   202   001570  6EF6               	movwf	tblptrl,c
   203   001572  0E15               	movlw	high __pidataCOMRAM
   204   001574  6EF7               	movwf	tblptrh,c
   205   001576  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206   001578  6EF8               	movwf	tblptru,c
   207   00157A  EE00  F02E         	lfsr	0,__pdataCOMRAM
   208   00157E  EE10 F029          	lfsr	1,41
   209   001582                     copy_data0:
   210   001582  0009               	tblrd		*+
   211   001584  CFF5 FFEE          	movff	tablat,postinc0
   212   001588  50E5               	movf	postdec1,w,c
   213   00158A  50E1               	movf	fsr1l,w,c
   214   00158C  E1FA               	bnz	copy_data0
   215                           
   216                           ; Clear objects allocated to COMRAM (45 bytes)
   217   00158E  EE00  F001         	lfsr	0,__pbssCOMRAM
   218   001592  0E2D               	movlw	45
   219   001594                     clear_0:
   220   001594  6AEE               	clrf	postinc0,c
   221   001596  06E8               	decf	wreg,f,c
   222   001598  E1FD               	bnz	clear_0
   223   00159A                     end_of_initialization:
   224                           	callstack 0
   225   00159A                     __end_of__initialization:
   226                           	callstack 0
   227   00159A  9066               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   228   00159C  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   229   00159E  0100               	movlb	0
   230   0015A0  EF66  F00A         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233   000001                     __pbssCOMRAM:
   234                           	callstack 0
   235   000001                     	ds	6
   236   000007                     _ADC_InterruptHandler:
   237                           	callstack 0
   238   000007                     	ds	2
   239   000009                     _RB7_InterruptHandler_LOW:
   240                           	callstack 0
   241   000009                     	ds	2
   242   00000B                     _RB7_InterruptHandler_HIGH:
   243                           	callstack 0
   244   00000B                     	ds	2
   245   00000D                     _RB6_InterruptHandler_LOW:
   246                           	callstack 0
   247   00000D                     	ds	2
   248   00000F                     _RB6_InterruptHandler_HIGH:
   249                           	callstack 0
   250   00000F                     	ds	2
   251   000011                     _RB5_InterruptHandler_LOW:
   252                           	callstack 0
   253   000011                     	ds	2
   254   000013                     _RB5_InterruptHandler_HIGH:
   255                           	callstack 0
   256   000013                     	ds	2
   257   000015                     _RB4_InterruptHandler_LOW:
   258                           	callstack 0
   259   000015                     	ds	2
   260   000017                     _RB4_InterruptHandler_HIGH:
   261                           	callstack 0
   262   000017                     	ds	2
   263   000019                     _INT2_InterruptHandler:
   264                           	callstack 0
   265   000019                     	ds	2
   266   00001B                     _INT1_InterruptHandler:
   267                           	callstack 0
   268   00001B                     	ds	2
   269   00001D                     _INT0_InterruptHandler:
   270                           	callstack 0
   271   00001D                     	ds	2
   272   00001F                     relay_turn_off@F3049:
   273                           	callstack 0
   274   00001F                     	ds	1
   275   000020                     relay_turn_on@F3044:
   276                           	callstack 0
   277   000020                     	ds	1
   278   000021                     relay_initialize@F3039:
   279                           	callstack 0
   280   000021                     	ds	1
   281   000022                     led_toggle@F3060:
   282                           	callstack 0
   283   000022                     	ds	1
   284   000023                     led_turn_off@F3055:
   285                           	callstack 0
   286   000023                     	ds	1
   287   000024                     led_turn_on@F3050:
   288                           	callstack 0
   289   000024                     	ds	1
   290   000025                     led_init@F3045:
   291                           	callstack 0
   292   000025                     	ds	1
   293   000026                     _adc_res_4:
   294                           	callstack 0
   295   000026                     	ds	2
   296   000028                     _adc_res_3:
   297                           	callstack 0
   298   000028                     	ds	2
   299   00002A                     _adc_res_2:
   300                           	callstack 0
   301   00002A                     	ds	2
   302   00002C                     _adc_res_1:
   303                           	callstack 0
   304   00002C                     	ds	2
   305                           
   306                           	psect	dataCOMRAM
   307   00002E                     __pdataCOMRAM:
   308                           	callstack 0
   309   00002E                     _lat_regs:
   310                           	callstack 0
   311   00002E                     	ds	10
   312   000038                     _port_regs:
   313                           	callstack 0
   314   000038                     	ds	10
   315   000042                     _tris_regs:
   316                           	callstack 0
   317   000042                     	ds	10
   318   00004C                     _RB7_Flag:
   319                           	callstack 0
   320   00004C                     	ds	1
   321   00004D                     _RB6_Flag:
   322                           	callstack 0
   323   00004D                     	ds	1
   324   00004E                     _RB5_Flag:
   325                           	callstack 0
   326   00004E                     	ds	1
   327   00004F                     _RB4_Flag:
   328                           	callstack 0
   329   00004F                     	ds	1
   330   000050                     _adc_1:
   331                           	callstack 0
   332   000050                     	ds	7
   333                           
   334                           	psect	cstackCOMRAM
   335   000057                     __pcstackCOMRAM:
   336                           	callstack 0
   337   000057                     RB4_ISR@RB4_Source:
   338                           	callstack 0
   339   000057                     RB5_ISR@RB5_Source:
   340                           	callstack 0
   341   000057                     RB6_ISR@RB6_Source:
   342                           	callstack 0
   343   000057                     RB7_ISR@RB7_Source:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x0
   347   000057                     	ds	1
   348   000058                     ??_adc_input_channel_port_configure:
   349   000058                     ADC_StartConversion@_adc:
   350                           	callstack 0
   351   000058                     ADC_GetConversionResult@_adc:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x1
   355   000058                     	ds	2
   356   00005A                     adc_input_channel_port_configure@channel:
   357                           	callstack 0
   358   00005A                     ADC_StartConversion@ret:
   359                           	callstack 0
   360   00005A                     ADC_GetConversionResult@conversion_result:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x3
   364   00005A                     	ds	1
   365   00005B                     ADC_SelectChannel@_adc:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x4
   369   00005B                     	ds	1
   370   00005C                     ??_ADC_GetConversionResult:
   371                           
   372                           ; 1 bytes @ 0x5
   373   00005C                     	ds	1
   374   00005D                     ADC_SelectChannel@channel:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x6
   378   00005D                     	ds	1
   379   00005E                     ??_ADC_SelectChannel:
   380                           
   381                           ; 1 bytes @ 0x7
   382   00005E                     	ds	1
   383   00005F                     ADC_SelectChannel@ret:
   384                           	callstack 0
   385   00005F                     ADC_GetConversionResult@ret:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x8
   389   00005F                     	ds	1
   390   000060                     ADC_GetConversion_Blocking@_adc:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x9
   394   000060                     	ds	2
   395   000062                     ADC_GetConversion_Blocking@channel:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xB
   399   000062                     	ds	1
   400   000063                     ADC_GetConversion_Blocking@conversion_result:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xC
   404   000063                     	ds	2
   405   000065                     ADC_GetConversion_Blocking@ret:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xE
   409   000065                     	ds	1
   410   000066                     
   411                           ; 1 bytes @ 0xF
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 22 in file "app.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  ret             1    0        unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  2  743[None  ] int 
   424 ;; Registers used:
   425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   435 ;;Total ram usage:        0 bytes
   436 ;; Hardware stack levels required when called: 5
   437 ;; This function calls:
   438 ;;		_ADC_GetConversion_Blocking
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text0
   445   0014CC                     __ptext0:
   446                           	callstack 0
   447   0014CC                     _main:
   448                           	callstack 26
   449   0014CC                     l3118:
   450   0014CC  0E50               	movlw	low _adc_1
   451   0014CE  6E60               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   452   0014D0  0E00               	movlw	high _adc_1
   453   0014D2  6E61               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   454   0014D4  0E00               	movlw	0
   455   0014D6  6E62               	movwf	ADC_GetConversion_Blocking@channel^0,c
   456   0014D8  0E2C               	movlw	low _adc_res_1
   457   0014DA  6E63               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   458   0014DC  0E00               	movlw	high _adc_res_1
   459   0014DE  6E64               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
   460   0014E0  EC2C  F00A         	call	_ADC_GetConversion_Blocking	;wreg free
   461   0014E4  0E50               	movlw	low _adc_1
   462   0014E6  6E60               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   463   0014E8  0E00               	movlw	high _adc_1
   464   0014EA  6E61               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   465   0014EC  0E01               	movlw	1
   466   0014EE  6E62               	movwf	ADC_GetConversion_Blocking@channel^0,c
   467   0014F0  0E2A               	movlw	low _adc_res_2
   468   0014F2  6E63               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   469   0014F4  0E00               	movlw	high _adc_res_2
   470   0014F6  6E64               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
   471   0014F8  EC2C  F00A         	call	_ADC_GetConversion_Blocking	;wreg free
   472   0014FC  0E50               	movlw	low _adc_1
   473   0014FE  6E60               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   474   001500  0E00               	movlw	high _adc_1
   475   001502  6E61               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   476   001504  0E02               	movlw	2
   477   001506  6E62               	movwf	ADC_GetConversion_Blocking@channel^0,c
   478   001508  0E28               	movlw	low _adc_res_3
   479   00150A  6E63               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   480   00150C  0E00               	movlw	high _adc_res_3
   481   00150E  6E64               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
   482   001510  EC2C  F00A         	call	_ADC_GetConversion_Blocking	;wreg free
   483   001514  0E50               	movlw	low _adc_1
   484   001516  6E60               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   485   001518  0E00               	movlw	high _adc_1
   486   00151A  6E61               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   487   00151C  0E03               	movlw	3
   488   00151E  6E62               	movwf	ADC_GetConversion_Blocking@channel^0,c
   489   001520  0E26               	movlw	low _adc_res_4
   490   001522  6E63               	movwf	ADC_GetConversion_Blocking@conversion_result^0,c
   491   001524  0E00               	movlw	high _adc_res_4
   492   001526  6E64               	movwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,c
   493   001528  EC2C  F00A         	call	_ADC_GetConversion_Blocking	;wreg free
   494   00152C  EF66  F00A         	goto	l3118
   495   001530  EF07  F000         	goto	start
   496   001534                     __end_of_main:
   497                           	callstack 0
   498                           
   499 ;; *************** function _ADC_GetConversion_Blocking *****************
   500 ;; Defined at:
   501 ;;		line 154 in file "MCAL/ADC/adc.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;  _adc            2    9[COMRAM] PTR const struct .
   504 ;;		 -> adc_1(7), 
   505 ;;  channel         1   11[COMRAM] enum E3029
   506 ;;  conversion_r    2   12[COMRAM] PTR unsigned short 
   507 ;;		 -> adc_res_4(2), adc_res_3(2), adc_res_2(2), adc_res_1(2), 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  ret             1   14[COMRAM] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      unsigned char 
   512 ;; Registers used:
   513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   519 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   522 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   523 ;;Total ram usage:        6 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 4
   526 ;; This function calls:
   527 ;;		_ADC_GetConversionResult
   528 ;;		_ADC_SelectChannel
   529 ;;		_ADC_StartConversion
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text1
   536   001458                     __ptext1:
   537                           	callstack 0
   538   001458                     _ADC_GetConversion_Blocking:
   539                           	callstack 26
   540   001458                     
   541                           ;MCAL/ADC/adc.c: 156:     if((((void*)0) == _adc) || (((void*)0) == conversion_result)){
   542   001458  5060               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
   543   00145A  1061               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
   544   00145C  B4D8               	btfsc	status,2,c
   545   00145E  EF33  F00A         	goto	u1811
   546   001462  EF35  F00A         	goto	u1810
   547   001466                     u1811:
   548   001466  EF3E  F00A         	goto	l3106
   549   00146A                     u1810:
   550   00146A  5063               	movf	ADC_GetConversion_Blocking@conversion_result^0,w,c
   551   00146C  1064               	iorwf	(ADC_GetConversion_Blocking@conversion_result+1)^0,w,c
   552   00146E  A4D8               	btfss	status,2,c
   553   001470  EF3C  F00A         	goto	u1821
   554   001474  EF3E  F00A         	goto	u1820
   555   001478                     u1821:
   556   001478  EF42  F00A         	goto	l3108
   557   00147C                     u1820:
   558   00147C                     l3106:
   559                           
   560                           ;MCAL/ADC/adc.c: 157:         ret = (Std_ReturnType)0x00;
   561   00147C  0E00               	movlw	0
   562   00147E  6E65               	movwf	ADC_GetConversion_Blocking@ret^0,c
   563                           
   564                           ;MCAL/ADC/adc.c: 158:     }
   565   001480  EF64  F00A         	goto	l3112
   566   001484                     l3108:
   567                           
   568                           ;MCAL/ADC/adc.c: 160:         ret = ADC_SelectChannel(_adc, channel);
   569   001484  C060  F05B         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
   570   001488  C061  F05C         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
   571   00148C  C062  F05D         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
   572   001490  EC9A  F00A         	call	_ADC_SelectChannel	;wreg free
   573   001494  6E65               	movwf	ADC_GetConversion_Blocking@ret^0,c
   574                           
   575                           ;MCAL/ADC/adc.c: 161:         ret = ADC_StartConversion(_adc);
   576   001496  C060  F058         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
   577   00149A  C061  F059         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
   578   00149E  ECE7  F00A         	call	_ADC_StartConversion	;wreg free
   579   0014A2  6E65               	movwf	ADC_GetConversion_Blocking@ret^0,c
   580   0014A4                     l855:
   581   0014A4  B2C2               	btfsc	194,1,c	;volatile
   582   0014A6  EF57  F00A         	goto	u1831
   583   0014AA  EF59  F00A         	goto	u1830
   584   0014AE                     u1831:
   585   0014AE  EF52  F00A         	goto	l855
   586   0014B2                     u1830:
   587   0014B2                     
   588                           ;MCAL/ADC/adc.c: 163:         ret = ADC_GetConversionResult(_adc, conversion_result);
   589   0014B2  C060  F058         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
   590   0014B6  C061  F059         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
   591   0014BA  C063  F05A         	movff	ADC_GetConversion_Blocking@conversion_result,ADC_GetConversionResult@conversion_r
      +                          esult
   592   0014BE  C064  F05B         	movff	ADC_GetConversion_Blocking@conversion_result+1,ADC_GetConversionResult@conversion
      +                          _result+1
   593   0014C2  ECCA  F009         	call	_ADC_GetConversionResult	;wreg free
   594   0014C6  6E65               	movwf	ADC_GetConversion_Blocking@ret^0,c
   595   0014C8                     l3112:
   596                           
   597                           ;MCAL/ADC/adc.c: 165:     return ret;
   598   0014C8  5065               	movf	ADC_GetConversion_Blocking@ret^0,w,c
   599   0014CA  0012               	return		;funcret
   600   0014CC                     __end_of_ADC_GetConversion_Blocking:
   601                           	callstack 0
   602                           
   603 ;; *************** function _ADC_StartConversion *****************
   604 ;; Defined at:
   605 ;;		line 111 in file "MCAL/ADC/adc.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;  _adc            2    1[COMRAM] PTR const struct .
   608 ;;		 -> adc_1(7), 
   609 ;; Auto vars:     Size  Location     Type
   610 ;;  ret             1    3[COMRAM] unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;Total ram usage:        3 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 2
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_ADC_GetConversion_Blocking
   631 ;;		_ADC_StartConversion_Interrupt
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636   0015CE                     __ptext2:
   637                           	callstack 0
   638   0015CE                     _ADC_StartConversion:
   639                           	callstack 27
   640   0015CE                     
   641                           ;MCAL/ADC/adc.c: 113:     if(((void*)0) == _adc){
   642   0015CE  5058               	movf	ADC_StartConversion@_adc^0,w,c
   643   0015D0  1059               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
   644   0015D2  A4D8               	btfss	status,2,c
   645   0015D4  EFEE  F00A         	goto	u1751
   646   0015D8  EFF0  F00A         	goto	u1750
   647   0015DC                     u1751:
   648   0015DC  EFF4  F00A         	goto	l828
   649   0015E0                     u1750:
   650   0015E0                     
   651                           ;MCAL/ADC/adc.c: 114:         ret = (Std_ReturnType)0x00;
   652   0015E0  0E00               	movlw	0
   653   0015E2  6E5A               	movwf	ADC_StartConversion@ret^0,c
   654                           
   655                           ;MCAL/ADC/adc.c: 115:     }
   656   0015E4  EFF7  F00A         	goto	l829
   657   0015E8                     l828:
   658                           
   659                           ;MCAL/ADC/adc.c: 117:         (ADCON0bits.GODONE = 1);
   660   0015E8  82C2               	bsf	194,1,c	;volatile
   661   0015EA                     
   662                           ;MCAL/ADC/adc.c: 118:         ret = (Std_ReturnType)0x01;
   663   0015EA  0E01               	movlw	1
   664   0015EC  6E5A               	movwf	ADC_StartConversion@ret^0,c
   665   0015EE                     l829:
   666                           
   667                           ;MCAL/ADC/adc.c: 120:     return ret;
   668   0015EE  505A               	movf	ADC_StartConversion@ret^0,w,c
   669   0015F0  0012               	return		;funcret
   670   0015F2                     __end_of_ADC_StartConversion:
   671                           	callstack 0
   672                           
   673 ;; *************** function _ADC_SelectChannel *****************
   674 ;; Defined at:
   675 ;;		line 99 in file "MCAL/ADC/adc.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  _adc            2    4[COMRAM] PTR const struct .
   678 ;;		 -> adc_1(7), 
   679 ;;  channel         1    6[COMRAM] enum E3029
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  ret             1    8[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      unsigned char 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        5 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 3
   698 ;; This function calls:
   699 ;;		_adc_input_channel_port_configure
   700 ;; This function is called by:
   701 ;;		_ADC_GetConversion_Blocking
   702 ;;		_ADC_StartConversion_Interrupt
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text3
   707   001534                     __ptext3:
   708                           	callstack 0
   709   001534                     _ADC_SelectChannel:
   710                           	callstack 26
   711   001534                     
   712                           ;MCAL/ADC/adc.c: 101:     if(((void*)0) == _adc){
   713   001534  505B               	movf	ADC_SelectChannel@_adc^0,w,c
   714   001536  105C               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
   715   001538  A4D8               	btfss	status,2,c
   716   00153A  EFA1  F00A         	goto	u1741
   717   00153E  EFA3  F00A         	goto	u1740
   718   001542                     u1741:
   719   001542  EFA7  F00A         	goto	l3056
   720   001546                     u1740:
   721   001546                     
   722                           ;MCAL/ADC/adc.c: 102:         ret = (Std_ReturnType)0x00;
   723   001546  0E00               	movlw	0
   724   001548  6E5F               	movwf	ADC_SelectChannel@ret^0,c
   725                           
   726                           ;MCAL/ADC/adc.c: 103:     }
   727   00154A  EFB5  F00A         	goto	l3062
   728   00154E                     l3056:
   729                           
   730                           ;MCAL/ADC/adc.c: 105:         ADCON0bits.CHS = channel;
   731   00154E  C05D  F05E         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
   732   001552  465E               	rlncf	??_ADC_SelectChannel^0,f,c
   733   001554  465E               	rlncf	??_ADC_SelectChannel^0,f,c
   734   001556  50C2               	movf	194,w,c	;volatile
   735   001558  185E               	xorwf	??_ADC_SelectChannel^0,w,c
   736   00155A  0BC3               	andlw	-61
   737   00155C  185E               	xorwf	??_ADC_SelectChannel^0,w,c
   738   00155E  6EC2               	movwf	194,c	;volatile
   739   001560                     
   740                           ;MCAL/ADC/adc.c: 106:         adc_input_channel_port_configure(channel);
   741   001560  505D               	movf	ADC_SelectChannel@channel^0,w,c
   742   001562  EC5E  F009         	call	_adc_input_channel_port_configure
   743   001566                     
   744                           ;MCAL/ADC/adc.c: 107:         ret = (Std_ReturnType)0x01;
   745   001566  0E01               	movlw	1
   746   001568  6E5F               	movwf	ADC_SelectChannel@ret^0,c
   747   00156A                     l3062:
   748                           
   749                           ;MCAL/ADC/adc.c: 109:     return ret;
   750   00156A  505F               	movf	ADC_SelectChannel@ret^0,w,c
   751   00156C  0012               	return		;funcret
   752   00156E                     __end_of_ADC_SelectChannel:
   753                           	callstack 0
   754                           
   755 ;; *************** function _adc_input_channel_port_configure *****************
   756 ;; Defined at:
   757 ;;		line 6 in file "MCAL/ADC/adc.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  channel         1    wreg     enum E3029
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  channel         1    3[COMRAM] enum E3029
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 2
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_ADC_SelectChannel
   782 ;;		_ADC_Init
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text4
   787   0012BC                     __ptext4:
   788                           	callstack 0
   789   0012BC                     _adc_input_channel_port_configure:
   790                           	callstack 26
   791                           
   792                           ;incstack = 0
   793                           ;adc_input_channel_port_configure@channel stored from wreg
   794   0012BC  6E5A               	movwf	adc_input_channel_port_configure@channel^0,c
   795   0012BE                     
   796                           ;MCAL/ADC/adc.c: 7:     switch(channel){
   797   0012BE  EF88  F009         	goto	l1588
   798   0012C2                     l1562:
   799   0012C2  8092               	bsf	146,0,c	;volatile
   800   0012C4  EFC9  F009         	goto	l790
   801   0012C8                     l1564:
   802   0012C8  8292               	bsf	146,1,c	;volatile
   803   0012CA  EFC9  F009         	goto	l790
   804   0012CE                     l1566:
   805   0012CE  8492               	bsf	146,2,c	;volatile
   806   0012D0  EFC9  F009         	goto	l790
   807   0012D4                     l1568:
   808   0012D4  8692               	bsf	146,3,c	;volatile
   809   0012D6  EFC9  F009         	goto	l790
   810   0012DA                     l1570:
   811   0012DA  8A92               	bsf	146,5,c	;volatile
   812   0012DC  EFC9  F009         	goto	l790
   813   0012E0                     l1572:
   814   0012E0  8096               	bsf	150,0,c	;volatile
   815   0012E2  EFC9  F009         	goto	l790
   816   0012E6                     l1574:
   817   0012E6  8296               	bsf	150,1,c	;volatile
   818   0012E8  EFC9  F009         	goto	l790
   819   0012EC                     l1576:
   820   0012EC  8496               	bsf	150,2,c	;volatile
   821   0012EE  EFC9  F009         	goto	l790
   822   0012F2                     l1578:
   823   0012F2  8493               	bsf	147,2,c	;volatile
   824   0012F4  EFC9  F009         	goto	l790
   825   0012F8                     l1580:
   826   0012F8  8693               	bsf	147,3,c	;volatile
   827   0012FA  EFC9  F009         	goto	l790
   828   0012FE                     l1582:
   829   0012FE  8293               	bsf	147,1,c	;volatile
   830   001300  EFC9  F009         	goto	l790
   831   001304                     l1584:
   832   001304  8893               	bsf	147,4,c	;volatile
   833   001306  EFC9  F009         	goto	l790
   834   00130A                     l1586:
   835   00130A  8093               	bsf	147,0,c	;volatile
   836   00130C  EFC9  F009         	goto	l790
   837   001310                     l1588:
   838   001310  505A               	movf	adc_input_channel_port_configure@channel^0,w,c
   839   001312  6E58               	movwf	??_adc_input_channel_port_configure^0,c
   840   001314  6A59               	clrf	(??_adc_input_channel_port_configure+1)^0,c
   841                           
   842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 1, Range of values is 0 to 0
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ;	Chosen strategy is simple_byte
   849   001316  5059               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
   850   001318  0A00               	xorlw	0	; case 0
   851   00131A  B4D8               	btfsc	status,2,c
   852   00131C  EF92  F009         	goto	l3140
   853   001320  EFC9  F009         	goto	l790
   854   001324                     l3140:
   855                           
   856                           ; Switch size 1, requested type "simple"
   857                           ; Number of cases is 13, Range of values is 0 to 12
   858                           ; switch strategies available:
   859                           ; Name         Instructions Cycles
   860                           ; simple_byte           40    21 (average)
   861                           ;	Chosen strategy is simple_byte
   862   001324  5058               	movf	??_adc_input_channel_port_configure^0,w,c
   863   001326  0A00               	xorlw	0	; case 0
   864   001328  B4D8               	btfsc	status,2,c
   865   00132A  EF61  F009         	goto	l1562
   866   00132E  0A01               	xorlw	1	; case 1
   867   001330  B4D8               	btfsc	status,2,c
   868   001332  EF64  F009         	goto	l1564
   869   001336  0A03               	xorlw	3	; case 2
   870   001338  B4D8               	btfsc	status,2,c
   871   00133A  EF67  F009         	goto	l1566
   872   00133E  0A01               	xorlw	1	; case 3
   873   001340  B4D8               	btfsc	status,2,c
   874   001342  EF6A  F009         	goto	l1568
   875   001346  0A07               	xorlw	7	; case 4
   876   001348  B4D8               	btfsc	status,2,c
   877   00134A  EF6D  F009         	goto	l1570
   878   00134E  0A01               	xorlw	1	; case 5
   879   001350  B4D8               	btfsc	status,2,c
   880   001352  EF70  F009         	goto	l1572
   881   001356  0A03               	xorlw	3	; case 6
   882   001358  B4D8               	btfsc	status,2,c
   883   00135A  EF73  F009         	goto	l1574
   884   00135E  0A01               	xorlw	1	; case 7
   885   001360  B4D8               	btfsc	status,2,c
   886   001362  EF76  F009         	goto	l1576
   887   001366  0A0F               	xorlw	15	; case 8
   888   001368  B4D8               	btfsc	status,2,c
   889   00136A  EF79  F009         	goto	l1578
   890   00136E  0A01               	xorlw	1	; case 9
   891   001370  B4D8               	btfsc	status,2,c
   892   001372  EF7C  F009         	goto	l1580
   893   001376  0A03               	xorlw	3	; case 10
   894   001378  B4D8               	btfsc	status,2,c
   895   00137A  EF7F  F009         	goto	l1582
   896   00137E  0A01               	xorlw	1	; case 11
   897   001380  B4D8               	btfsc	status,2,c
   898   001382  EF82  F009         	goto	l1584
   899   001386  0A07               	xorlw	7	; case 12
   900   001388  B4D8               	btfsc	status,2,c
   901   00138A  EF85  F009         	goto	l1586
   902   00138E  EFC9  F009         	goto	l790
   903   001392                     l790:
   904   001392  0012               	return		;funcret
   905   001394                     __end_of_adc_input_channel_port_configure:
   906                           	callstack 0
   907                           
   908 ;; *************** function _ADC_GetConversionResult *****************
   909 ;; Defined at:
   910 ;;		line 133 in file "MCAL/ADC/adc.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  _adc            2    1[COMRAM] PTR const struct .
   913 ;;		 -> adc_1(7), 
   914 ;;  conversion_r    2    3[COMRAM] PTR unsigned short 
   915 ;;		 -> adc_res_4(2), adc_res_3(2), adc_res_2(2), adc_res_1(2), 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  ret             1    8[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      unsigned char 
   920 ;; Registers used:
   921 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;Total ram usage:        8 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 2
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_ADC_GetConversion_Blocking
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text5
   942   001394                     __ptext5:
   943                           	callstack 0
   944   001394                     _ADC_GetConversionResult:
   945                           	callstack 27
   946   001394                     
   947                           ;MCAL/ADC/adc.c: 135:     if((((void*)0) == _adc) || (((void*)0) == conversion_result)){
   948   001394  5058               	movf	ADC_GetConversionResult@_adc^0,w,c
   949   001396  1059               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
   950   001398  B4D8               	btfsc	status,2,c
   951   00139A  EFD1  F009         	goto	u1761
   952   00139E  EFD3  F009         	goto	u1760
   953   0013A2                     u1761:
   954   0013A2  EFDC  F009         	goto	l3082
   955   0013A6                     u1760:
   956   0013A6  505A               	movf	ADC_GetConversionResult@conversion_result^0,w,c
   957   0013A8  105B               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
   958   0013AA  A4D8               	btfss	status,2,c
   959   0013AC  EFDA  F009         	goto	u1771
   960   0013B0  EFDC  F009         	goto	u1770
   961   0013B4                     u1771:
   962   0013B4  EFE0  F009         	goto	l3084
   963   0013B8                     u1770:
   964   0013B8                     l3082:
   965                           
   966                           ;MCAL/ADC/adc.c: 136:         ret = (Std_ReturnType)0x00;
   967   0013B8  0E00               	movlw	0
   968   0013BA  6E5F               	movwf	ADC_GetConversionResult@ret^0,c
   969                           
   970                           ;MCAL/ADC/adc.c: 137:     }
   971   0013BC  EF2A  F00A         	goto	l3096
   972   0013C0                     l3084:
   973                           
   974                           ;MCAL/ADC/adc.c: 139:         if(0x01U == _adc->result_format){
   975   0013C0  EE20 F006          	lfsr	2,6
   976   0013C4  5058               	movf	ADC_GetConversionResult@_adc^0,w,c
   977   0013C6  26D9               	addwf	fsr2l,f,c
   978   0013C8  5059               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
   979   0013CA  22DA               	addwfc	fsr2h,f,c
   980   0013CC  A2DF               	btfss	indf2,1,c
   981   0013CE  EFEB  F009         	goto	u1781
   982   0013D2  EFED  F009         	goto	u1780
   983   0013D6                     u1781:
   984   0013D6  EF01  F00A         	goto	l3088
   985   0013DA                     u1780:
   986   0013DA                     l3086:
   987                           
   988                           ;MCAL/ADC/adc.c: 140:             *conversion_result = (adc_result_t)((ADRESH << 8) + AD
      +                          RESL);
   989   0013DA  50C3               	movf	195,w,c	;volatile
   990   0013DC  CFC4 F05C          	movff	4036,??_ADC_GetConversionResult	;volatile
   991   0013E0  6A5D               	clrf	(??_ADC_GetConversionResult+1)^0,c
   992   0013E2  C05C  F05D         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
   993   0013E6  6A5C               	clrf	??_ADC_GetConversionResult^0,c
   994   0013E8  265C               	addwf	??_ADC_GetConversionResult^0,f,c
   995   0013EA  0E00               	movlw	0
   996   0013EC  225D               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
   997   0013EE  C05A  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
   998   0013F2  C05B  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
   999   0013F6  C05C  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1000   0013FA  C05D  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1001                           
  1002                           ;MCAL/ADC/adc.c: 141:         }
  1003   0013FE  EF28  F00A         	goto	l3094
  1004   001402                     l3088:
  1005   001402  EE20 F006          	lfsr	2,6
  1006   001406  5058               	movf	ADC_GetConversionResult@_adc^0,w,c
  1007   001408  26D9               	addwf	fsr2l,f,c
  1008   00140A  5059               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  1009   00140C  22DA               	addwfc	fsr2h,f,c
  1010   00140E  B2DF               	btfsc	indf2,1,c
  1011   001410  EF0C  F00A         	goto	u1791
  1012   001414  EF0E  F00A         	goto	u1790
  1013   001418                     u1791:
  1014   001418  EFED  F009         	goto	l3086
  1015   00141C                     u1790:
  1016   00141C                     
  1017                           ;MCAL/ADC/adc.c: 143:             *conversion_result = (adc_result_t)(((ADRESH << 8) + A
      +                          DRESL) >> 6);
  1018   00141C  50C3               	movf	195,w,c	;volatile
  1019   00141E  CFC4 F05C          	movff	4036,??_ADC_GetConversionResult	;volatile
  1020   001422  6A5D               	clrf	(??_ADC_GetConversionResult+1)^0,c
  1021   001424  C05C  F05D         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  1022   001428  6A5C               	clrf	??_ADC_GetConversionResult^0,c
  1023   00142A  265C               	addwf	??_ADC_GetConversionResult^0,f,c
  1024   00142C  0E00               	movlw	0
  1025   00142E  225D               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  1026   001430  0E06               	movlw	6
  1027   001432  6E5E               	movwf	(??_ADC_GetConversionResult+2)^0,c
  1028   001434                     u1805:
  1029   001434  345D               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  1030   001436  325D               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  1031   001438  325C               	rrcf	??_ADC_GetConversionResult^0,f,c
  1032   00143A  2E5E               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  1033   00143C  EF1A  F00A         	goto	u1805
  1034   001440  C05A  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
  1035   001444  C05B  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
  1036   001448  C05C  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1037   00144C  C05D  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1038   001450                     l3094:
  1039                           
  1040                           ;MCAL/ADC/adc.c: 148:         ret = (Std_ReturnType)0x01;
  1041   001450  0E01               	movlw	1
  1042   001452  6E5F               	movwf	ADC_GetConversionResult@ret^0,c
  1043   001454                     l3096:
  1044                           
  1045                           ;MCAL/ADC/adc.c: 150:     return ret;
  1046   001454  505F               	movf	ADC_GetConversionResult@ret^0,w,c
  1047   001456  0012               	return		;funcret
  1048   001458                     __end_of_ADC_GetConversionResult:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _InterruptManager *****************
  1052 ;; Defined at:
  1053 ;;		line 24 in file "MCAL/INTERRUPT/mcal_interrupt_manager.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 1
  1074 ;; This function calls:
  1075 ;;		_ADC_ISR
  1076 ;;		_INT0_ISR
  1077 ;;		_INT1_ISR
  1078 ;;		_INT2_ISR
  1079 ;;		_RB4_ISR
  1080 ;;		_RB5_ISR
  1081 ;;		_RB6_ISR
  1082 ;;		_RB7_ISR
  1083 ;; This function is called by:
  1084 ;;		Interrupt level 2
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	intcode
  1089   000008                     __pintcode:
  1090                           	callstack 0
  1091   000008                     _InterruptManager:
  1092                           	callstack 26
  1093                           
  1094                           ;incstack = 0
  1095   000008  8266               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1096   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
  1097                           
  1098                           	psect	intcode_body
  1099   001016                     __pintcode_body:
  1100                           	callstack 26
  1101   001016                     int_func:
  1102                           	callstack 26
  1103   001016  0006               	pop		; remove dummy address from shadow register refresh
  1104   001018                     
  1105                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 26:     if((1 == INTCONbits.INT0IE) && (1 == I
      +                          NTCONbits.INT0IF)){
  1106   001018  A8F2               	btfss	242,4,c	;volatile
  1107   00101A  EF11  F008         	goto	i2u127_41
  1108   00101E  EF13  F008         	goto	i2u127_40
  1109   001022                     i2u127_41:
  1110   001022  EF1C  F008         	goto	i2l704
  1111   001026                     i2u127_40:
  1112   001026  A2F2               	btfss	242,1,c	;volatile
  1113   001028  EF18  F008         	goto	i2u128_41
  1114   00102C  EF1A  F008         	goto	i2u128_40
  1115   001030                     i2u128_41:
  1116   001030  EF1C  F008         	goto	i2l704
  1117   001034                     i2u128_40:
  1118   001034                     
  1119                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 27:         INT0_ISR();
  1120   001034  EC31  F00B         	call	_INT0_ISR	;wreg free
  1121   001038                     i2l704:
  1122                           
  1123                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 30:     if((1 == INTCON3bits.INT1E) && (1 == I
      +                          NTCON3bits.INT1F)){
  1124   001038  A6F0               	btfss	240,3,c	;volatile
  1125   00103A  EF21  F008         	goto	i2u129_41
  1126   00103E  EF23  F008         	goto	i2u129_40
  1127   001042                     i2u129_41:
  1128   001042  EF2C  F008         	goto	i2l706
  1129   001046                     i2u129_40:
  1130   001046  A0F0               	btfss	240,0,c	;volatile
  1131   001048  EF28  F008         	goto	i2u130_41
  1132   00104C  EF2A  F008         	goto	i2u130_40
  1133   001050                     i2u130_41:
  1134   001050  EF2C  F008         	goto	i2l706
  1135   001054                     i2u130_40:
  1136   001054                     
  1137                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 31:         INT1_ISR();
  1138   001054  EC2F  F00B         	call	_INT1_ISR	;wreg free
  1139   001058                     i2l706:
  1140                           
  1141                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 34:     if((1 == INTCON3bits.INT2IE) && (1 == 
      +                          INTCON3bits.INT2IF)){
  1142   001058  A8F0               	btfss	240,4,c	;volatile
  1143   00105A  EF31  F008         	goto	i2u131_41
  1144   00105E  EF33  F008         	goto	i2u131_40
  1145   001062                     i2u131_41:
  1146   001062  EF3C  F008         	goto	i2l708
  1147   001066                     i2u131_40:
  1148   001066  A2F0               	btfss	240,1,c	;volatile
  1149   001068  EF38  F008         	goto	i2u132_41
  1150   00106C  EF3A  F008         	goto	i2u132_40
  1151   001070                     i2u132_41:
  1152   001070  EF3C  F008         	goto	i2l708
  1153   001074                     i2u132_40:
  1154   001074                     
  1155                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 35:         INT2_ISR();
  1156   001074  EC2D  F00B         	call	_INT2_ISR	;wreg free
  1157   001078                     i2l708:
  1158                           
  1159                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 41:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1160   001078  A6F2               	btfss	242,3,c	;volatile
  1161   00107A  EF41  F008         	goto	i2u133_41
  1162   00107E  EF43  F008         	goto	i2u133_40
  1163   001082                     i2u133_41:
  1164   001082  EF5E  F008         	goto	i2l710
  1165   001086                     i2u133_40:
  1166   001086  A0F2               	btfss	242,0,c	;volatile
  1167   001088  EF48  F008         	goto	i2u134_41
  1168   00108C  EF4A  F008         	goto	i2u134_40
  1169   001090                     i2u134_41:
  1170   001090  EF5E  F008         	goto	i2l710
  1171   001094                     i2u134_40:
  1172   001094  A881               	btfss	129,4,c	;volatile
  1173   001096  EF4F  F008         	goto	i2u135_41
  1174   00109A  EF51  F008         	goto	i2u135_40
  1175   00109E                     i2u135_41:
  1176   00109E  EF5E  F008         	goto	i2l710
  1177   0010A2                     i2u135_40:
  1178   0010A2  044F               	decf	_RB4_Flag^0,w,c	;volatile
  1179   0010A4  A4D8               	btfss	status,2,c
  1180   0010A6  EF57  F008         	goto	i2u136_41
  1181   0010AA  EF59  F008         	goto	i2u136_40
  1182   0010AE                     i2u136_41:
  1183   0010AE  EF5E  F008         	goto	i2l710
  1184   0010B2                     i2u136_40:
  1185   0010B2                     
  1186                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 42:        (PORTBbits.RB4 == gpio_high) && (RB
      +                          4_Flag == 1)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 43:         RB4_Flag = 0;
  1187   0010B2  0E00               	movlw	0
  1188   0010B4  6E4F               	movwf	_RB4_Flag^0,c	;volatile
  1189   0010B6                     
  1190                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 44:         RB4_ISR(0);
  1191   0010B6  0E00               	movlw	0
  1192   0010B8  EC20  F00B         	call	_RB4_ISR
  1193   0010BC                     i2l710:
  1194                           
  1195                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 47:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1196   0010BC  A6F2               	btfss	242,3,c	;volatile
  1197   0010BE  EF63  F008         	goto	i2u137_41
  1198   0010C2  EF65  F008         	goto	i2u137_40
  1199   0010C6                     i2u137_41:
  1200   0010C6  EF80  F008         	goto	i2l712
  1201   0010CA                     i2u137_40:
  1202   0010CA  A0F2               	btfss	242,0,c	;volatile
  1203   0010CC  EF6A  F008         	goto	i2u138_41
  1204   0010D0  EF6C  F008         	goto	i2u138_40
  1205   0010D4                     i2u138_41:
  1206   0010D4  EF80  F008         	goto	i2l712
  1207   0010D8                     i2u138_40:
  1208   0010D8  B881               	btfsc	129,4,c	;volatile
  1209   0010DA  EF71  F008         	goto	i2u139_41
  1210   0010DE  EF73  F008         	goto	i2u139_40
  1211   0010E2                     i2u139_41:
  1212   0010E2  EF80  F008         	goto	i2l712
  1213   0010E6                     i2u139_40:
  1214   0010E6  504F               	movf	_RB4_Flag^0,w,c	;volatile
  1215   0010E8  A4D8               	btfss	status,2,c
  1216   0010EA  EF79  F008         	goto	i2u140_41
  1217   0010EE  EF7B  F008         	goto	i2u140_40
  1218   0010F2                     i2u140_41:
  1219   0010F2  EF80  F008         	goto	i2l712
  1220   0010F6                     i2u140_40:
  1221   0010F6                     
  1222                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 48:        (PORTBbits.RB4 == gpio_low) && (RB4
      +                          _Flag == 0)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 49:         RB4_Flag = 1;
  1223   0010F6  0E01               	movlw	1
  1224   0010F8  6E4F               	movwf	_RB4_Flag^0,c	;volatile
  1225   0010FA                     
  1226                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 50:         RB4_ISR(1);
  1227   0010FA  0E01               	movlw	1
  1228   0010FC  EC20  F00B         	call	_RB4_ISR
  1229   001100                     i2l712:
  1230                           
  1231                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 53:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1232   001100  A6F2               	btfss	242,3,c	;volatile
  1233   001102  EF85  F008         	goto	i2u141_41
  1234   001106  EF87  F008         	goto	i2u141_40
  1235   00110A                     i2u141_41:
  1236   00110A  EFA2  F008         	goto	i2l714
  1237   00110E                     i2u141_40:
  1238   00110E  A0F2               	btfss	242,0,c	;volatile
  1239   001110  EF8C  F008         	goto	i2u142_41
  1240   001114  EF8E  F008         	goto	i2u142_40
  1241   001118                     i2u142_41:
  1242   001118  EFA2  F008         	goto	i2l714
  1243   00111C                     i2u142_40:
  1244   00111C  AA81               	btfss	129,5,c	;volatile
  1245   00111E  EF93  F008         	goto	i2u143_41
  1246   001122  EF95  F008         	goto	i2u143_40
  1247   001126                     i2u143_41:
  1248   001126  EFA2  F008         	goto	i2l714
  1249   00112A                     i2u143_40:
  1250   00112A  044E               	decf	_RB5_Flag^0,w,c	;volatile
  1251   00112C  A4D8               	btfss	status,2,c
  1252   00112E  EF9B  F008         	goto	i2u144_41
  1253   001132  EF9D  F008         	goto	i2u144_40
  1254   001136                     i2u144_41:
  1255   001136  EFA2  F008         	goto	i2l714
  1256   00113A                     i2u144_40:
  1257   00113A                     
  1258                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 54:        (PORTBbits.RB5 == gpio_high) && (RB
      +                          5_Flag == 1)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 55:         RB5_Flag = 0;
  1259   00113A  0E00               	movlw	0
  1260   00113C  6E4E               	movwf	_RB5_Flag^0,c	;volatile
  1261   00113E                     
  1262                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 56:         RB5_ISR(0);
  1263   00113E  0E00               	movlw	0
  1264   001140  EC13  F00B         	call	_RB5_ISR
  1265   001144                     i2l714:
  1266                           
  1267                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 59:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1268   001144  A6F2               	btfss	242,3,c	;volatile
  1269   001146  EFA7  F008         	goto	i2u145_41
  1270   00114A  EFA9  F008         	goto	i2u145_40
  1271   00114E                     i2u145_41:
  1272   00114E  EFC4  F008         	goto	i2l716
  1273   001152                     i2u145_40:
  1274   001152  A0F2               	btfss	242,0,c	;volatile
  1275   001154  EFAE  F008         	goto	i2u146_41
  1276   001158  EFB0  F008         	goto	i2u146_40
  1277   00115C                     i2u146_41:
  1278   00115C  EFC4  F008         	goto	i2l716
  1279   001160                     i2u146_40:
  1280   001160  BA81               	btfsc	129,5,c	;volatile
  1281   001162  EFB5  F008         	goto	i2u147_41
  1282   001166  EFB7  F008         	goto	i2u147_40
  1283   00116A                     i2u147_41:
  1284   00116A  EFC4  F008         	goto	i2l716
  1285   00116E                     i2u147_40:
  1286   00116E  504E               	movf	_RB5_Flag^0,w,c	;volatile
  1287   001170  A4D8               	btfss	status,2,c
  1288   001172  EFBD  F008         	goto	i2u148_41
  1289   001176  EFBF  F008         	goto	i2u148_40
  1290   00117A                     i2u148_41:
  1291   00117A  EFC4  F008         	goto	i2l716
  1292   00117E                     i2u148_40:
  1293   00117E                     
  1294                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 60:        (PORTBbits.RB5 == gpio_low) && (RB5
      +                          _Flag == 0)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 61:         RB5_Flag = 1;
  1295   00117E  0E01               	movlw	1
  1296   001180  6E4E               	movwf	_RB5_Flag^0,c	;volatile
  1297   001182                     
  1298                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 62:         RB5_ISR(1);
  1299   001182  0E01               	movlw	1
  1300   001184  EC13  F00B         	call	_RB5_ISR
  1301   001188                     i2l716:
  1302                           
  1303                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 65:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1304   001188  A6F2               	btfss	242,3,c	;volatile
  1305   00118A  EFC9  F008         	goto	i2u149_41
  1306   00118E  EFCB  F008         	goto	i2u149_40
  1307   001192                     i2u149_41:
  1308   001192  EFE6  F008         	goto	i2l718
  1309   001196                     i2u149_40:
  1310   001196  A0F2               	btfss	242,0,c	;volatile
  1311   001198  EFD0  F008         	goto	i2u150_41
  1312   00119C  EFD2  F008         	goto	i2u150_40
  1313   0011A0                     i2u150_41:
  1314   0011A0  EFE6  F008         	goto	i2l718
  1315   0011A4                     i2u150_40:
  1316   0011A4  AC81               	btfss	129,6,c	;volatile
  1317   0011A6  EFD7  F008         	goto	i2u151_41
  1318   0011AA  EFD9  F008         	goto	i2u151_40
  1319   0011AE                     i2u151_41:
  1320   0011AE  EFE6  F008         	goto	i2l718
  1321   0011B2                     i2u151_40:
  1322   0011B2  044D               	decf	_RB6_Flag^0,w,c	;volatile
  1323   0011B4  A4D8               	btfss	status,2,c
  1324   0011B6  EFDF  F008         	goto	i2u152_41
  1325   0011BA  EFE1  F008         	goto	i2u152_40
  1326   0011BE                     i2u152_41:
  1327   0011BE  EFE6  F008         	goto	i2l718
  1328   0011C2                     i2u152_40:
  1329   0011C2                     
  1330                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 66:        (PORTBbits.RB6 == gpio_high) && (RB
      +                          6_Flag == 1)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 67:         RB6_Flag = 0;
  1331   0011C2  0E00               	movlw	0
  1332   0011C4  6E4D               	movwf	_RB6_Flag^0,c	;volatile
  1333   0011C6                     
  1334                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 68:         RB6_ISR(0);
  1335   0011C6  0E00               	movlw	0
  1336   0011C8  EC06  F00B         	call	_RB6_ISR
  1337   0011CC                     i2l718:
  1338                           
  1339                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 71:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1340   0011CC  A6F2               	btfss	242,3,c	;volatile
  1341   0011CE  EFEB  F008         	goto	i2u153_41
  1342   0011D2  EFED  F008         	goto	i2u153_40
  1343   0011D6                     i2u153_41:
  1344   0011D6  EF08  F009         	goto	i2l720
  1345   0011DA                     i2u153_40:
  1346   0011DA  A0F2               	btfss	242,0,c	;volatile
  1347   0011DC  EFF2  F008         	goto	i2u154_41
  1348   0011E0  EFF4  F008         	goto	i2u154_40
  1349   0011E4                     i2u154_41:
  1350   0011E4  EF08  F009         	goto	i2l720
  1351   0011E8                     i2u154_40:
  1352   0011E8  BC81               	btfsc	129,6,c	;volatile
  1353   0011EA  EFF9  F008         	goto	i2u155_41
  1354   0011EE  EFFB  F008         	goto	i2u155_40
  1355   0011F2                     i2u155_41:
  1356   0011F2  EF08  F009         	goto	i2l720
  1357   0011F6                     i2u155_40:
  1358   0011F6  504D               	movf	_RB6_Flag^0,w,c	;volatile
  1359   0011F8  A4D8               	btfss	status,2,c
  1360   0011FA  EF01  F009         	goto	i2u156_41
  1361   0011FE  EF03  F009         	goto	i2u156_40
  1362   001202                     i2u156_41:
  1363   001202  EF08  F009         	goto	i2l720
  1364   001206                     i2u156_40:
  1365   001206                     
  1366                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 72:        (PORTBbits.RB6 == gpio_low) && (RB6
      +                          _Flag == 0)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 73:         RB6_Flag = 1;
  1367   001206  0E01               	movlw	1
  1368   001208  6E4D               	movwf	_RB6_Flag^0,c	;volatile
  1369   00120A                     
  1370                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 74:         RB6_ISR(1);
  1371   00120A  0E01               	movlw	1
  1372   00120C  EC06  F00B         	call	_RB6_ISR
  1373   001210                     i2l720:
  1374                           
  1375                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 77:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1376   001210  A6F2               	btfss	242,3,c	;volatile
  1377   001212  EF0D  F009         	goto	i2u157_41
  1378   001216  EF0F  F009         	goto	i2u157_40
  1379   00121A                     i2u157_41:
  1380   00121A  EF2A  F009         	goto	i2l722
  1381   00121E                     i2u157_40:
  1382   00121E  A0F2               	btfss	242,0,c	;volatile
  1383   001220  EF14  F009         	goto	i2u158_41
  1384   001224  EF16  F009         	goto	i2u158_40
  1385   001228                     i2u158_41:
  1386   001228  EF2A  F009         	goto	i2l722
  1387   00122C                     i2u158_40:
  1388   00122C  AE81               	btfss	129,7,c	;volatile
  1389   00122E  EF1B  F009         	goto	i2u159_41
  1390   001232  EF1D  F009         	goto	i2u159_40
  1391   001236                     i2u159_41:
  1392   001236  EF2A  F009         	goto	i2l722
  1393   00123A                     i2u159_40:
  1394   00123A  044C               	decf	_RB7_Flag^0,w,c	;volatile
  1395   00123C  A4D8               	btfss	status,2,c
  1396   00123E  EF23  F009         	goto	i2u160_41
  1397   001242  EF25  F009         	goto	i2u160_40
  1398   001246                     i2u160_41:
  1399   001246  EF2A  F009         	goto	i2l722
  1400   00124A                     i2u160_40:
  1401   00124A                     
  1402                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 78:        (PORTBbits.RB7 == gpio_high) && (RB
      +                          7_Flag == 1)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 79:         RB7_Flag = 0;
  1403   00124A  0E00               	movlw	0
  1404   00124C  6E4C               	movwf	_RB7_Flag^0,c	;volatile
  1405   00124E                     
  1406                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 80:         RB7_ISR(0);
  1407   00124E  0E00               	movlw	0
  1408   001250  ECF9  F00A         	call	_RB7_ISR
  1409   001254                     i2l722:
  1410                           
  1411                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 83:     if((1 == INTCONbits.RBIE) && (1 == INT
      +                          CONbits.RBIF) &&
  1412   001254  A6F2               	btfss	242,3,c	;volatile
  1413   001256  EF2F  F009         	goto	i2u161_41
  1414   00125A  EF31  F009         	goto	i2u161_40
  1415   00125E                     i2u161_41:
  1416   00125E  EF4C  F009         	goto	i2l724
  1417   001262                     i2u161_40:
  1418   001262  A0F2               	btfss	242,0,c	;volatile
  1419   001264  EF36  F009         	goto	i2u162_41
  1420   001268  EF38  F009         	goto	i2u162_40
  1421   00126C                     i2u162_41:
  1422   00126C  EF4C  F009         	goto	i2l724
  1423   001270                     i2u162_40:
  1424   001270  BE81               	btfsc	129,7,c	;volatile
  1425   001272  EF3D  F009         	goto	i2u163_41
  1426   001276  EF3F  F009         	goto	i2u163_40
  1427   00127A                     i2u163_41:
  1428   00127A  EF4C  F009         	goto	i2l724
  1429   00127E                     i2u163_40:
  1430   00127E  504C               	movf	_RB7_Flag^0,w,c	;volatile
  1431   001280  A4D8               	btfss	status,2,c
  1432   001282  EF45  F009         	goto	i2u164_41
  1433   001286  EF47  F009         	goto	i2u164_40
  1434   00128A                     i2u164_41:
  1435   00128A  EF4C  F009         	goto	i2l724
  1436   00128E                     i2u164_40:
  1437   00128E                     
  1438                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 84:        (PORTBbits.RB7 == gpio_low) && (RB7
      +                          _Flag == 0)){;MCAL/INTERRUPT/mcal_interrupt_manager.c: 85:         RB7_Flag = 1;
  1439   00128E  0E01               	movlw	1
  1440   001290  6E4C               	movwf	_RB7_Flag^0,c	;volatile
  1441   001292                     
  1442                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 86:         RB7_ISR(1);
  1443   001292  0E01               	movlw	1
  1444   001294  ECF9  F00A         	call	_RB7_ISR
  1445   001298                     i2l724:
  1446                           
  1447                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 91:     if((1 == PIE1bits.ADIE ) && (1 == PIR1
      +                          bits.ADIF)){
  1448   001298  AC9D               	btfss	157,6,c	;volatile
  1449   00129A  EF51  F009         	goto	i2u165_41
  1450   00129E  EF53  F009         	goto	i2u165_40
  1451   0012A2                     i2u165_41:
  1452   0012A2  EF5C  F009         	goto	i2l727
  1453   0012A6                     i2u165_40:
  1454   0012A6  AC9E               	btfss	158,6,c	;volatile
  1455   0012A8  EF58  F009         	goto	i2u166_41
  1456   0012AC  EF5A  F009         	goto	i2u166_40
  1457   0012B0                     i2u166_41:
  1458   0012B0  EF5C  F009         	goto	i2l727
  1459   0012B4                     i2u166_40:
  1460   0012B4                     
  1461                           ;MCAL/INTERRUPT/mcal_interrupt_manager.c: 92:         ADC_ISR();
  1462   0012B4  EC33  F00B         	call	_ADC_ISR	;wreg free
  1463   0012B8                     i2l727:
  1464   0012B8  9266               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1465   0012BA  0011               	retfie		f
  1466   0012BC                     __end_of_InterruptManager:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _RB7_ISR *****************
  1470 ;; Defined at:
  1471 ;;		line 383 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  RB7_Source      1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_InterruptManager
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text7
  1499   0015F2                     __ptext7:
  1500                           	callstack 0
  1501   0015F2                     _RB7_ISR:
  1502                           	callstack 26
  1503                           
  1504                           ;incstack = 0
  1505                           ;RB7_ISR@RB7_Source stored from wreg
  1506   0015F2  6E57               	movwf	RB7_ISR@RB7_Source^0,c
  1507   0015F4                     
  1508                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 384:     (INTCONbits.RBIF = 0);
  1509   0015F4  90F2               	bcf	242,0,c	;volatile
  1510   0015F6                     
  1511                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 387:     if(0 == RB7_Source){
  1512   0015F6  5057               	movf	RB7_ISR@RB7_Source^0,w,c
  1513   0015F8  A4D8               	btfss	status,2,c
  1514   0015FA  EF01  F00B         	goto	i2u36_41
  1515   0015FE  EF03  F00B         	goto	i2u36_40
  1516   001602                     i2u36_41:
  1517   001602  EF05  F00B         	goto	i2l1952
  1518   001606                     i2u36_40:
  1519   001606  EF05  F00B         	goto	i2l664
  1520   00160A                     i2l1952:
  1521   00160A                     i2l664:
  1522   00160A  0012               	return		;funcret
  1523   00160C                     __end_of_RB7_ISR:
  1524                           	callstack 0
  1525                           
  1526 ;; *************** function _RB6_ISR *****************
  1527 ;; Defined at:
  1528 ;;		line 369 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  RB6_Source      1    wreg     unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;Total ram usage:        1 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_InterruptManager
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text8
  1556   00160C                     __ptext8:
  1557                           	callstack 0
  1558   00160C                     _RB6_ISR:
  1559                           	callstack 26
  1560                           
  1561                           ;incstack = 0
  1562                           ;RB6_ISR@RB6_Source stored from wreg
  1563   00160C  6E57               	movwf	RB6_ISR@RB6_Source^0,c
  1564   00160E                     
  1565                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 370:     (INTCONbits.RBIF = 0);
  1566   00160E  90F2               	bcf	242,0,c	;volatile
  1567   001610                     
  1568                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 373:     if(0 == RB6_Source){
  1569   001610  5057               	movf	RB6_ISR@RB6_Source^0,w,c
  1570   001612  A4D8               	btfss	status,2,c
  1571   001614  EF0E  F00B         	goto	i2u35_41
  1572   001618  EF10  F00B         	goto	i2u35_40
  1573   00161C                     i2u35_41:
  1574   00161C  EF12  F00B         	goto	i2l1938
  1575   001620                     i2u35_40:
  1576   001620  EF12  F00B         	goto	i2l653
  1577   001624                     i2l1938:
  1578   001624                     i2l653:
  1579   001624  0012               	return		;funcret
  1580   001626                     __end_of_RB6_ISR:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _RB5_ISR *****************
  1584 ;; Defined at:
  1585 ;;		line 355 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  RB5_Source      1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        1 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_InterruptManager
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text9
  1613   001626                     __ptext9:
  1614                           	callstack 0
  1615   001626                     _RB5_ISR:
  1616                           	callstack 26
  1617                           
  1618                           ;incstack = 0
  1619                           ;RB5_ISR@RB5_Source stored from wreg
  1620   001626  6E57               	movwf	RB5_ISR@RB5_Source^0,c
  1621   001628                     
  1622                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 356:     (INTCONbits.RBIF = 0);
  1623   001628  90F2               	bcf	242,0,c	;volatile
  1624   00162A                     
  1625                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 359:     if(0 == RB5_Source){
  1626   00162A  5057               	movf	RB5_ISR@RB5_Source^0,w,c
  1627   00162C  A4D8               	btfss	status,2,c
  1628   00162E  EF1B  F00B         	goto	i2u34_41
  1629   001632  EF1D  F00B         	goto	i2u34_40
  1630   001636                     i2u34_41:
  1631   001636  EF1F  F00B         	goto	i2l1924
  1632   00163A                     i2u34_40:
  1633   00163A  EF1F  F00B         	goto	i2l642
  1634   00163E                     i2l1924:
  1635   00163E                     i2l642:
  1636   00163E  0012               	return		;funcret
  1637   001640                     __end_of_RB5_ISR:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _RB4_ISR *****************
  1641 ;; Defined at:
  1642 ;;		line 341 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  RB4_Source      1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_InterruptManager
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text10
  1670   001640                     __ptext10:
  1671                           	callstack 0
  1672   001640                     _RB4_ISR:
  1673                           	callstack 26
  1674                           
  1675                           ;incstack = 0
  1676                           ;RB4_ISR@RB4_Source stored from wreg
  1677   001640  6E57               	movwf	RB4_ISR@RB4_Source^0,c
  1678   001642                     
  1679                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 342:     (INTCONbits.RBIF = 0);
  1680   001642  90F2               	bcf	242,0,c	;volatile
  1681   001644                     
  1682                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 345:     if(0 == RB4_Source){
  1683   001644  5057               	movf	RB4_ISR@RB4_Source^0,w,c
  1684   001646  A4D8               	btfss	status,2,c
  1685   001648  EF28  F00B         	goto	i2u33_41
  1686   00164C  EF2A  F00B         	goto	i2u33_40
  1687   001650                     i2u33_41:
  1688   001650  EF2C  F00B         	goto	i2l1910
  1689   001654                     i2u33_40:
  1690   001654  EF2C  F00B         	goto	i2l631
  1691   001658                     i2l1910:
  1692   001658                     i2l631:
  1693   001658  0012               	return		;funcret
  1694   00165A                     __end_of_RB4_ISR:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _INT2_ISR *****************
  1698 ;; Defined at:
  1699 ;;		line 334 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		None
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_InterruptManager
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text11
  1727   00165A                     __ptext11:
  1728                           	callstack 0
  1729   00165A                     _INT2_ISR:
  1730                           	callstack 26
  1731   00165A                     
  1732                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 335:     (INTCON3bits.INT2IF = 0);
  1733   00165A  92F0               	bcf	240,1,c	;volatile
  1734   00165C  0012               	return		;funcret
  1735   00165E                     __end_of_INT2_ISR:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _INT1_ISR *****************
  1739 ;; Defined at:
  1740 ;;		line 328 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		None
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_InterruptManager
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text12
  1768   00165E                     __ptext12:
  1769                           	callstack 0
  1770   00165E                     _INT1_ISR:
  1771                           	callstack 26
  1772   00165E                     
  1773                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 329:     (INTCON3bits.INT1IF = 0);
  1774   00165E  90F0               	bcf	240,0,c	;volatile
  1775   001660  0012               	return		;funcret
  1776   001662                     __end_of_INT1_ISR:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _INT0_ISR *****************
  1780 ;; Defined at:
  1781 ;;		line 322 in file "MCAL/INTERRUPT/mcal_exrternal_interrupt.c"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		None
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_InterruptManager
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text13
  1809   001662                     __ptext13:
  1810                           	callstack 0
  1811   001662                     _INT0_ISR:
  1812                           	callstack 26
  1813   001662                     
  1814                           ;MCAL/INTERRUPT/mcal_exrternal_interrupt.c: 323:     (INTCONbits.INT0IF = 0);
  1815   001662  92F2               	bcf	242,1,c	;volatile
  1816   001664  0012               	return		;funcret
  1817   001666                     __end_of_INT0_ISR:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _ADC_ISR *****************
  1821 ;; Defined at:
  1822 ;;		line 180 in file "MCAL/ADC/adc.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		None
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_InterruptManager
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text14
  1850   001666                     __ptext14:
  1851                           	callstack 0
  1852   001666                     _ADC_ISR:
  1853                           	callstack 26
  1854   001666                     
  1855                           ;MCAL/ADC/adc.c: 181:     (PIR1bits.ADIF = 0);
  1856   001666  9C9E               	bcf	158,6,c	;volatile
  1857   001668  0012               	return		;funcret
  1858   00166A                     __end_of_ADC_ISR:
  1859                           	callstack 0
  1860                           
  1861                           	psect	rparam
  1862   000000                     
  1863                           	psect	temp
  1864   000066                     btemp:
  1865                           	callstack 0
  1866   000066                     	ds	1
  1867   000000                     int$flags	set	btemp
  1868   000000                     wtemp8	set	btemp+1
  1869   000000                     ttemp5	set	btemp+1
  1870   000000                     ttemp6	set	btemp+4
  1871   000000                     ttemp7	set	btemp+8
  1872                           
  1873                           	psect	idloc
  1874                           
  1875                           ;Config register IDLOC0 @ 0x200000
  1876                           ;	unspecified, using default values
  1877   200000                     	org	2097152
  1878   200000  FF                 	db	255
  1879                           
  1880                           ;Config register IDLOC1 @ 0x200001
  1881                           ;	unspecified, using default values
  1882   200001                     	org	2097153
  1883   200001  FF                 	db	255
  1884                           
  1885                           ;Config register IDLOC2 @ 0x200002
  1886                           ;	unspecified, using default values
  1887   200002                     	org	2097154
  1888   200002  FF                 	db	255
  1889                           
  1890                           ;Config register IDLOC3 @ 0x200003
  1891                           ;	unspecified, using default values
  1892   200003                     	org	2097155
  1893   200003  FF                 	db	255
  1894                           
  1895                           ;Config register IDLOC4 @ 0x200004
  1896                           ;	unspecified, using default values
  1897   200004                     	org	2097156
  1898   200004  FF                 	db	255
  1899                           
  1900                           ;Config register IDLOC5 @ 0x200005
  1901                           ;	unspecified, using default values
  1902   200005                     	org	2097157
  1903   200005  FF                 	db	255
  1904                           
  1905                           ;Config register IDLOC6 @ 0x200006
  1906                           ;	unspecified, using default values
  1907   200006                     	org	2097158
  1908   200006  FF                 	db	255
  1909                           
  1910                           ;Config register IDLOC7 @ 0x200007
  1911                           ;	unspecified, using default values
  1912   200007                     	org	2097159
  1913   200007  FF                 	db	255
  1914                           
  1915                           	psect	config
  1916                           
  1917                           ; Padding undefined space
  1918   300000                     	org	3145728
  1919   300000  FF                 	db	255
  1920                           
  1921                           ;Config register CONFIG1H @ 0x300001
  1922                           ;	unspecified, using default values
  1923                           ;	Oscillator Selection bits
  1924                           ;	OSC = 0x7, unprogrammed default
  1925                           ;	Fail-Safe Clock Monitor Enable bit
  1926                           ;	FCMEN = 0x0, unprogrammed default
  1927                           ;	Internal/External Oscillator Switchover bit
  1928                           ;	IESO = 0x0, unprogrammed default
  1929   300001                     	org	3145729
  1930   300001  07                 	db	7
  1931                           
  1932                           ;Config register CONFIG2L @ 0x300002
  1933                           ;	unspecified, using default values
  1934                           ;	Power-up Timer Enable bit
  1935                           ;	PWRT = 0x1, unprogrammed default
  1936                           ;	Brown-out Reset Enable bits
  1937                           ;	BOREN = 0x3, unprogrammed default
  1938                           ;	Brown Out Reset Voltage bits
  1939                           ;	BORV = 0x3, unprogrammed default
  1940   300002                     	org	3145730
  1941   300002  1F                 	db	31
  1942                           
  1943                           ;Config register CONFIG2H @ 0x300003
  1944                           ;	unspecified, using default values
  1945                           ;	Watchdog Timer Enable bit
  1946                           ;	WDT = 0x1, unprogrammed default
  1947                           ;	Watchdog Timer Postscale Select bits
  1948                           ;	WDTPS = 0xF, unprogrammed default
  1949   300003                     	org	3145731
  1950   300003  1F                 	db	31
  1951                           
  1952                           ; Padding undefined space
  1953   300004                     	org	3145732
  1954   300004  FF                 	db	255
  1955                           
  1956                           ;Config register CONFIG3H @ 0x300005
  1957                           ;	unspecified, using default values
  1958                           ;	CCP2 MUX bit
  1959                           ;	CCP2MX = 0x1, unprogrammed default
  1960                           ;	PORTB A/D Enable bit
  1961                           ;	PBADEN = 0x1, unprogrammed default
  1962                           ;	Low-Power Timer1 Oscillator Enable bit
  1963                           ;	LPT1OSC = 0x0, unprogrammed default
  1964                           ;	MCLR Pin Enable bit
  1965                           ;	MCLRE = 0x1, unprogrammed default
  1966   300005                     	org	3145733
  1967   300005  83                 	db	131
  1968                           
  1969                           ;Config register CONFIG4L @ 0x300006
  1970                           ;	unspecified, using default values
  1971                           ;	Stack Full/Underflow Reset Enable bit
  1972                           ;	STVREN = 0x1, unprogrammed default
  1973                           ;	Single-Supply ICSP Enable bit
  1974                           ;	LVP = 0x1, unprogrammed default
  1975                           ;	Extended Instruction Set Enable bit
  1976                           ;	XINST = 0x0, unprogrammed default
  1977                           ;	Background Debugger Enable bit
  1978                           ;	DEBUG = 0x1, unprogrammed default
  1979   300006                     	org	3145734
  1980   300006  85                 	db	133
  1981                           
  1982                           ; Padding undefined space
  1983   300007                     	org	3145735
  1984   300007  FF                 	db	255
  1985                           
  1986                           ;Config register CONFIG5L @ 0x300008
  1987                           ;	unspecified, using default values
  1988                           ;	Code Protection bit
  1989                           ;	CP0 = 0x1, unprogrammed default
  1990                           ;	Code Protection bit
  1991                           ;	CP1 = 0x1, unprogrammed default
  1992                           ;	Code Protection bit
  1993                           ;	CP2 = 0x1, unprogrammed default
  1994                           ;	Code Protection bit
  1995                           ;	CP3 = 0x1, unprogrammed default
  1996   300008                     	org	3145736
  1997   300008  0F                 	db	15
  1998                           
  1999                           ;Config register CONFIG5H @ 0x300009
  2000                           ;	unspecified, using default values
  2001                           ;	Boot Block Code Protection bit
  2002                           ;	CPB = 0x1, unprogrammed default
  2003                           ;	Data EEPROM Code Protection bit
  2004                           ;	CPD = 0x1, unprogrammed default
  2005   300009                     	org	3145737
  2006   300009  C0                 	db	192
  2007                           
  2008                           ;Config register CONFIG6L @ 0x30000A
  2009                           ;	unspecified, using default values
  2010                           ;	Write Protection bit
  2011                           ;	WRT0 = 0x1, unprogrammed default
  2012                           ;	Write Protection bit
  2013                           ;	WRT1 = 0x1, unprogrammed default
  2014                           ;	Write Protection bit
  2015                           ;	WRT2 = 0x1, unprogrammed default
  2016                           ;	Write Protection bit
  2017                           ;	WRT3 = 0x1, unprogrammed default
  2018   30000A                     	org	3145738
  2019   30000A  0F                 	db	15
  2020                           
  2021                           ;Config register CONFIG6H @ 0x30000B
  2022                           ;	unspecified, using default values
  2023                           ;	Configuration Register Write Protection bit
  2024                           ;	WRTC = 0x1, unprogrammed default
  2025                           ;	Boot Block Write Protection bit
  2026                           ;	WRTB = 0x1, unprogrammed default
  2027                           ;	Data EEPROM Write Protection bit
  2028                           ;	WRTD = 0x1, unprogrammed default
  2029   30000B                     	org	3145739
  2030   30000B  E0                 	db	224
  2031                           
  2032                           ;Config register CONFIG7L @ 0x30000C
  2033                           ;	unspecified, using default values
  2034                           ;	Table Read Protection bit
  2035                           ;	EBTR0 = 0x1, unprogrammed default
  2036                           ;	Table Read Protection bit
  2037                           ;	EBTR1 = 0x1, unprogrammed default
  2038                           ;	Table Read Protection bit
  2039                           ;	EBTR2 = 0x1, unprogrammed default
  2040                           ;	Table Read Protection bit
  2041                           ;	EBTR3 = 0x1, unprogrammed default
  2042   30000C                     	org	3145740
  2043   30000C  0F                 	db	15
  2044                           
  2045                           ;Config register CONFIG7H @ 0x30000D
  2046                           ;	unspecified, using default values
  2047                           ;	Boot Block Table Read Protection bit
  2048                           ;	EBTRB = 0x1, unprogrammed default
  2049   30000D                     	org	3145741
  2050   30000D  40                 	db	64
  2051                           tosu	equ	0xFFF
  2052                           tosh	equ	0xFFE
  2053                           tosl	equ	0xFFD
  2054                           stkptr	equ	0xFFC
  2055                           pclatu	equ	0xFFB
  2056                           pclath	equ	0xFFA
  2057                           pcl	equ	0xFF9
  2058                           tblptru	equ	0xFF8
  2059                           tblptrh	equ	0xFF7
  2060                           tblptrl	equ	0xFF6
  2061                           tablat	equ	0xFF5
  2062                           prodh	equ	0xFF4
  2063                           prodl	equ	0xFF3
  2064                           indf0	equ	0xFEF
  2065                           postinc0	equ	0xFEE
  2066                           postdec0	equ	0xFED
  2067                           preinc0	equ	0xFEC
  2068                           plusw0	equ	0xFEB
  2069                           fsr0h	equ	0xFEA
  2070                           fsr0l	equ	0xFE9
  2071                           wreg	equ	0xFE8
  2072                           indf1	equ	0xFE7
  2073                           postinc1	equ	0xFE6
  2074                           postdec1	equ	0xFE5
  2075                           preinc1	equ	0xFE4
  2076                           plusw1	equ	0xFE3
  2077                           fsr1h	equ	0xFE2
  2078                           fsr1l	equ	0xFE1
  2079                           bsr	equ	0xFE0
  2080                           indf2	equ	0xFDF
  2081                           postinc2	equ	0xFDE
  2082                           postdec2	equ	0xFDD
  2083                           preinc2	equ	0xFDC
  2084                           plusw2	equ	0xFDB
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        41
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     101
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2288$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2288$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    ADC_GetConversion_Blocking@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_res_4(COMRAM[2]), adc_res_3(COMRAM[2]), adc_res_2(COMRAM[2]), adc_res_1(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(COMRAM[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 2
		 -> adc_res_4(COMRAM[2]), adc_res_3(COMRAM[2]), adc_res_2(COMRAM[2]), adc_res_1(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(COMRAM[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(COMRAM[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc_1(COMRAM[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1469$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S863$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S901$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S901$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRlllhl[1]), TRISD(BITBIGSFRlllhl[1]), TRISC(BITBIGSFRlllhl[1]), TRISB(BITBIGSFRlllhl[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion_Blocking
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2038
         _ADC_GetConversion_Blocking
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    2033
                                              9 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     410
                                              4 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      15
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     331
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion

 _InterruptManager (ROOT)
   _ADC_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      65       1       80.2%
BITBIGSFRlhlhh      2B      0       0      38        0.0%
BITBIGSFRlhll       15      0       0      39        0.0%
BITBIGSFRh           D      0       0      37        0.0%
BITBIGSFRlllhh       7      0       0      40        0.0%
BITBIGSFRlllhl       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      65      12        0.0%
DATA                 0      0      65       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Aug 10 04:01:26 2023

                         ??_InterruptManager 0058                                          l830 15F0  
                                        l825 156C                                          l828 15E8  
                                        l829 15EE                                          l790 1392  
                                        l855 14A4                                          l848 1456  
                                        l858 14CA                    _RB5_InterruptHandler_HIGH 0013  
                            __end_of_ADC_ISR 166A                                          wreg 000FE8  
                      relay_initialize@F3039 0021                              __end_of_RB4_ISR 165A  
                            __end_of_RB5_ISR 1640                              __end_of_RB6_ISR 1626  
                            __end_of_RB7_ISR 160C                                         l3100 1458  
                                       l3110 14B2                                         l3102 1458  
                                       l3112 14C8                                         l3104 146A  
                                       l3120 14E4                                         l3050 1534  
                                       l3106 147C                                         l3122 14FC  
                                       l3140 1324                                         l3060 1566  
                                       l3052 1534                                         l3108 1484  
                                       l3124 1514                                         l3116 14CC  
                                       l3062 156A                                         l3054 1546  
                                       l3070 15E0                                         l3118 14CC  
                                       l3080 13A6                                         l1560 12BE  
                                       l3056 154E                                         l3072 15EA  
                                       l3090 141C                                         l3082 13B8  
                                       l1570 12DA                                         l1562 12C2  
                                       l3058 1560                                         l3066 15CE  
                                       l3084 13C0                                         l3076 1394  
                                       l1580 12F8                                         l1572 12E0  
                                       l1564 12C8                                         l3068 15CE  
                                       l3094 1450                                         l3086 13DA  
                                       l3078 1394                                         l1582 12FE  
                                       l1574 12E6                                         l1566 12CE  
                                       l3088 1402                                         l3096 1454  
                                       l1584 1304                                         l1576 12EC  
                                       l1568 12D4                                         l1586 130A  
                                       l1578 12F2                                         l1588 1310  
                                       STR_1 1011                                         _LATA 000F89  
                                       _LATB 000F8A                                         _LATC 000F8B  
                                       _LATD 000F8C                                         _LATE 000F8D  
                                       u1810 146A                                         u1811 1466  
                                       u1740 1546                                         u1820 147C  
                                       u1805 1434                                         u1741 1542  
                                       u1821 1478                                         u1750 15E0  
                                       u1830 14B2                                         u1751 15DC  
                                       u1831 14AE                                         u1760 13A6  
                                       u1761 13A2                                         u1770 13B8  
                                       u1771 13B4                                         u1780 13DA  
                                       u1781 13D6                                         u1790 141C  
                                       u1791 1418                     _RB4_InterruptHandler_LOW 0015  
                                       _main 14CC                     _RB7_InterruptHandler_LOW 0009  
                                       fsr2h 000FDA                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       btemp 0066                                         start 000E  
                               ___param_bank 000000                             __end_of_INT0_ISR 1666  
                           __end_of_INT1_ISR 1662                             __end_of_INT2_ISR 165E  
                                      ?_main 0057                                        _EEADR 000FA9  
                                      i2l610 1664                                        i2l620 165C  
                                      i2l710 10BC                                        i2l615 1660  
                                      i2l631 1658                                        i2l720 1210  
                                      i2l712 1100                                        i2l704 1038  
                                      i2l642 163E                                        i2l722 1254  
                                      i2l714 1144                                        i2l706 1058  
                                      i2l724 1298                                        i2l716 1188  
                                      i2l708 1078                                        i2l653 1624  
                                      i2l718 11CC                                        i2l727 12B8  
                                      i2l664 160A                                        i2l867 1668  
                        relay_turn_off@F3049 001F                                        _PORTA 000F80  
                                      _PORTB 000F81                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRISD 000F95  
                                      _TRISE 000F96                                        _adc_1 0050  
                                      tablat 000FF5                                        ttemp5 0067  
                                      ttemp6 006A                                        ttemp7 006E  
                                      status 000FD8                                        wtemp8 0067  
                            __initialization 156E                                 __end_of_main 1534  
                                  ??_ADC_ISR 0057                                       ??_main 0066  
                              __activetblptr 000003                             led_turn_on@F3050 0024  
                                  ??_RB4_ISR 0057                                    ??_RB5_ISR 0057  
                                  ??_RB6_ISR 0057                                    ??_RB7_ISR 0057  
                                     _ADRESH 000FC4                                       _EEADRH 000FAA  
                                     _ADRESL 000FC3                                       _EEDATA 000FA8  
                                     _EECON2 000FA7                                       i2l1910 1658  
                                     i2l1902 1642                                       i2l1904 1644  
                                     i2l1930 160E                                       i2l1924 163E  
                                     i2l1916 1628                                       i2l1932 1610  
                                     i2l2900 10D8                                       i2l1918 162A  
                                     i2l2910 111C                                       i2l2902 10E6  
                                     i2l1952 160A                                       i2l1944 15F4  
                                     i2l2920 1160                                       i2l2912 112A  
                                     i2l2904 10F6                                       i2l1890 165E  
                                     i2l1938 1624                                       i2l1946 15F6  
                                     i2l2930 11A4                                       i2l2922 116E  
                                     i2l2914 113A                                       i2l2906 10FA  
                                     i2l1884 1662                                       i2l2940 11E8  
                                     i2l2932 11B2                                       i2l2924 117E  
                                     i2l2916 113E                                       i2l2908 110E  
                                     i2l1958 1666                                       i2l2950 122C  
                                     i2l2942 11F6                                       i2l2934 11C2  
                                     i2l2926 1182                                       i2l2918 1152  
                                     i2l1896 165A                                       i2l2960 1270  
                                     i2l2952 123A                                       i2l2944 1206  
                                     i2l2936 11C6                                       i2l2928 1196  
                                     i2l2880 1046                                       i2l2970 12B4  
                                     i2l2962 127E                                       i2l2954 124A  
                                     i2l2946 120A                                       i2l2938 11DA  
                                     i2l2890 1094                                       i2l2882 1054  
                                     i2l2874 1018                                       i2l2964 128E  
                                     i2l2956 124E                                       i2l2948 121E  
                                     i2l2892 10A2                                       i2l2884 1066  
                                     i2l2876 1026                                       i2l2966 1292  
                                     i2l2958 1262                                       i2l2894 10B2  
                                     i2l2886 1074                                       i2l2878 1034  
                                     i2l2968 12A6                                       i2l2896 10B6  
                                     i2l2888 1086                                       i2l2898 10CA  
          ADC_GetConversion_Blocking@channel 0062                                       clear_0 1594  
                                     isa$std 000001                                led_init@F3045 0025  
                               __pdataCOMRAM 002E                                 __mediumconst 0000  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                                   __accesstop 0080  
                    __end_of__initialization 159A                                    ?_INT0_ISR 0057  
                                  ?_INT1_ISR 0057                                    ?_INT2_ISR 0057  
                              ___rparam_used 000001                            RB5_ISR@RB5_Source 0057  
                             __pcstackCOMRAM 0057                 ??_ADC_GetConversion_Blocking 0065  
                    _ADC_GetConversionResult 1394                         ADC_SelectChannel@ret 005F  
                     ADC_StartConversion@ret 005A                        _INT0_InterruptHandler 001D  
                                 ??_INT0_ISR 0057                                   ??_INT1_ISR 0057  
                                 ??_INT2_ISR 0057                   ADC_GetConversionResult@ret 005F  
                          led_turn_off@F3055 0023                                      _ADC_ISR 1666  
                            led_toggle@F3060 0022               ADC_GetConversion_Blocking@_adc 0060  
                          RB7_ISR@RB7_Source 0057                                      _RB4_ISR 1640  
                                    _RB5_ISR 1626                                      _RB6_ISR 160C  
                                    _RB7_ISR 15F2                    _RB6_InterruptHandler_HIGH 000F  
                                    i2u33_40 1654                                      i2u33_41 1650  
                                    i2u34_40 163A                                      i2u34_41 1636  
                                    i2u35_40 1620                                      i2u35_41 161C  
                                    i2u36_40 1606                                      i2u36_41 1602  
                                 _btn_values 1001                     _RB6_InterruptHandler_LOW 000D  
                       _ADC_InterruptHandler 0007                                      __Hparam 0000  
                                    __Lparam 0000                                 __psmallconst 1000  
                  ??_ADC_GetConversionResult 005C                                      __pcinit 156E  
                                    __ramtop 1000                                      __ptext0 14CC  
                                    __ptext1 1458                                      __ptext2 15CE  
                                    __ptext3 1534                                      __ptext4 12BC  
                                    __ptext5 1394                                      __ptext7 15F2  
                                    __ptext8 160C                                      __ptext9 1626  
                             __pintcode_body 1016                         end_of_initialization 159A  
ADC_GetConversion_Blocking@conversion_result 0063                                      int_func 1016  
         __end_of_ADC_GetConversion_Blocking 14CC                   _ADC_GetConversion_Blocking 1458  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
                      _INT1_InterruptHandler 001B                                    _PORTBbits 000F81  
                           _InterruptManager 0008                          _ADC_StartConversion 15CE  
                         relay_turn_on@F3044 0020                         ?_ADC_StartConversion 0058  
              convert_uint16_to_string@F3195 0001                                __pidataCOMRAM 15A4  
    adc_input_channel_port_configure@channel 005A                          start_initialization 156E  
   ADC_GetConversionResult@conversion_result 005A                        ADC_SelectChannel@_adc 005B  
                      ??_ADC_StartConversion 005A                                     ?_ADC_ISR 0057  
                    ADC_StartConversion@_adc 0058                                     ?_RB4_ISR 0057  
                                   ?_RB5_ISR 0057                                     ?_RB6_ISR 0057  
                                   ?_RB7_ISR 0057                                  __pbssCOMRAM 0001  
                                  _adc_res_1 002C                                    _adc_res_2 002A  
                                  _adc_res_3 0028                                    _adc_res_4 0026  
                ADC_GetConversionResult@_adc 0058                        _INT2_InterruptHandler 0019  
                                  __pintcode 0008     __end_of_adc_input_channel_port_configure 1394  
         ??_adc_input_channel_port_configure 0058            ?_adc_input_channel_port_configure 0057  
           _adc_input_channel_port_configure 12BC                            _ADC_SelectChannel 1534  
              ADC_GetConversion_Blocking@ret 0065                           ?_ADC_SelectChannel 005B  
                                __smallconst 1000                    _RB4_InterruptHandler_HIGH 0017  
                        ??_ADC_SelectChannel 005E                    _RB7_InterruptHandler_HIGH 000B  
                   _RB5_InterruptHandler_LOW 0011                                     _INT0_ISR 1662  
                                   _INT1_ISR 165E                                     _INT2_ISR 165A  
                                   _RB4_Flag 004F                                     _RB5_Flag 004E  
                                   _RB6_Flag 004D                                     _RB7_Flag 004C  
                          RB4_ISR@RB4_Source 0057                     __end_of_InterruptManager 12BC  
                                   _PIE1bits 000F9D                    __end_of_ADC_SelectChannel 156E  
                                   i2u130_40 1054                                     i2u130_41 1050  
                                   i2u131_40 1066                                     i2u131_41 1062  
                                   i2u140_40 10F6                                     i2u132_40 1074  
                                   i2u140_41 10F2                                     i2u132_41 1070  
                                   i2u141_40 110E                                     i2u133_40 1086  
                                   i2u141_41 110A                                     i2u133_41 1082  
                                   i2u150_40 11A4                                     i2u142_40 111C  
                                   i2u134_40 1094                                     i2u150_41 11A0  
                                   i2u142_41 1118                                     i2u134_41 1090  
                                   i2u151_40 11B2                                     i2u143_40 112A  
                                   i2u135_40 10A2                                     i2u127_40 1026  
                                   i2u151_41 11AE                                     i2u143_41 1126  
                                   i2u135_41 109E                                     i2u127_41 1022  
                                   i2u160_40 124A                                     i2u152_40 11C2  
                                   i2u144_40 113A                                     i2u136_40 10B2  
                                   i2u128_40 1034                                     i2u160_41 1246  
                                   i2u152_41 11BE                                     i2u144_41 1136  
                                   i2u136_41 10AE                                     i2u128_41 1030  
                                   i2u161_40 1262                                     i2u153_40 11DA  
                                   i2u145_40 1152                                     i2u137_40 10CA  
                                   i2u129_40 1046                                     i2u161_41 125E  
                                   i2u153_41 11D6                                     i2u145_41 114E  
                                   i2u137_41 10C6                                     i2u129_41 1042  
                                   i2u162_40 1270                                     i2u154_40 11E8  
                                   i2u146_40 1160                                     i2u138_40 10D8  
                                   i2u162_41 126C                                     i2u154_41 11E4  
                                   i2u146_41 115C                                     i2u138_41 10D4  
                                   i2u163_40 127E                                     i2u155_40 11F6  
                                   i2u147_40 116E                                     i2u139_40 10E6  
                                   i2u163_41 127A                                     i2u155_41 11F2  
                                   i2u147_41 116A                                     i2u139_41 10E2  
                                   i2u164_40 128E                                     i2u156_40 1206  
                                   i2u148_40 117E                                     i2u164_41 128A  
                                   i2u156_41 1202                                     i2u148_41 117A  
                                   i2u165_40 12A6                                     i2u157_40 121E  
                                   i2u149_40 1196                                     i2u165_41 12A2  
                                   i2u157_41 121A                                     i2u149_41 1192  
                                   i2u166_40 12B4                                     i2u158_40 122C  
                                   i2u166_41 12B0                                     i2u158_41 1228  
                                   i2u159_40 123A                                     i2u159_41 1236  
                                   _PIR1bits 000F9E                  ?_ADC_GetConversion_Blocking 0060  
                                  _port_regs 0038                                   _ADCON0bits 000FC2  
                                 _ADCON1bits 000FC1                                   _ADCON2bits 000FC0  
                   ADC_SelectChannel@channel 005D                                    _tris_regs 0042  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
                                  copy_data0 1582                                   _EECON1bits 000FA6  
                                   __Hrparam 0000                                     __Lrparam 0000  
                   ?_ADC_GetConversionResult 0058                            RB6_ISR@RB6_Source 0057  
                         __end_of_btn_values 1011                                     __ptext10 1640  
                                   __ptext11 165A                                     __ptext12 165E  
                                   __ptext13 1662                                     __ptext14 1666  
                                   _lat_regs 002E                                     isa$xinst 000000  
                                   int$flags 0066                                   _INTCONbits 000FF2  
                                   intlevel2 0000                  __end_of_ADC_StartConversion 15F2  
            __end_of_ADC_GetConversionResult 1458                            ?_InterruptManager 0057  
