

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Aug 05 01:00:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00FB3E                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _lat_regs
    62   00FB3E  89                 	db	137
    63   00FB3F  0F                 	db	15
    64   00FB40  8A                 	db	138
    65   00FB41  0F                 	db	15
    66   00FB42  8B                 	db	139
    67   00FB43  0F                 	db	15
    68   00FB44  8C                 	db	140
    69   00FB45  0F                 	db	15
    70   00FB46  8D                 	db	141
    71   00FB47  0F                 	db	15
    72                           
    73                           ;initializer for _port_regs
    74   00FB48  80                 	db	128
    75   00FB49  0F                 	db	15
    76   00FB4A  81                 	db	129
    77   00FB4B  0F                 	db	15
    78   00FB4C  82                 	db	130
    79   00FB4D  0F                 	db	15
    80   00FB4E  83                 	db	131
    81   00FB4F  0F                 	db	15
    82   00FB50  84                 	db	132
    83   00FB51  0F                 	db	15
    84                           
    85                           ;initializer for _tris_regs
    86   00FB52  92                 	db	146
    87   00FB53  0F                 	db	15
    88   00FB54  93                 	db	147
    89   00FB55  0F                 	db	15
    90   00FB56  94                 	db	148
    91   00FB57  0F                 	db	15
    92   00FB58  95                 	db	149
    93   00FB59  0F                 	db	15
    94   00FB5A  96                 	db	150
    95   00FB5B  0F                 	db	15
    96                           
    97                           ;initializer for _segment_cathode
    98   00FB5C  03                 	db	3
    99   00FB5D  0B                 	db	11
   100   00FB5E  13                 	db	19
   101   00FB5F  00                 	db	0
   102   00FB60  01                 	db	1
   103                           
   104                           ;initializer for _segment_anode
   105   00FB61  02                 	db	2
   106   00FB62  0A                 	db	10
   107   00FB63  12                 	db	18
   108   00FB64  00                 	db	0
   109   00FB65  00                 	db	0
   110   000000                     _LATA	set	3977
   111   000000                     _PORTE	set	3972
   112   000000                     _PORTD	set	3971
   113   000000                     _PORTC	set	3970
   114   000000                     _PORTB	set	3969
   115   000000                     _PORTA	set	3968
   116   000000                     _TRISA	set	3986
   117   000000                     _TRISE	set	3990
   118   000000                     _TRISD	set	3989
   119   000000                     _TRISC	set	3988
   120   000000                     _TRISB	set	3987
   121   000000                     _LATE	set	3981
   122   000000                     _LATD	set	3980
   123   000000                     _LATC	set	3979
   124   000000                     _LATB	set	3978
   125                           
   126                           ; #config settings
   127                           
   128                           	psect	cinit
   129   00FB66                     __pcinit:
   130                           	callstack 0
   131   00FB66                     start_initialization:
   132                           	callstack 0
   133   00FB66                     __initialization:
   134                           	callstack 0
   135                           
   136                           ; Initialize objects allocated to COMRAM (40 bytes)
   137                           ; load TBLPTR registers with __pidataCOMRAM
   138   00FB66  0E3E               	movlw	low __pidataCOMRAM
   139   00FB68  6EF6               	movwf	tblptrl,c
   140   00FB6A  0EFB               	movlw	high __pidataCOMRAM
   141   00FB6C  6EF7               	movwf	tblptrh,c
   142   00FB6E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   143   00FB70  6EF8               	movwf	tblptru,c
   144   00FB72  EE00  F001         	lfsr	0,__pdataCOMRAM
   145   00FB76  EE10 F028          	lfsr	1,40
   146   00FB7A                     copy_data0:
   147   00FB7A  0009               	tblrd		*+
   148   00FB7C  CFF5 FFEE          	movff	tablat,postinc0
   149   00FB80  50E5               	movf	postdec1,w,c
   150   00FB82  50E1               	movf	fsr1l,w,c
   151   00FB84  E1FA               	bnz	copy_data0
   152                           
   153                           ; Clear objects allocated to COMRAM (7 bytes)
   154   00FB86  EE00  F03E         	lfsr	0,__pbssCOMRAM
   155   00FB8A  0E07               	movlw	7
   156   00FB8C                     clear_0:
   157   00FB8C  6AEE               	clrf	postinc0,c
   158   00FB8E  06E8               	decf	wreg,f,c
   159   00FB90  E1FD               	bnz	clear_0
   160   00FB92                     end_of_initialization:
   161                           	callstack 0
   162   00FB92                     __end_of__initialization:
   163                           	callstack 0
   164   00FB92  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   00FB94  6EF8               	movwf	tblptru,c
   166   00FB96  0100               	movlb	0
   167   00FB98  EF21  F07E         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   00003E                     __pbssCOMRAM:
   171                           	callstack 0
   172   00003E                     relay_turn_off@F3049:
   173                           	callstack 0
   174   00003E                     	ds	1
   175   00003F                     relay_turn_on@F3044:
   176                           	callstack 0
   177   00003F                     	ds	1
   178   000040                     relay_initialize@F3039:
   179                           	callstack 0
   180   000040                     	ds	1
   181   000041                     led_toggle@F3060:
   182                           	callstack 0
   183   000041                     	ds	1
   184   000042                     led_turn_off@F3055:
   185                           	callstack 0
   186   000042                     	ds	1
   187   000043                     led_turn_on@F3050:
   188                           	callstack 0
   189   000043                     	ds	1
   190   000044                     led_init@F3045:
   191                           	callstack 0
   192   000044                     	ds	1
   193                           
   194                           	psect	dataCOMRAM
   195   000001                     __pdataCOMRAM:
   196                           	callstack 0
   197   000001                     _lat_regs:
   198                           	callstack 0
   199   000001                     	ds	10
   200   00000B                     _port_regs:
   201                           	callstack 0
   202   00000B                     	ds	10
   203   000015                     _tris_regs:
   204                           	callstack 0
   205   000015                     	ds	10
   206   00001F                     _segment_cathode:
   207                           	callstack 0
   208   00001F                     	ds	5
   209   000024                     _segment_anode:
   210                           	callstack 0
   211   000024                     	ds	5
   212                           
   213                           	psect	cstackCOMRAM
   214   000029                     __pcstackCOMRAM:
   215                           	callstack 0
   216   000029                     gpio_pin_direction_init@my_pin:
   217                           	callstack 0
   218   000029                     gpio_pin_logic_write@my_pin:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x0
   222   000029                     	ds	2
   223   00002B                     ??_gpio_pin_direction_init:
   224   00002B                     gpio_pin_logic_write@logic:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x2
   228   00002B                     	ds	1
   229   00002C                     ??_gpio_pin_logic_write:
   230                           
   231                           ; 1 bytes @ 0x3
   232   00002C                     	ds	5
   233   000031                     gpio_pin_direction_init@ret:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x8
   237   000031                     	ds	1
   238   000032                     gpio_pin_logic_write@ret:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x9
   242   000032                     	ds	1
   243   000033                     gpio_pin_initialize@my_pin:
   244                           	callstack 0
   245   000033                     segment_write_number@my_segment:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xA
   249   000033                     	ds	2
   250   000035                     gpio_pin_initialize@ret:
   251                           	callstack 0
   252   000035                     segment_write_number@number:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256   000035                     	ds	1
   257   000036                     segment_initialze@my_segment:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0xD
   261   000036                     	ds	1
   262   000037                     ??_segment_write_number:
   263                           
   264                           ; 1 bytes @ 0xE
   265   000037                     	ds	1
   266   000038                     segment_initialze@ret:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0xF
   270   000038                     	ds	1
   271   000039                     segment_write_number@ret:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x10
   275   000039                     	ds	1
   276   00003A                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x11
   279   00003A                     	ds	2
   280   00003C                     main@j:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x13
   284   00003C                     	ds	2
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 42 in file "app.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  j               2   19[COMRAM] int 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  2  163[None  ] int 
   298 ;; Registers used:
   299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;Total ram usage:        4 bytes
   310 ;; Hardware stack levels required when called: 3
   311 ;; This function calls:
   312 ;;		_segment_initialze
   313 ;;		_segment_write_number
   314 ;; This function is called by:
   315 ;;		Startup code after reset
   316 ;; This function uses a non-reentrant model
   317 ;;
   318                           
   319                           	psect	text0
   320   00FC42                     __ptext0:
   321                           	callstack 0
   322   00FC42                     _main:
   323                           	callstack 28
   324   00FC42                     
   325                           ;app.c: 43:     segment_initialze(&segment_anode);
   326   00FC42  0E24               	movlw	low _segment_anode
   327   00FC44  6E36               	movwf	segment_initialze@my_segment^0,c
   328   00FC46  0E00               	movlw	high _segment_anode
   329   00FC48  6E37               	movwf	(segment_initialze@my_segment+1)^0,c
   330   00FC4A  ECF3  F07D         	call	_segment_initialze	;wreg free
   331                           
   332                           ;app.c: 44:     segment_initialze(&segment_cathode);
   333   00FC4E  0E1F               	movlw	low _segment_cathode
   334   00FC50  6E36               	movwf	segment_initialze@my_segment^0,c
   335   00FC52  0E00               	movlw	high _segment_cathode
   336   00FC54  6E37               	movwf	(segment_initialze@my_segment+1)^0,c
   337   00FC56  ECF3  F07D         	call	_segment_initialze	;wreg free
   338   00FC5A                     l1475:
   339                           
   340                           ;app.c: 46:         for( int j = 0; j<10; j++){
   341   00FC5A  0E00               	movlw	0
   342   00FC5C  6E3D               	movwf	(main@j+1)^0,c
   343   00FC5E  0E00               	movlw	0
   344   00FC60  6E3C               	movwf	main@j^0,c
   345   00FC62                     l1481:
   346                           
   347                           ;app.c: 47:             segment_write_number(&segment_anode, j);
   348   00FC62  0E24               	movlw	low _segment_anode
   349   00FC64  6E33               	movwf	segment_write_number@my_segment^0,c
   350   00FC66  0E00               	movlw	high _segment_anode
   351   00FC68  6E34               	movwf	(segment_write_number@my_segment+1)^0,c
   352   00FC6A  C03C  F035         	movff	main@j,segment_write_number@number
   353   00FC6E  C03D  F036         	movff	main@j+1,segment_write_number@number+1
   354   00FC72  EC64  F07E         	call	_segment_write_number	;wreg free
   355                           
   356                           ;app.c: 48:             segment_write_number(&segment_cathode, j);
   357   00FC76  0E1F               	movlw	low _segment_cathode
   358   00FC78  6E33               	movwf	segment_write_number@my_segment^0,c
   359   00FC7A  0E00               	movlw	high _segment_cathode
   360   00FC7C  6E34               	movwf	(segment_write_number@my_segment+1)^0,c
   361   00FC7E  C03C  F035         	movff	main@j,segment_write_number@number
   362   00FC82  C03D  F036         	movff	main@j+1,segment_write_number@number+1
   363   00FC86  EC64  F07E         	call	_segment_write_number	;wreg free
   364   00FC8A                     
   365                           ;app.c: 49:             _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   366   00FC8A  0E06               	movlw	6
   367   00FC8C  6E3B               	movwf	(??_main+1)^0,c
   368   00FC8E  0E13               	movlw	19
   369   00FC90  6E3A               	movwf	??_main^0,c
   370   00FC92  0EAE               	movlw	174
   371   00FC94                     u807:
   372   00FC94  2EE8               	decfsz	wreg,f,c
   373   00FC96  D7FE               	bra	u807
   374   00FC98  2E3A               	decfsz	??_main^0,f,c
   375   00FC9A  D7FC               	bra	u807
   376   00FC9C  2E3B               	decfsz	(??_main+1)^0,f,c
   377   00FC9E  D7FA               	bra	u807
   378   00FCA0                     
   379                           ;app.c: 50:         }
   380   00FCA0  4A3C               	infsnz	main@j^0,f,c
   381   00FCA2  2A3D               	incf	(main@j+1)^0,f,c
   382   00FCA4  BE3D               	btfsc	(main@j+1)^0,7,c
   383   00FCA6  EF5E  F07E         	goto	u701
   384   00FCAA  503D               	movf	(main@j+1)^0,w,c
   385   00FCAC  E109               	bnz	u700
   386   00FCAE  0E0A               	movlw	10
   387   00FCB0  5C3C               	subwf	main@j^0,w,c
   388   00FCB2  A0D8               	btfss	status,0,c
   389   00FCB4  EF5E  F07E         	goto	u701
   390   00FCB8  EF60  F07E         	goto	u700
   391   00FCBC                     u701:
   392   00FCBC  EF31  F07E         	goto	l1481
   393   00FCC0                     u700:
   394   00FCC0  EF2D  F07E         	goto	l1475
   395   00FCC4  EF00  F000         	goto	start
   396   00FCC8                     __end_of_main:
   397                           	callstack 0
   398                           
   399 ;; *************** function _segment_write_number *****************
   400 ;; Defined at:
   401 ;;		line 16 in file "ECU_L/7_segments/segments_7.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  my_segment      2   10[COMRAM] PTR const struct .
   404 ;;		 -> segment_cathode(5), segment_anode(5), 
   405 ;;  number          2   12[COMRAM] int 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  ret             1   16[COMRAM] unsigned char 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      unsigned char 
   410 ;; Registers used:
   411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;Total ram usage:        7 bytes
   422 ;; Hardware stack levels used: 1
   423 ;; Hardware stack levels required when called: 1
   424 ;; This function calls:
   425 ;;		_gpio_pin_logic_write
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432   00FCC8                     __ptext1:
   433                           	callstack 0
   434   00FCC8                     _segment_write_number:
   435                           	callstack 29
   436   00FCC8                     
   437                           ;ECU_L/7_segments/segments_7.c: 18:     if((((void*)0) == my_segment) && (number > 9)){
   438   00FCC8  5033               	movf	segment_write_number@my_segment^0,w,c
   439   00FCCA  1034               	iorwf	(segment_write_number@my_segment+1)^0,w,c
   440   00FCCC  A4D8               	btfss	status,2,c
   441   00FCCE  EF6B  F07E         	goto	u641
   442   00FCD2  EF6D  F07E         	goto	u640
   443   00FCD6                     u641:
   444   00FCD6  EF7D  F07E         	goto	l1409
   445   00FCDA                     u640:
   446   00FCDA  BE36               	btfsc	(segment_write_number@number+1)^0,7,c
   447   00FCDC  EF79  F07E         	goto	u651
   448   00FCE0  5036               	movf	(segment_write_number@number+1)^0,w,c
   449   00FCE2  E109               	bnz	u650
   450   00FCE4  0E0A               	movlw	10
   451   00FCE6  5C35               	subwf	segment_write_number@number^0,w,c
   452   00FCE8  A0D8               	btfss	status,0,c
   453   00FCEA  EF79  F07E         	goto	u651
   454   00FCEE  EF7B  F07E         	goto	u650
   455   00FCF2                     u651:
   456   00FCF2  EF7D  F07E         	goto	l1409
   457   00FCF6                     u650:
   458   00FCF6                     
   459                           ;ECU_L/7_segments/segments_7.c: 20:     }
   460   00FCF6  EFC7  F07E         	goto	l255
   461   00FCFA                     l1409:
   462                           
   463                           ;ECU_L/7_segments/segments_7.c: 22:         ret = gpio_pin_logic_write(&(my_segment->seg
      +                          ment_pins[0]), (number& 1));
   464   00FCFA  C033  F029         	movff	segment_write_number@my_segment,gpio_pin_logic_write@my_pin
   465   00FCFE  C034  F02A         	movff	segment_write_number@my_segment+1,gpio_pin_logic_write@my_pin+1
   466   00FD02  5035               	movf	segment_write_number@number^0,w,c
   467   00FD04  0B01               	andlw	1
   468   00FD06  6E2B               	movwf	gpio_pin_logic_write@logic^0,c
   469   00FD08  ECC8  F07E         	call	_gpio_pin_logic_write	;wreg free
   470   00FD0C  6E39               	movwf	segment_write_number@ret^0,c
   471                           
   472                           ;ECU_L/7_segments/segments_7.c: 23:         ret = gpio_pin_logic_write(&(my_segment->seg
      +                          ment_pins[1]), (number>>1 & 0x01));
   473   00FD0E  0E01               	movlw	1
   474   00FD10  2433               	addwf	segment_write_number@my_segment^0,w,c
   475   00FD12  6E29               	movwf	gpio_pin_logic_write@my_pin^0,c
   476   00FD14  0E00               	movlw	0
   477   00FD16  2034               	addwfc	(segment_write_number@my_segment+1)^0,w,c
   478   00FD18  6E2A               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   479   00FD1A  3436               	rlcf	(segment_write_number@number+1)^0,w,c
   480   00FD1C  3036               	rrcf	(segment_write_number@number+1)^0,w,c
   481   00FD1E  6E38               	movwf	(??_segment_write_number+1)^0,c
   482   00FD20  3035               	rrcf	segment_write_number@number^0,w,c
   483   00FD22  6E37               	movwf	??_segment_write_number^0,c
   484   00FD24  5037               	movf	??_segment_write_number^0,w,c
   485   00FD26  0B01               	andlw	1
   486   00FD28  6E2B               	movwf	gpio_pin_logic_write@logic^0,c
   487   00FD2A  ECC8  F07E         	call	_gpio_pin_logic_write	;wreg free
   488   00FD2E  6E39               	movwf	segment_write_number@ret^0,c
   489                           
   490                           ;ECU_L/7_segments/segments_7.c: 24:         ret = gpio_pin_logic_write(&(my_segment->seg
      +                          ment_pins[2]), (number>>2 & 0x01));
   491   00FD30  0E02               	movlw	2
   492   00FD32  2433               	addwf	segment_write_number@my_segment^0,w,c
   493   00FD34  6E29               	movwf	gpio_pin_logic_write@my_pin^0,c
   494   00FD36  0E00               	movlw	0
   495   00FD38  2034               	addwfc	(segment_write_number@my_segment+1)^0,w,c
   496   00FD3A  6E2A               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   497   00FD3C  C035  F037         	movff	segment_write_number@number,??_segment_write_number
   498   00FD40  C036  F038         	movff	segment_write_number@number+1,??_segment_write_number+1
   499   00FD44  3438               	rlcf	(??_segment_write_number+1)^0,w,c
   500   00FD46  3238               	rrcf	(??_segment_write_number+1)^0,f,c
   501   00FD48  3237               	rrcf	??_segment_write_number^0,f,c
   502   00FD4A  3438               	rlcf	(??_segment_write_number+1)^0,w,c
   503   00FD4C  3238               	rrcf	(??_segment_write_number+1)^0,f,c
   504   00FD4E  3237               	rrcf	??_segment_write_number^0,f,c
   505   00FD50  5037               	movf	??_segment_write_number^0,w,c
   506   00FD52  0B01               	andlw	1
   507   00FD54  6E2B               	movwf	gpio_pin_logic_write@logic^0,c
   508   00FD56  ECC8  F07E         	call	_gpio_pin_logic_write	;wreg free
   509   00FD5A  6E39               	movwf	segment_write_number@ret^0,c
   510                           
   511                           ;ECU_L/7_segments/segments_7.c: 25:         ret = gpio_pin_logic_write(&(my_segment->seg
      +                          ment_pins[3]), (number>>3 & 0x01));
   512   00FD5C  0E03               	movlw	3
   513   00FD5E  2433               	addwf	segment_write_number@my_segment^0,w,c
   514   00FD60  6E29               	movwf	gpio_pin_logic_write@my_pin^0,c
   515   00FD62  0E00               	movlw	0
   516   00FD64  2034               	addwfc	(segment_write_number@my_segment+1)^0,w,c
   517   00FD66  6E2A               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   518   00FD68  C035  F037         	movff	segment_write_number@number,??_segment_write_number
   519   00FD6C  C036  F038         	movff	segment_write_number@number+1,??_segment_write_number+1
   520   00FD70  3438               	rlcf	(??_segment_write_number+1)^0,w,c
   521   00FD72  3238               	rrcf	(??_segment_write_number+1)^0,f,c
   522   00FD74  3237               	rrcf	??_segment_write_number^0,f,c
   523   00FD76  3438               	rlcf	(??_segment_write_number+1)^0,w,c
   524   00FD78  3238               	rrcf	(??_segment_write_number+1)^0,f,c
   525   00FD7A  3237               	rrcf	??_segment_write_number^0,f,c
   526   00FD7C  3438               	rlcf	(??_segment_write_number+1)^0,w,c
   527   00FD7E  3238               	rrcf	(??_segment_write_number+1)^0,f,c
   528   00FD80  3237               	rrcf	??_segment_write_number^0,f,c
   529   00FD82  5037               	movf	??_segment_write_number^0,w,c
   530   00FD84  0B01               	andlw	1
   531   00FD86  6E2B               	movwf	gpio_pin_logic_write@logic^0,c
   532   00FD88  ECC8  F07E         	call	_gpio_pin_logic_write	;wreg free
   533   00FD8C  6E39               	movwf	segment_write_number@ret^0,c
   534   00FD8E                     l255:
   535   00FD8E  0012               	return		;funcret
   536   00FD90                     __end_of_segment_write_number:
   537                           	callstack 0
   538                           
   539 ;; *************** function _segment_initialze *****************
   540 ;; Defined at:
   541 ;;		line 3 in file "ECU_L/7_segments/segments_7.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  my_segment      2   13[COMRAM] PTR const struct .
   544 ;;		 -> segment_cathode(5), segment_anode(5), 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  ret             1   15[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      unsigned char 
   549 ;; Registers used:
   550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;Total ram usage:        3 bytes
   561 ;; Hardware stack levels used: 1
   562 ;; Hardware stack levels required when called: 2
   563 ;; This function calls:
   564 ;;		_gpio_pin_initialize
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text2
   571   00FBE6                     __ptext2:
   572                           	callstack 0
   573   00FBE6                     _segment_initialze:
   574                           	callstack 28
   575   00FBE6                     
   576                           ;ECU_L/7_segments/segments_7.c: 5:     if(((void*)0) == my_segment){
   577   00FBE6  5036               	movf	segment_initialze@my_segment^0,w,c
   578   00FBE8  1037               	iorwf	(segment_initialze@my_segment+1)^0,w,c
   579   00FBEA  A4D8               	btfss	status,2,c
   580   00FBEC  EFFA  F07D         	goto	u631
   581   00FBF0  EFFC  F07D         	goto	u630
   582   00FBF4                     u631:
   583   00FBF4  EFFE  F07D         	goto	l1397
   584   00FBF8                     u630:
   585   00FBF8                     
   586                           ;ECU_L/7_segments/segments_7.c: 7:     }
   587   00FBF8  EF20  F07E         	goto	l250
   588   00FBFC                     l1397:
   589                           
   590                           ;ECU_L/7_segments/segments_7.c: 9:         ret = gpio_pin_initialize(&(my_segment->segme
      +                          nt_pins[0]));
   591   00FBFC  C036  F033         	movff	segment_initialze@my_segment,gpio_pin_initialize@my_pin
   592   00FC00  C037  F034         	movff	segment_initialze@my_segment+1,gpio_pin_initialize@my_pin+1
   593   00FC04  ECCE  F07D         	call	_gpio_pin_initialize	;wreg free
   594   00FC08  6E38               	movwf	segment_initialze@ret^0,c
   595                           
   596                           ;ECU_L/7_segments/segments_7.c: 10:         ret = gpio_pin_initialize(&(my_segment->segm
      +                          ent_pins[1]));
   597   00FC0A  0E01               	movlw	1
   598   00FC0C  2436               	addwf	segment_initialze@my_segment^0,w,c
   599   00FC0E  6E33               	movwf	gpio_pin_initialize@my_pin^0,c
   600   00FC10  0E00               	movlw	0
   601   00FC12  2037               	addwfc	(segment_initialze@my_segment+1)^0,w,c
   602   00FC14  6E34               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   603   00FC16  ECCE  F07D         	call	_gpio_pin_initialize	;wreg free
   604   00FC1A  6E38               	movwf	segment_initialze@ret^0,c
   605                           
   606                           ;ECU_L/7_segments/segments_7.c: 11:         ret = gpio_pin_initialize(&(my_segment->segm
      +                          ent_pins[2]));
   607   00FC1C  0E02               	movlw	2
   608   00FC1E  2436               	addwf	segment_initialze@my_segment^0,w,c
   609   00FC20  6E33               	movwf	gpio_pin_initialize@my_pin^0,c
   610   00FC22  0E00               	movlw	0
   611   00FC24  2037               	addwfc	(segment_initialze@my_segment+1)^0,w,c
   612   00FC26  6E34               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   613   00FC28  ECCE  F07D         	call	_gpio_pin_initialize	;wreg free
   614   00FC2C  6E38               	movwf	segment_initialze@ret^0,c
   615                           
   616                           ;ECU_L/7_segments/segments_7.c: 12:         ret = gpio_pin_initialize(&(my_segment->segm
      +                          ent_pins[3]));
   617   00FC2E  0E03               	movlw	3
   618   00FC30  2436               	addwf	segment_initialze@my_segment^0,w,c
   619   00FC32  6E33               	movwf	gpio_pin_initialize@my_pin^0,c
   620   00FC34  0E00               	movlw	0
   621   00FC36  2037               	addwfc	(segment_initialze@my_segment+1)^0,w,c
   622   00FC38  6E34               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   623   00FC3A  ECCE  F07D         	call	_gpio_pin_initialize	;wreg free
   624   00FC3E  6E38               	movwf	segment_initialze@ret^0,c
   625   00FC40                     l250:
   626   00FC40  0012               	return		;funcret
   627   00FC42                     __end_of_segment_initialze:
   628                           	callstack 0
   629                           
   630 ;; *************** function _gpio_pin_initialize *****************
   631 ;; Defined at:
   632 ;;		line 79 in file "MCAL/GPIO/gpio.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  my_pin          2   10[COMRAM] PTR const struct .
   635 ;;		 -> relay_initialize@rel_pin(1), segment_cathode.segment_pins(4), segment_cathode(5), segment_anode.segment_pins(4),
      + 
   636 ;;		 -> segment_anode(5), led_init@my_pin(1), 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  ret             1   12[COMRAM] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      unsigned char 
   641 ;; Registers used:
   642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   652 ;;Total ram usage:        3 bytes
   653 ;; Hardware stack levels used: 1
   654 ;; Hardware stack levels required when called: 1
   655 ;; This function calls:
   656 ;;		_gpio_pin_direction_init
   657 ;;		_gpio_pin_logic_write
   658 ;; This function is called by:
   659 ;;		_segment_initialze
   660 ;;		_led_init
   661 ;;		_button_inittialze
   662 ;;		_relay_initialize
   663 ;;		_dc_motor_initialize
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text3
   668   00FB9C                     __ptext3:
   669                           	callstack 0
   670   00FB9C                     _gpio_pin_initialize:
   671                           	callstack 28
   672   00FB9C                     
   673                           ;MCAL/GPIO/gpio.c: 81:     if (((void*)0) == my_pin){
   674   00FB9C  5033               	movf	gpio_pin_initialize@my_pin^0,w,c
   675   00FB9E  1034               	iorwf	(gpio_pin_initialize@my_pin+1)^0,w,c
   676   00FBA0  A4D8               	btfss	status,2,c
   677   00FBA2  EFD5  F07D         	goto	u621
   678   00FBA6  EFD7  F07D         	goto	u620
   679   00FBAA                     u621:
   680   00FBAA  EFDB  F07D         	goto	l1385
   681   00FBAE                     u620:
   682   00FBAE                     
   683                           ;MCAL/GPIO/gpio.c: 82:         ret = (Std_ReturnType)0x00;
   684   00FBAE  0E00               	movlw	0
   685   00FBB0  6E35               	movwf	gpio_pin_initialize@ret^0,c
   686                           
   687                           ;MCAL/GPIO/gpio.c: 83:     }
   688   00FBB2  EFF1  F07D         	goto	l1387
   689   00FBB6                     l1385:
   690                           
   691                           ;MCAL/GPIO/gpio.c: 85:         ret = gpio_pin_direction_init(my_pin);
   692   00FBB6  C033  F029         	movff	gpio_pin_initialize@my_pin,gpio_pin_direction_init@my_pin
   693   00FBBA  C034  F02A         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_direction_init@my_pin+1
   694   00FBBE  EC5E  F07F         	call	_gpio_pin_direction_init	;wreg free
   695   00FBC2  6E35               	movwf	gpio_pin_initialize@ret^0,c
   696                           
   697                           ;MCAL/GPIO/gpio.c: 86:         ret = gpio_pin_logic_write(my_pin, my_pin->logic);
   698   00FBC4  C033  F029         	movff	gpio_pin_initialize@my_pin,gpio_pin_logic_write@my_pin
   699   00FBC8  C034  F02A         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_logic_write@my_pin+1
   700   00FBCC  C033  FFD9         	movff	gpio_pin_initialize@my_pin,fsr2l
   701   00FBD0  C034  FFDA         	movff	gpio_pin_initialize@my_pin+1,fsr2h
   702   00FBD4  0E00               	movlw	0
   703   00FBD6  BEDF               	btfsc	indf2,7,c
   704   00FBD8  0E01               	movlw	1
   705   00FBDA  6E2B               	movwf	gpio_pin_logic_write@logic^0,c
   706   00FBDC  ECC8  F07E         	call	_gpio_pin_logic_write	;wreg free
   707   00FBE0  6E35               	movwf	gpio_pin_initialize@ret^0,c
   708   00FBE2                     l1387:
   709                           
   710                           ;MCAL/GPIO/gpio.c: 88:     return ret;
   711   00FBE2  5035               	movf	gpio_pin_initialize@ret^0,w,c
   712   00FBE4  0012               	return		;funcret
   713   00FBE6                     __end_of_gpio_pin_initialize:
   714                           	callstack 0
   715                           
   716 ;; *************** function _gpio_pin_logic_write *****************
   717 ;; Defined at:
   718 ;;		line 41 in file "MCAL/GPIO/gpio.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  my_pin          2    0[COMRAM] PTR const struct .
   721 ;;		 -> relay_turn_off@rel_pin(1), relay_turn_on@rel_pin(1), relay_initialize@rel_pin(1), segment_cathode.segment_pins(4
      +), 
   722 ;;		 -> segment_cathode(5), segment_anode.segment_pins(4), segment_anode(5), led_turn_off@my_pin(1), 
   723 ;;		 -> led_turn_on@my_pin(1), led_init@my_pin(1), 
   724 ;;  logic           1    2[COMRAM] unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  ret             1    9[COMRAM] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      unsigned char 
   729 ;; Registers used:
   730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:       10 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_gpio_pin_initialize
   746 ;;		_segment_write_number
   747 ;;		_led_turn_on
   748 ;;		_led_turn_off
   749 ;;		_relay_turn_on
   750 ;;		_relay_turn_off
   751 ;;		_dc_motor_move_right
   752 ;;		_dc_motor_move_left
   753 ;;		_dc_motor_stop
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text4
   758   00FD90                     __ptext4:
   759                           	callstack 0
   760   00FD90                     _gpio_pin_logic_write:
   761                           	callstack 29
   762   00FD90                     
   763                           ;MCAL/GPIO/gpio.c: 42:     Std_ReturnType ret = (Std_ReturnType)0x01;
   764   00FD90  0E01               	movlw	1
   765   00FD92  6E32               	movwf	gpio_pin_logic_write@ret^0,c
   766   00FD94                     
   767                           ;MCAL/GPIO/gpio.c: 43:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
   768   00FD94  5029               	movf	gpio_pin_logic_write@my_pin^0,w,c
   769   00FD96  102A               	iorwf	(gpio_pin_logic_write@my_pin+1)^0,w,c
   770   00FD98  B4D8               	btfsc	status,2,c
   771   00FD9A  EFD1  F07E         	goto	u521
   772   00FD9E  EFD3  F07E         	goto	u520
   773   00FDA2                     u521:
   774   00FDA2  EFE4  F07E         	goto	l1337
   775   00FDA6                     u520:
   776   00FDA6  C029  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
   777   00FDAA  C02A  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
   778   00FDAE  30DF               	rrcf	223,w,c
   779   00FDB0  32E8               	rrcf	wreg,f,c
   780   00FDB2  32E8               	rrcf	wreg,f,c
   781   00FDB4  0B07               	andlw	7
   782   00FDB6  6E2C               	movwf	??_gpio_pin_logic_write^0,c
   783   00FDB8  0E07               	movlw	7
   784   00FDBA  642C               	cpfsgt	??_gpio_pin_logic_write^0,c
   785   00FDBC  EFE2  F07E         	goto	u531
   786   00FDC0  EFE4  F07E         	goto	u530
   787   00FDC4                     u531:
   788   00FDC4  EF47  F07F         	goto	l1345
   789   00FDC8                     u530:
   790   00FDC8                     l1337:
   791                           
   792                           ;MCAL/GPIO/gpio.c: 44:         ret = (Std_ReturnType)0x00;
   793   00FDC8  0E00               	movlw	0
   794   00FDCA  6E32               	movwf	gpio_pin_logic_write@ret^0,c
   795                           
   796                           ;MCAL/GPIO/gpio.c: 45:     }
   797   00FDCC  EF5C  F07F         	goto	l1347
   798   00FDD0                     l1339:
   799                           
   800                           ;MCAL/GPIO/gpio.c: 49:                 (*lat_regs[my_pin->port] &= ~(1<<my_pin->pin));
   801   00FDD0  C029  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
   802   00FDD4  C02A  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
   803   00FDD8  30DF               	rrcf	223,w,c
   804   00FDDA  32E8               	rrcf	wreg,f,c
   805   00FDDC  32E8               	rrcf	wreg,f,c
   806   00FDDE  0B07               	andlw	7
   807   00FDE0  6E2C               	movwf	??_gpio_pin_logic_write^0,c
   808   00FDE2  0E01               	movlw	1
   809   00FDE4  6E2D               	movwf	(??_gpio_pin_logic_write+1)^0,c
   810   00FDE6  2A2C               	incf	??_gpio_pin_logic_write^0,f,c
   811   00FDE8  EFF8  F07E         	goto	u544
   812   00FDEC                     u545:
   813   00FDEC  90D8               	bcf	status,0,c
   814   00FDEE  362D               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
   815   00FDF0                     u544:
   816   00FDF0  2E2C               	decfsz	??_gpio_pin_logic_write^0,f,c
   817   00FDF2  EFF6  F07E         	goto	u545
   818   00FDF6  502D               	movf	(??_gpio_pin_logic_write+1)^0,w,c
   819   00FDF8  0AFF               	xorlw	255
   820   00FDFA  6E2E               	movwf	(??_gpio_pin_logic_write+2)^0,c
   821   00FDFC  C029  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
   822   00FE00  C02A  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
   823   00FE04  50DF               	movf	223,w,c
   824   00FE06  0B07               	andlw	7
   825   00FE08  6E2F               	movwf	(??_gpio_pin_logic_write+3)^0,c
   826   00FE0A  502F               	movf	(??_gpio_pin_logic_write+3)^0,w,c
   827   00FE0C  0D02               	mullw	2
   828   00FE0E  0E01               	movlw	low _lat_regs
   829   00FE10  24F3               	addwf	243,w,c
   830   00FE12  6ED9               	movwf	fsr2l,c
   831   00FE14  0E00               	movlw	high _lat_regs
   832   00FE16  20F4               	addwfc	prodh,w,c
   833   00FE18  6EDA               	movwf	fsr2h,c
   834   00FE1A  CFDE F030          	movff	postinc2,??_gpio_pin_logic_write+4
   835   00FE1E  CFDD F031          	movff	postdec2,??_gpio_pin_logic_write+5
   836   00FE22  C030  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
   837   00FE26  C031  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
   838   00FE2A  502E               	movf	(??_gpio_pin_logic_write+2)^0,w,c
   839   00FE2C  16DF               	andwf	indf2,f,c
   840                           
   841                           ;MCAL/GPIO/gpio.c: 50:                 break;
   842   00FE2E  EF5C  F07F         	goto	l1347
   843   00FE32                     l1341:
   844                           
   845                           ;MCAL/GPIO/gpio.c: 52:                 (*lat_regs[my_pin->port] |=(1<<my_pin->pin));
   846   00FE32  C029  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
   847   00FE36  C02A  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
   848   00FE3A  30DF               	rrcf	223,w,c
   849   00FE3C  32E8               	rrcf	wreg,f,c
   850   00FE3E  32E8               	rrcf	wreg,f,c
   851   00FE40  0B07               	andlw	7
   852   00FE42  6E2C               	movwf	??_gpio_pin_logic_write^0,c
   853   00FE44  0E01               	movlw	1
   854   00FE46  6E2D               	movwf	(??_gpio_pin_logic_write+1)^0,c
   855   00FE48  2A2C               	incf	??_gpio_pin_logic_write^0,f,c
   856   00FE4A  EF29  F07F         	goto	u554
   857   00FE4E                     u555:
   858   00FE4E  90D8               	bcf	status,0,c
   859   00FE50  362D               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
   860   00FE52                     u554:
   861   00FE52  2E2C               	decfsz	??_gpio_pin_logic_write^0,f,c
   862   00FE54  EF27  F07F         	goto	u555
   863   00FE58  C029  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
   864   00FE5C  C02A  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
   865   00FE60  50DF               	movf	223,w,c
   866   00FE62  0B07               	andlw	7
   867   00FE64  6E2E               	movwf	(??_gpio_pin_logic_write+2)^0,c
   868   00FE66  502E               	movf	(??_gpio_pin_logic_write+2)^0,w,c
   869   00FE68  0D02               	mullw	2
   870   00FE6A  0E01               	movlw	low _lat_regs
   871   00FE6C  24F3               	addwf	243,w,c
   872   00FE6E  6ED9               	movwf	fsr2l,c
   873   00FE70  0E00               	movlw	high _lat_regs
   874   00FE72  20F4               	addwfc	prodh,w,c
   875   00FE74  6EDA               	movwf	fsr2h,c
   876   00FE76  CFDE F02F          	movff	postinc2,??_gpio_pin_logic_write+3
   877   00FE7A  CFDD F030          	movff	postdec2,??_gpio_pin_logic_write+4
   878   00FE7E  C02F  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
   879   00FE82  C030  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
   880   00FE86  502D               	movf	(??_gpio_pin_logic_write+1)^0,w,c
   881   00FE88  12DF               	iorwf	indf2,f,c
   882                           
   883                           ;MCAL/GPIO/gpio.c: 53:                 break;
   884   00FE8A  EF5C  F07F         	goto	l1347
   885   00FE8E                     l1345:
   886   00FE8E  502B               	movf	gpio_pin_logic_write@logic^0,w,c
   887   00FE90  6E2C               	movwf	??_gpio_pin_logic_write^0,c
   888   00FE92  6A2D               	clrf	(??_gpio_pin_logic_write+1)^0,c
   889                           
   890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 1, Range of values is 0 to 0
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte            4     3 (average)
   896                           ;	Chosen strategy is simple_byte
   897   00FE94  502D               	movf	(??_gpio_pin_logic_write+1)^0,w,c
   898   00FE96  0A00               	xorlw	0	; case 0
   899   00FE98  B4D8               	btfsc	status,2,c
   900   00FE9A  EF51  F07F         	goto	l1595
   901   00FE9E  EFE4  F07E         	goto	l1337
   902   00FEA2                     l1595:
   903                           
   904                           ; Switch size 1, requested type "simple"
   905                           ; Number of cases is 2, Range of values is 0 to 1
   906                           ; switch strategies available:
   907                           ; Name         Instructions Cycles
   908                           ; simple_byte            7     4 (average)
   909                           ;	Chosen strategy is simple_byte
   910   00FEA2  502C               	movf	??_gpio_pin_logic_write^0,w,c
   911   00FEA4  0A00               	xorlw	0	; case 0
   912   00FEA6  B4D8               	btfsc	status,2,c
   913   00FEA8  EFE8  F07E         	goto	l1339
   914   00FEAC  0A01               	xorlw	1	; case 1
   915   00FEAE  B4D8               	btfsc	status,2,c
   916   00FEB0  EF19  F07F         	goto	l1341
   917   00FEB4  EFE4  F07E         	goto	l1337
   918   00FEB8                     l1347:
   919                           
   920                           ;MCAL/GPIO/gpio.c: 57:     return ret;
   921   00FEB8  5032               	movf	gpio_pin_logic_write@ret^0,w,c
   922   00FEBA  0012               	return		;funcret
   923   00FEBC                     __end_of_gpio_pin_logic_write:
   924                           	callstack 0
   925                           
   926 ;; *************** function _gpio_pin_direction_init *****************
   927 ;; Defined at:
   928 ;;		line 13 in file "MCAL/GPIO/gpio.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  my_pin          2    0[COMRAM] PTR const struct .
   931 ;;		 -> relay_initialize@rel_pin(1), segment_cathode.segment_pins(4), segment_cathode(5), segment_anode.segment_pins(4),
      + 
   932 ;;		 -> segment_anode(5), led_init@my_pin(1), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  ret             1    8[COMRAM] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      unsigned char 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;Total ram usage:        9 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_gpio_pin_initialize
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958   00FEBC                     __ptext5:
   959                           	callstack 0
   960   00FEBC                     _gpio_pin_direction_init:
   961                           	callstack 28
   962   00FEBC                     
   963                           ;MCAL/GPIO/gpio.c: 14:     Std_ReturnType ret = (Std_ReturnType)0x01;
   964   00FEBC  0E01               	movlw	1
   965   00FEBE  6E31               	movwf	gpio_pin_direction_init@ret^0,c
   966   00FEC0                     
   967                           ;MCAL/GPIO/gpio.c: 15:     if(((void*)0) == my_pin || my_pin->pin > 7){
   968   00FEC0  5029               	movf	gpio_pin_direction_init@my_pin^0,w,c
   969   00FEC2  102A               	iorwf	(gpio_pin_direction_init@my_pin+1)^0,w,c
   970   00FEC4  B4D8               	btfsc	status,2,c
   971   00FEC6  EF67  F07F         	goto	u561
   972   00FECA  EF69  F07F         	goto	u560
   973   00FECE                     u561:
   974   00FECE  EF7A  F07F         	goto	l1361
   975   00FED2                     u560:
   976   00FED2  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
   977   00FED6  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
   978   00FEDA  30DF               	rrcf	223,w,c
   979   00FEDC  32E8               	rrcf	wreg,f,c
   980   00FEDE  32E8               	rrcf	wreg,f,c
   981   00FEE0  0B07               	andlw	7
   982   00FEE2  6E2B               	movwf	??_gpio_pin_direction_init^0,c
   983   00FEE4  0E07               	movlw	7
   984   00FEE6  642B               	cpfsgt	??_gpio_pin_direction_init^0,c
   985   00FEE8  EF78  F07F         	goto	u571
   986   00FEEC  EF7A  F07F         	goto	u570
   987   00FEF0                     u571:
   988   00FEF0  EFDD  F07F         	goto	l1369
   989   00FEF4                     u570:
   990   00FEF4                     l1361:
   991                           
   992                           ;MCAL/GPIO/gpio.c: 16:         ret = (Std_ReturnType)0x00;
   993   00FEF4  0E00               	movlw	0
   994   00FEF6  6E31               	movwf	gpio_pin_direction_init@ret^0,c
   995                           
   996                           ;MCAL/GPIO/gpio.c: 17:     }
   997   00FEF8  EFFE  F07F         	goto	l1371
   998   00FEFC                     l1363:
   999                           
  1000                           ;MCAL/GPIO/gpio.c: 21:                 (*tris_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1001   00FEFC  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1002   00FF00  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1003   00FF04  30DF               	rrcf	223,w,c
  1004   00FF06  32E8               	rrcf	wreg,f,c
  1005   00FF08  32E8               	rrcf	wreg,f,c
  1006   00FF0A  0B07               	andlw	7
  1007   00FF0C  6E2B               	movwf	??_gpio_pin_direction_init^0,c
  1008   00FF0E  0E01               	movlw	1
  1009   00FF10  6E2C               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1010   00FF12  2A2B               	incf	??_gpio_pin_direction_init^0,f,c
  1011   00FF14  EF8E  F07F         	goto	u584
  1012   00FF18                     u585:
  1013   00FF18  90D8               	bcf	status,0,c
  1014   00FF1A  362C               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1015   00FF1C                     u584:
  1016   00FF1C  2E2B               	decfsz	??_gpio_pin_direction_init^0,f,c
  1017   00FF1E  EF8C  F07F         	goto	u585
  1018   00FF22  502C               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1019   00FF24  0AFF               	xorlw	255
  1020   00FF26  6E2D               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1021   00FF28  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1022   00FF2C  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1023   00FF30  50DF               	movf	223,w,c
  1024   00FF32  0B07               	andlw	7
  1025   00FF34  6E2E               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1026   00FF36  502E               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1027   00FF38  0D02               	mullw	2
  1028   00FF3A  0E15               	movlw	low _tris_regs
  1029   00FF3C  24F3               	addwf	243,w,c
  1030   00FF3E  6ED9               	movwf	fsr2l,c
  1031   00FF40  0E00               	movlw	high _tris_regs
  1032   00FF42  20F4               	addwfc	prodh,w,c
  1033   00FF44  6EDA               	movwf	fsr2h,c
  1034   00FF46  CFDE F02F          	movff	postinc2,??_gpio_pin_direction_init+4
  1035   00FF4A  CFDD F030          	movff	postdec2,??_gpio_pin_direction_init+5
  1036   00FF4E  C02F  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1037   00FF52  C030  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1038   00FF56  502D               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1039   00FF58  16DF               	andwf	indf2,f,c
  1040                           
  1041                           ;MCAL/GPIO/gpio.c: 22:                 break;
  1042   00FF5A  EFFE  F07F         	goto	l1371
  1043   00FF5E                     l1365:
  1044                           
  1045                           ;MCAL/GPIO/gpio.c: 24:                 (*tris_regs[my_pin->port] |=(1<<my_pin->pin));
  1046   00FF5E  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1047   00FF62  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1048   00FF66  30DF               	rrcf	223,w,c
  1049   00FF68  32E8               	rrcf	wreg,f,c
  1050   00FF6A  32E8               	rrcf	wreg,f,c
  1051   00FF6C  0B07               	andlw	7
  1052   00FF6E  6E2B               	movwf	??_gpio_pin_direction_init^0,c
  1053   00FF70  0E01               	movlw	1
  1054   00FF72  6E2C               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1055   00FF74  2A2B               	incf	??_gpio_pin_direction_init^0,f,c
  1056   00FF76  EFBF  F07F         	goto	u594
  1057   00FF7A                     u595:
  1058   00FF7A  90D8               	bcf	status,0,c
  1059   00FF7C  362C               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1060   00FF7E                     u594:
  1061   00FF7E  2E2B               	decfsz	??_gpio_pin_direction_init^0,f,c
  1062   00FF80  EFBD  F07F         	goto	u595
  1063   00FF84  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1064   00FF88  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1065   00FF8C  50DF               	movf	223,w,c
  1066   00FF8E  0B07               	andlw	7
  1067   00FF90  6E2D               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1068   00FF92  502D               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1069   00FF94  0D02               	mullw	2
  1070   00FF96  0E15               	movlw	low _tris_regs
  1071   00FF98  24F3               	addwf	243,w,c
  1072   00FF9A  6ED9               	movwf	fsr2l,c
  1073   00FF9C  0E00               	movlw	high _tris_regs
  1074   00FF9E  20F4               	addwfc	prodh,w,c
  1075   00FFA0  6EDA               	movwf	fsr2h,c
  1076   00FFA2  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+3
  1077   00FFA6  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+4
  1078   00FFAA  C02E  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1079   00FFAE  C02F  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1080   00FFB2  502C               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1081   00FFB4  12DF               	iorwf	indf2,f,c
  1082                           
  1083                           ;MCAL/GPIO/gpio.c: 25:                 break;
  1084   00FFB6  EFFE  F07F         	goto	l1371
  1085   00FFBA                     l1369:
  1086   00FFBA  C029  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1087   00FFBE  C02A  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1088   00FFC2  BCDF               	btfsc	indf2,6,c
  1089   00FFC4  EFE6  F07F         	goto	u601
  1090   00FFC8  EFE9  F07F         	goto	u600
  1091   00FFCC                     u601:
  1092   00FFCC  0E01               	movlw	1
  1093   00FFCE  EFEA  F07F         	goto	u610
  1094   00FFD2                     u600:
  1095   00FFD2  0E00               	movlw	0
  1096   00FFD4                     u610:
  1097   00FFD4  6E2B               	movwf	??_gpio_pin_direction_init^0,c
  1098   00FFD6  6A2C               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1099                           
  1100                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1101                           ; Switch size 1, requested type "simple"
  1102                           ; Number of cases is 1, Range of values is 0 to 0
  1103                           ; switch strategies available:
  1104                           ; Name         Instructions Cycles
  1105                           ; simple_byte            4     3 (average)
  1106                           ;	Chosen strategy is simple_byte
  1107   00FFD8  502C               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1108   00FFDA  0A00               	xorlw	0	; case 0
  1109   00FFDC  B4D8               	btfsc	status,2,c
  1110   00FFDE  EFF3  F07F         	goto	l1597
  1111   00FFE2  EF7A  F07F         	goto	l1361
  1112   00FFE6                     l1597:
  1113                           
  1114                           ; Switch size 1, requested type "simple"
  1115                           ; Number of cases is 2, Range of values is 0 to 1
  1116                           ; switch strategies available:
  1117                           ; Name         Instructions Cycles
  1118                           ; simple_byte            7     4 (average)
  1119                           ;	Chosen strategy is simple_byte
  1120   00FFE6  502B               	movf	??_gpio_pin_direction_init^0,w,c
  1121   00FFE8  0A00               	xorlw	0	; case 0
  1122   00FFEA  B4D8               	btfsc	status,2,c
  1123   00FFEC  EF7E  F07F         	goto	l1363
  1124   00FFF0  0A01               	xorlw	1	; case 1
  1125   00FFF2  B4D8               	btfsc	status,2,c
  1126   00FFF4  EFAF  F07F         	goto	l1365
  1127   00FFF8  EF7A  F07F         	goto	l1361
  1128   00FFFC                     l1371:
  1129                           
  1130                           ;MCAL/GPIO/gpio.c: 29:     return ret;
  1131   00FFFC  5031               	movf	gpio_pin_direction_init@ret^0,w,c
  1132   00FFFE  0012               	return		;funcret
  1133   010000                     __end_of_gpio_pin_direction_init:
  1134                           	callstack 0
  1135   000000                     
  1136                           	psect	rparam
  1137   000000                     
  1138                           	psect	idloc
  1139                           
  1140                           ;Config register IDLOC0 @ 0x200000
  1141                           ;	unspecified, using default values
  1142   200000                     	org	2097152
  1143   200000  FF                 	db	255
  1144                           
  1145                           ;Config register IDLOC1 @ 0x200001
  1146                           ;	unspecified, using default values
  1147   200001                     	org	2097153
  1148   200001  FF                 	db	255
  1149                           
  1150                           ;Config register IDLOC2 @ 0x200002
  1151                           ;	unspecified, using default values
  1152   200002                     	org	2097154
  1153   200002  FF                 	db	255
  1154                           
  1155                           ;Config register IDLOC3 @ 0x200003
  1156                           ;	unspecified, using default values
  1157   200003                     	org	2097155
  1158   200003  FF                 	db	255
  1159                           
  1160                           ;Config register IDLOC4 @ 0x200004
  1161                           ;	unspecified, using default values
  1162   200004                     	org	2097156
  1163   200004  FF                 	db	255
  1164                           
  1165                           ;Config register IDLOC5 @ 0x200005
  1166                           ;	unspecified, using default values
  1167   200005                     	org	2097157
  1168   200005  FF                 	db	255
  1169                           
  1170                           ;Config register IDLOC6 @ 0x200006
  1171                           ;	unspecified, using default values
  1172   200006                     	org	2097158
  1173   200006  FF                 	db	255
  1174                           
  1175                           ;Config register IDLOC7 @ 0x200007
  1176                           ;	unspecified, using default values
  1177   200007                     	org	2097159
  1178   200007  FF                 	db	255
  1179                           
  1180                           	psect	config
  1181                           
  1182                           ; Padding undefined space
  1183   300000                     	org	3145728
  1184   300000  FF                 	db	255
  1185                           
  1186                           ;Config register CONFIG1H @ 0x300001
  1187                           ;	unspecified, using default values
  1188                           ;	Oscillator Selection bits
  1189                           ;	OSC = 0x7, unprogrammed default
  1190                           ;	Fail-Safe Clock Monitor Enable bit
  1191                           ;	FCMEN = 0x0, unprogrammed default
  1192                           ;	Internal/External Oscillator Switchover bit
  1193                           ;	IESO = 0x0, unprogrammed default
  1194   300001                     	org	3145729
  1195   300001  07                 	db	7
  1196                           
  1197                           ;Config register CONFIG2L @ 0x300002
  1198                           ;	unspecified, using default values
  1199                           ;	Power-up Timer Enable bit
  1200                           ;	PWRT = 0x1, unprogrammed default
  1201                           ;	Brown-out Reset Enable bits
  1202                           ;	BOREN = 0x3, unprogrammed default
  1203                           ;	Brown Out Reset Voltage bits
  1204                           ;	BORV = 0x3, unprogrammed default
  1205   300002                     	org	3145730
  1206   300002  1F                 	db	31
  1207                           
  1208                           ;Config register CONFIG2H @ 0x300003
  1209                           ;	unspecified, using default values
  1210                           ;	Watchdog Timer Enable bit
  1211                           ;	WDT = 0x1, unprogrammed default
  1212                           ;	Watchdog Timer Postscale Select bits
  1213                           ;	WDTPS = 0xF, unprogrammed default
  1214   300003                     	org	3145731
  1215   300003  1F                 	db	31
  1216                           
  1217                           ; Padding undefined space
  1218   300004                     	org	3145732
  1219   300004  FF                 	db	255
  1220                           
  1221                           ;Config register CONFIG3H @ 0x300005
  1222                           ;	unspecified, using default values
  1223                           ;	CCP2 MUX bit
  1224                           ;	CCP2MX = 0x1, unprogrammed default
  1225                           ;	PORTB A/D Enable bit
  1226                           ;	PBADEN = 0x1, unprogrammed default
  1227                           ;	Low-Power Timer1 Oscillator Enable bit
  1228                           ;	LPT1OSC = 0x0, unprogrammed default
  1229                           ;	MCLR Pin Enable bit
  1230                           ;	MCLRE = 0x1, unprogrammed default
  1231   300005                     	org	3145733
  1232   300005  83                 	db	131
  1233                           
  1234                           ;Config register CONFIG4L @ 0x300006
  1235                           ;	unspecified, using default values
  1236                           ;	Stack Full/Underflow Reset Enable bit
  1237                           ;	STVREN = 0x1, unprogrammed default
  1238                           ;	Single-Supply ICSP Enable bit
  1239                           ;	LVP = 0x1, unprogrammed default
  1240                           ;	Extended Instruction Set Enable bit
  1241                           ;	XINST = 0x0, unprogrammed default
  1242                           ;	Background Debugger Enable bit
  1243                           ;	DEBUG = 0x1, unprogrammed default
  1244   300006                     	org	3145734
  1245   300006  85                 	db	133
  1246                           
  1247                           ; Padding undefined space
  1248   300007                     	org	3145735
  1249   300007  FF                 	db	255
  1250                           
  1251                           ;Config register CONFIG5L @ 0x300008
  1252                           ;	unspecified, using default values
  1253                           ;	Code Protection bit
  1254                           ;	CP0 = 0x1, unprogrammed default
  1255                           ;	Code Protection bit
  1256                           ;	CP1 = 0x1, unprogrammed default
  1257                           ;	Code Protection bit
  1258                           ;	CP2 = 0x1, unprogrammed default
  1259                           ;	Code Protection bit
  1260                           ;	CP3 = 0x1, unprogrammed default
  1261   300008                     	org	3145736
  1262   300008  0F                 	db	15
  1263                           
  1264                           ;Config register CONFIG5H @ 0x300009
  1265                           ;	unspecified, using default values
  1266                           ;	Boot Block Code Protection bit
  1267                           ;	CPB = 0x1, unprogrammed default
  1268                           ;	Data EEPROM Code Protection bit
  1269                           ;	CPD = 0x1, unprogrammed default
  1270   300009                     	org	3145737
  1271   300009  C0                 	db	192
  1272                           
  1273                           ;Config register CONFIG6L @ 0x30000A
  1274                           ;	unspecified, using default values
  1275                           ;	Write Protection bit
  1276                           ;	WRT0 = 0x1, unprogrammed default
  1277                           ;	Write Protection bit
  1278                           ;	WRT1 = 0x1, unprogrammed default
  1279                           ;	Write Protection bit
  1280                           ;	WRT2 = 0x1, unprogrammed default
  1281                           ;	Write Protection bit
  1282                           ;	WRT3 = 0x1, unprogrammed default
  1283   30000A                     	org	3145738
  1284   30000A  0F                 	db	15
  1285                           
  1286                           ;Config register CONFIG6H @ 0x30000B
  1287                           ;	unspecified, using default values
  1288                           ;	Configuration Register Write Protection bit
  1289                           ;	WRTC = 0x1, unprogrammed default
  1290                           ;	Boot Block Write Protection bit
  1291                           ;	WRTB = 0x1, unprogrammed default
  1292                           ;	Data EEPROM Write Protection bit
  1293                           ;	WRTD = 0x1, unprogrammed default
  1294   30000B                     	org	3145739
  1295   30000B  E0                 	db	224
  1296                           
  1297                           ;Config register CONFIG7L @ 0x30000C
  1298                           ;	unspecified, using default values
  1299                           ;	Table Read Protection bit
  1300                           ;	EBTR0 = 0x1, unprogrammed default
  1301                           ;	Table Read Protection bit
  1302                           ;	EBTR1 = 0x1, unprogrammed default
  1303                           ;	Table Read Protection bit
  1304                           ;	EBTR2 = 0x1, unprogrammed default
  1305                           ;	Table Read Protection bit
  1306                           ;	EBTR3 = 0x1, unprogrammed default
  1307   30000C                     	org	3145740
  1308   30000C  0F                 	db	15
  1309                           
  1310                           ;Config register CONFIG7H @ 0x30000D
  1311                           ;	unspecified, using default values
  1312                           ;	Boot Block Table Read Protection bit
  1313                           ;	EBTRB = 0x1, unprogrammed default
  1314   30000D                     	org	3145741
  1315   30000D  40                 	db	64
  1316                           tosu	equ	0xFFF
  1317                           tosh	equ	0xFFE
  1318                           tosl	equ	0xFFD
  1319                           stkptr	equ	0xFFC
  1320                           pclatu	equ	0xFFB
  1321                           pclath	equ	0xFFA
  1322                           pcl	equ	0xFF9
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           prodh	equ	0xFF4
  1328                           prodl	equ	0xFF3
  1329                           indf0	equ	0xFEF
  1330                           postinc0	equ	0xFEE
  1331                           postdec0	equ	0xFED
  1332                           preinc0	equ	0xFEC
  1333                           plusw0	equ	0xFEB
  1334                           fsr0h	equ	0xFEA
  1335                           fsr0l	equ	0xFE9
  1336                           wreg	equ	0xFE8
  1337                           indf1	equ	0xFE7
  1338                           postinc1	equ	0xFE6
  1339                           postdec1	equ	0xFE5
  1340                           preinc1	equ	0xFE4
  1341                           plusw1	equ	0xFE3
  1342                           fsr1h	equ	0xFE2
  1343                           fsr1l	equ	0xFE1
  1344                           bsr	equ	0xFE0
  1345                           indf2	equ	0xFDF
  1346                           postinc2	equ	0xFDE
  1347                           postdec2	equ	0xFDD
  1348                           preinc2	equ	0xFDC
  1349                           plusw2	equ	0xFDB
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     21      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    segment_write_number@my_segment	PTR const struct . size(2) Largest target is 5
		 -> segment_cathode(COMRAM[5]), segment_anode(COMRAM[5]), 

    segment_initialze@my_segment	PTR const struct . size(2) Largest target is 5
		 -> segment_cathode(COMRAM[5]), segment_anode(COMRAM[5]), 

    gpio_pin_initialize@my_pin	PTR const struct . size(2) Largest target is 5
		 -> relay_initialize@rel_pin(COMRAM[1]), segment_cathode.segment_pins(COMRAM[4]), segment_cathode(COMRAM[5]), segment_anode.segment_pins(COMRAM[4]), 
		 -> segment_anode(COMRAM[5]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_logic_write@my_pin	PTR const struct . size(2) Largest target is 5
		 -> relay_turn_off@rel_pin(COMRAM[1]), relay_turn_on@rel_pin(COMRAM[1]), relay_initialize@rel_pin(COMRAM[1]), segment_cathode.segment_pins(COMRAM[4]), 
		 -> segment_cathode(COMRAM[5]), segment_anode.segment_pins(COMRAM[4]), segment_anode(COMRAM[5]), led_turn_off@my_pin(COMRAM[1]), 
		 -> led_turn_on@my_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_direction_init@my_pin	PTR const struct . size(2) Largest target is 5
		 -> relay_initialize@rel_pin(COMRAM[1]), segment_cathode.segment_pins(COMRAM[4]), segment_cathode(COMRAM[5]), segment_anode.segment_pins(COMRAM[4]), 
		 -> segment_anode(COMRAM[5]), led_init@my_pin(COMRAM[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_segment_write_number
    _segment_write_number->_gpio_pin_logic_write
    _segment_initialze->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_logic_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6871
                                             17 COMRAM     4     4      0
                  _segment_initialze
               _segment_write_number
 ---------------------------------------------------------------------------------
 (1) _segment_write_number                                 7     3      4    2995
                                             10 COMRAM     7     3      4
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _segment_initialze                                    3     1      2    3786
                                             13 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     1      2    3512
                                             10 COMRAM     3     1      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_write                                10     7      3    2459
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     255
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _segment_initialze
     _gpio_pin_initialize
       _gpio_pin_direction_init
       _gpio_pin_logic_write
   _segment_write_number
     _gpio_pin_logic_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     15      44       1       53.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      39        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Aug 05 01:00:04 2023

                             l82 FFFE                              l101 FEBA  
                            l120 FBE4                              l250 FC40  
                            l255 FD8E                              u600 FFD2  
                            u520 FDA6                              u601 FFCC  
                            u521 FDA2                              u610 FFD4  
                            u530 FDC8                              u531 FDC4  
                            u620 FBAE                              u700 FCC0  
                            u621 FBAA                              u701 FCBC  
                            u630 FBF8                              u631 FBF4  
                            u560 FED2                              u544 FDF0  
                            u640 FCDA                              u561 FECE  
                            u545 FDEC                              u641 FCD6  
                            u570 FEF4                              u554 FE52  
                            u650 FCF6                              u571 FEF0  
                            u555 FE4E                              u651 FCF2  
                            u807 FC94                              u584 FF1C  
                            u585 FF18                              u594 FF7E  
                            u595 FF7A           ??_gpio_pin_logic_write 002C  
           segment_initialze@ret 0038                _segment_initialze FBE6  
                            prod 000FF3                              wreg 000FE8  
          relay_initialize@F3039 0040       gpio_pin_logic_write@my_pin 0029  
             ?_segment_initialze 0036                             l1401 FCC8  
                           l1331 FD90                             l1403 FCC8  
                           l1341 FE32                             l1333 FD94  
                           l1405 FCDA                             l1335 FDA6  
                           l1407 FCF6                             l1361 FEF4  
                           l1345 FE8E                             l1337 FDC8  
                           l1409 FCFA                             l1363 FEFC  
                           l1371 FFFC                             l1355 FEBC  
                           l1339 FDD0                             l1347 FEB8  
                           l1365 FF5E                             l1357 FEC0  
                           l1381 FB9C                             l1359 FED2  
                           l1383 FBAE                             l1391 FBE6  
                           l1369 FFBA                             l1385 FBB6  
                           l1393 FBE6                             l1481 FC62  
                           l1473 FC42                             l1387 FBE2  
                           l1379 FB9C                             l1395 FBF8  
                           l1483 FC8A                             l1475 FC5A  
                           l1397 FBFC                             l1485 FCA0  
                           l1487 FCA4                             l1595 FEA2  
                           l1597 FFE6                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
            ??_segment_initialze 0038                             _main FC42  
                           fsr2h 000FDA                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
       ?_gpio_pin_direction_init 0029                             prodl 000FF3  
                           start 0000                     ___param_bank 000000  
                          ?_main 0029        __end_of_segment_initialze FC42  
            relay_turn_off@F3049 003E                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            main@j 003C  
                          tablat 000FF5                            status 000FD8  
                __initialization FB66                     __end_of_main FCC8  
                         ??_main 003A                    __activetblptr 000002  
               led_turn_on@F3050 0043                           clear_0 FB8C  
                         isa$std 000001        gpio_pin_logic_write@logic 002B  
                  led_init@F3045 0044   segment_write_number@my_segment 0033  
                   __pdataCOMRAM 0001                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0080          __end_of__initialization FB92  
    segment_initialze@my_segment 0036                    ___rparam_used 000001  
                 __pcstackCOMRAM 0029                led_turn_off@F3055 0042  
                led_toggle@F3060 0041                          __Hparam 0000  
                        __Lparam 0000              _gpio_pin_initialize FB9C  
                        __pcinit FB66                          __ramtop 1000  
                        __ptext0 FC42                          __ptext1 FCC8  
                        __ptext2 FBE6                          __ptext3 FB9C  
                        __ptext4 FD90                          __ptext5 FEBC  
           ?_gpio_pin_initialize 0033             end_of_initialization FB92  
                  __Lmediumconst 0000                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE                  _segment_cathode 001F  
          ??_gpio_pin_initialize 0035               relay_turn_on@F3044 003F  
        _gpio_pin_direction_init FEBC                    __pidataCOMRAM FB3E  
            start_initialization FB66     __end_of_segment_write_number FD90  
                  _segment_anode 0024                      __pbssCOMRAM 003E  
   __end_of_gpio_pin_logic_write FEBC        ??_gpio_pin_direction_init 002B  
      gpio_pin_initialize@my_pin 0033                        _port_regs 000B  
                      _tris_regs 0015             _segment_write_number FCC8  
         gpio_pin_initialize@ret 0035  __end_of_gpio_pin_direction_init 0000  
        segment_write_number@ret 0039                        copy_data0 FB7A  
                       __Hrparam 0000                         __Lrparam 0000  
    __end_of_gpio_pin_initialize FBE6            ?_segment_write_number 0033  
           _gpio_pin_logic_write FD90                         _lat_regs 0001  
                       isa$xinst 000000            ?_gpio_pin_logic_write 0029  
        gpio_pin_logic_write@ret 0032       segment_write_number@number 0035  
         ??_segment_write_number 0037    gpio_pin_direction_init@my_pin 0029  
     gpio_pin_direction_init@ret 0031  
