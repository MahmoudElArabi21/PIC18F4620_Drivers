

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 04 01:20:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4620 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   00F98B                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _lat_regs
    65   00F98B  89                 	db	137
    66   00F98C  0F                 	db	15
    67   00F98D  8A                 	db	138
    68   00F98E  0F                 	db	15
    69   00F98F  8B                 	db	139
    70   00F990  0F                 	db	15
    71   00F991  8C                 	db	140
    72   00F992  0F                 	db	15
    73   00F993  8D                 	db	141
    74   00F994  0F                 	db	15
    75                           
    76                           ;initializer for _port_regs
    77   00F995  80                 	db	128
    78   00F996  0F                 	db	15
    79   00F997  81                 	db	129
    80   00F998  0F                 	db	15
    81   00F999  82                 	db	130
    82   00F99A  0F                 	db	15
    83   00F99B  83                 	db	131
    84   00F99C  0F                 	db	15
    85   00F99D  84                 	db	132
    86   00F99E  0F                 	db	15
    87                           
    88                           ;initializer for _tris_regs
    89   00F99F  92                 	db	146
    90   00F9A0  0F                 	db	15
    91   00F9A1  93                 	db	147
    92   00F9A2  0F                 	db	15
    93   00F9A3  94                 	db	148
    94   00F9A4  0F                 	db	15
    95   00F9A5  95                 	db	149
    96   00F9A6  0F                 	db	15
    97   00F9A7  96                 	db	150
    98   00F9A8  0F                 	db	15
    99                           
   100                           ;initializer for _led0portd
   101   00F9A9  40                 	db	64
   102   000000                     _LATA	set	3977
   103   000000                     _PORTE	set	3972
   104   000000                     _PORTD	set	3971
   105   000000                     _PORTC	set	3970
   106   000000                     _PORTB	set	3969
   107   000000                     _PORTA	set	3968
   108   000000                     _TRISA	set	3986
   109   000000                     _TRISE	set	3990
   110   000000                     _TRISD	set	3989
   111   000000                     _TRISC	set	3988
   112   000000                     _TRISB	set	3987
   113   000000                     _LATE	set	3981
   114   000000                     _LATD	set	3980
   115   000000                     _LATC	set	3979
   116   000000                     _LATB	set	3978
   117                           
   118                           ; #config settings
   119                           
   120                           	psect	cinit
   121   00F9AA                     __pcinit:
   122                           	callstack 0
   123   00F9AA                     start_initialization:
   124                           	callstack 0
   125   00F9AA                     __initialization:
   126                           	callstack 0
   127                           
   128                           ; Initialize objects allocated to COMRAM (31 bytes)
   129                           ; load TBLPTR registers with __pidataCOMRAM
   130   00F9AA  0E8B               	movlw	low __pidataCOMRAM
   131   00F9AC  6EF6               	movwf	tblptrl,c
   132   00F9AE  0EF9               	movlw	high __pidataCOMRAM
   133   00F9B0  6EF7               	movwf	tblptrh,c
   134   00F9B2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   135   00F9B4  6EF8               	movwf	tblptru,c
   136   00F9B6  EE00  F001         	lfsr	0,__pdataCOMRAM
   137   00F9BA  EE10 F01F          	lfsr	1,31
   138   00F9BE                     copy_data0:
   139   00F9BE  0009               	tblrd		*+
   140   00F9C0  CFF5 FFEE          	movff	tablat,postinc0
   141   00F9C4  50E5               	movf	postdec1,w,c
   142   00F9C6  50E1               	movf	fsr1l,w,c
   143   00F9C8  E1FA               	bnz	copy_data0
   144                           
   145                           ; Clear objects allocated to COMRAM (4 bytes)
   146   00F9CA  6A35               	clrf	(__pbssCOMRAM+3)& (0+255),c
   147   00F9CC  6A34               	clrf	(__pbssCOMRAM+2)& (0+255),c
   148   00F9CE  6A33               	clrf	(__pbssCOMRAM+1)& (0+255),c
   149   00F9D0  6A32               	clrf	__pbssCOMRAM& (0+255),c
   150   00F9D2                     end_of_initialization:
   151                           	callstack 0
   152   00F9D2                     __end_of__initialization:
   153                           	callstack 0
   154   00F9D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155   00F9D4  6EF8               	movwf	tblptru,c
   156   00F9D6  0100               	movlb	0
   157   00F9D8  EF35  F07E         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   000032                     __pbssCOMRAM:
   161                           	callstack 0
   162   000032                     led_toggle@F3059:
   163                           	callstack 0
   164   000032                     	ds	1
   165   000033                     led_turn_off@F3054:
   166                           	callstack 0
   167   000033                     	ds	1
   168   000034                     led_turn_on@F3049:
   169                           	callstack 0
   170   000034                     	ds	1
   171   000035                     led_init@F3044:
   172                           	callstack 0
   173   000035                     	ds	1
   174                           
   175                           	psect	dataCOMRAM
   176   000001                     __pdataCOMRAM:
   177                           	callstack 0
   178   000001                     _lat_regs:
   179                           	callstack 0
   180   000001                     	ds	10
   181   00000B                     _port_regs:
   182                           	callstack 0
   183   00000B                     	ds	10
   184   000015                     _tris_regs:
   185                           	callstack 0
   186   000015                     	ds	10
   187   00001F                     _led0portd:
   188                           	callstack 0
   189   00001F                     	ds	1
   190                           
   191                           	psect	cstackCOMRAM
   192   000020                     __pcstackCOMRAM:
   193                           	callstack 0
   194   000020                     gpio_pin_direction_init@my_pin:
   195                           	callstack 0
   196   000020                     gpio_pin_logic_write@my_pin:
   197                           	callstack 0
   198   000020                     gpio_pin_logic_toggle@my_pin:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x0
   202   000020                     	ds	2
   203   000022                     ??_gpio_pin_direction_init:
   204   000022                     ??_gpio_pin_logic_write:
   205   000022                     ??_gpio_pin_logic_toggle:
   206                           
   207                           ; 1 bytes @ 0x2
   208   000022                     	ds	5
   209   000027                     gpio_pin_logic_toggle@ret:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x7
   213   000027                     	ds	1
   214   000028                     gpio_pin_direction_init@ret:
   215                           	callstack 0
   216   000028                     gpio_pin_logic_write@ret:
   217                           	callstack 0
   218   000028                     led_toggle@my_led:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x8
   222   000028                     	ds	1
   223   000029                     gpio_pin_initialize@my_pin:
   224                           	callstack 0
   225   000029                     led_turn_on@my_led:
   226                           	callstack 0
   227   000029                     led_turn_off@my_led:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x9
   231   000029                     	ds	1
   232   00002A                     ??_led_toggle:
   233                           
   234                           ; 1 bytes @ 0xA
   235   00002A                     	ds	1
   236   00002B                     ??_led_turn_off:
   237   00002B                     ??_led_turn_on:
   238   00002B                     gpio_pin_initialize@ret:
   239                           	callstack 0
   240   00002B                     led_toggle@my_pin:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xB
   244   00002B                     	ds	1
   245   00002C                     led_turn_on@my_pin:
   246                           	callstack 0
   247   00002C                     led_turn_off@my_pin:
   248                           	callstack 0
   249   00002C                     led_init@my_led:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253   00002C                     	ds	2
   254   00002E                     ??_led_init:
   255                           
   256                           ; 1 bytes @ 0xE
   257   00002E                     	ds	1
   258   00002F                     led_init@my_pin:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0xF
   262   00002F                     	ds	1
   263   000030                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x10
   266   000030                     	ds	2
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 17 in file "app.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  2  131[None  ] int 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels required when called: 3
   293 ;; This function calls:
   294 ;;		_led_init
   295 ;;		_led_toggle
   296 ;;		_led_turn_off
   297 ;;		_led_turn_on
   298 ;; This function is called by:
   299 ;;		Startup code after reset
   300 ;; This function uses a non-reentrant model
   301 ;;
   302                           
   303                           	psect	text0
   304   00FC6A                     __ptext0:
   305                           	callstack 0
   306   00FC6A                     _main:
   307                           	callstack 28
   308   00FC6A                     
   309                           ;app.c: 18:     led_init(&led0portd);
   310   00FC6A  0E1F               	movlw	low _led0portd
   311   00FC6C  6E2C               	movwf	led_init@my_led^0,c
   312   00FC6E  0E00               	movlw	high _led0portd
   313   00FC70  6E2D               	movwf	(led_init@my_led+1)^0,c
   314   00FC72  EC71  F07D         	call	_led_init	;wreg free
   315   00FC76                     
   316                           ;app.c: 19:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   317   00FC76  0E02               	movlw	2
   318   00FC78  6E31               	movwf	(??_main+1)^0,c
   319   00FC7A  0E04               	movlw	4
   320   00FC7C  6E30               	movwf	??_main^0,c
   321   00FC7E  0EBA               	movlw	186
   322   00FC80                     u607:
   323   00FC80  2EE8               	decfsz	wreg,f,c
   324   00FC82  D7FE               	bra	u607
   325   00FC84  2E30               	decfsz	??_main^0,f,c
   326   00FC86  D7FC               	bra	u607
   327   00FC88  2E31               	decfsz	(??_main+1)^0,f,c
   328   00FC8A  D7FA               	bra	u607
   329   00FC8C  D000               	nop2	
   330   00FC8E                     
   331                           ;app.c: 20:     led_turn_off(&led0portd);
   332   00FC8E  0E1F               	movlw	low _led0portd
   333   00FC90  6E29               	movwf	led_turn_off@my_led^0,c
   334   00FC92  0E00               	movlw	high _led0portd
   335   00FC94  6E2A               	movwf	(led_turn_off@my_led+1)^0,c
   336   00FC96  EC0B  F07D         	call	_led_turn_off	;wreg free
   337                           
   338                           ;app.c: 21:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   339   00FC9A  0E02               	movlw	2
   340   00FC9C  6E31               	movwf	(??_main+1)^0,c
   341   00FC9E  0E04               	movlw	4
   342   00FCA0  6E30               	movwf	??_main^0,c
   343   00FCA2  0EBA               	movlw	186
   344   00FCA4                     u617:
   345   00FCA4  2EE8               	decfsz	wreg,f,c
   346   00FCA6  D7FE               	bra	u617
   347   00FCA8  2E30               	decfsz	??_main^0,f,c
   348   00FCAA  D7FC               	bra	u617
   349   00FCAC  2E31               	decfsz	(??_main+1)^0,f,c
   350   00FCAE  D7FA               	bra	u617
   351   00FCB0  D000               	nop2	
   352   00FCB2                     
   353                           ;app.c: 22:     led_init(&led0portd);
   354   00FCB2  0E1F               	movlw	low _led0portd
   355   00FCB4  6E2C               	movwf	led_init@my_led^0,c
   356   00FCB6  0E00               	movlw	high _led0portd
   357   00FCB8  6E2D               	movwf	(led_init@my_led+1)^0,c
   358   00FCBA  EC71  F07D         	call	_led_init	;wreg free
   359   00FCBE                     
   360                           ;app.c: 23:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   361   00FCBE  0E02               	movlw	2
   362   00FCC0  6E31               	movwf	(??_main+1)^0,c
   363   00FCC2  0E04               	movlw	4
   364   00FCC4  6E30               	movwf	??_main^0,c
   365   00FCC6  0EBA               	movlw	186
   366   00FCC8                     u627:
   367   00FCC8  2EE8               	decfsz	wreg,f,c
   368   00FCCA  D7FE               	bra	u627
   369   00FCCC  2E30               	decfsz	??_main^0,f,c
   370   00FCCE  D7FC               	bra	u627
   371   00FCD0  2E31               	decfsz	(??_main+1)^0,f,c
   372   00FCD2  D7FA               	bra	u627
   373   00FCD4  D000               	nop2	
   374                           
   375                           ;app.c: 24:     led_turn_off(&led0portd);
   376   00FCD6  0E1F               	movlw	low _led0portd
   377   00FCD8  6E29               	movwf	led_turn_off@my_led^0,c
   378   00FCDA  0E00               	movlw	high _led0portd
   379   00FCDC  6E2A               	movwf	(led_turn_off@my_led+1)^0,c
   380   00FCDE  EC0B  F07D         	call	_led_turn_off	;wreg free
   381   00FCE2                     
   382                           ;app.c: 25:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   383   00FCE2  0E02               	movlw	2
   384   00FCE4  6E31               	movwf	(??_main+1)^0,c
   385   00FCE6  0E04               	movlw	4
   386   00FCE8  6E30               	movwf	??_main^0,c
   387   00FCEA  0EBA               	movlw	186
   388   00FCEC                     u637:
   389   00FCEC  2EE8               	decfsz	wreg,f,c
   390   00FCEE  D7FE               	bra	u637
   391   00FCF0  2E30               	decfsz	??_main^0,f,c
   392   00FCF2  D7FC               	bra	u637
   393   00FCF4  2E31               	decfsz	(??_main+1)^0,f,c
   394   00FCF6  D7FA               	bra	u637
   395   00FCF8  D000               	nop2	
   396   00FCFA                     
   397                           ;app.c: 26:     led_init(&led0portd);
   398   00FCFA  0E1F               	movlw	low _led0portd
   399   00FCFC  6E2C               	movwf	led_init@my_led^0,c
   400   00FCFE  0E00               	movlw	high _led0portd
   401   00FD00  6E2D               	movwf	(led_init@my_led+1)^0,c
   402   00FD02  EC71  F07D         	call	_led_init	;wreg free
   403                           
   404                           ;app.c: 27:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   405   00FD06  0E02               	movlw	2
   406   00FD08  6E31               	movwf	(??_main+1)^0,c
   407   00FD0A  0E04               	movlw	4
   408   00FD0C  6E30               	movwf	??_main^0,c
   409   00FD0E  0EBA               	movlw	186
   410   00FD10                     u647:
   411   00FD10  2EE8               	decfsz	wreg,f,c
   412   00FD12  D7FE               	bra	u647
   413   00FD14  2E30               	decfsz	??_main^0,f,c
   414   00FD16  D7FC               	bra	u647
   415   00FD18  2E31               	decfsz	(??_main+1)^0,f,c
   416   00FD1A  D7FA               	bra	u647
   417   00FD1C  D000               	nop2	
   418   00FD1E                     
   419                           ;app.c: 28:     led_turn_off(&led0portd);
   420   00FD1E  0E1F               	movlw	low _led0portd
   421   00FD20  6E29               	movwf	led_turn_off@my_led^0,c
   422   00FD22  0E00               	movlw	high _led0portd
   423   00FD24  6E2A               	movwf	(led_turn_off@my_led+1)^0,c
   424   00FD26  EC0B  F07D         	call	_led_turn_off	;wreg free
   425   00FD2A                     
   426                           ;app.c: 29:     _delay((unsigned long)((200)*(4000000UL/4000.0)));
   427   00FD2A  0E02               	movlw	2
   428   00FD2C  6E31               	movwf	(??_main+1)^0,c
   429   00FD2E  0E04               	movlw	4
   430   00FD30  6E30               	movwf	??_main^0,c
   431   00FD32  0EBA               	movlw	186
   432   00FD34                     u657:
   433   00FD34  2EE8               	decfsz	wreg,f,c
   434   00FD36  D7FE               	bra	u657
   435   00FD38  2E30               	decfsz	??_main^0,f,c
   436   00FD3A  D7FC               	bra	u657
   437   00FD3C  2E31               	decfsz	(??_main+1)^0,f,c
   438   00FD3E  D7FA               	bra	u657
   439   00FD40  D000               	nop2	
   440                           
   441                           ;app.c: 30:         led_turn_on(&led0portd);
   442   00FD42  0E1F               	movlw	low _led0portd
   443   00FD44  6E29               	movwf	led_turn_on@my_led^0,c
   444   00FD46  0E00               	movlw	high _led0portd
   445   00FD48  6E2A               	movwf	(led_turn_on@my_led+1)^0,c
   446   00FD4A  EC3E  F07D         	call	_led_turn_on	;wreg free
   447   00FD4E                     l1281:
   448                           
   449                           ;app.c: 32:         _delay((unsigned long)((500)*(4000000UL/4000.0)));
   450   00FD4E  0E03               	movlw	3
   451   00FD50  6E31               	movwf	(??_main+1)^0,c
   452   00FD52  0E8A               	movlw	138
   453   00FD54  6E30               	movwf	??_main^0,c
   454   00FD56  0E56               	movlw	86
   455   00FD58                     u667:
   456   00FD58  2EE8               	decfsz	wreg,f,c
   457   00FD5A  D7FE               	bra	u667
   458   00FD5C  2E30               	decfsz	??_main^0,f,c
   459   00FD5E  D7FC               	bra	u667
   460   00FD60  2E31               	decfsz	(??_main+1)^0,f,c
   461   00FD62  D7FA               	bra	u667
   462   00FD64                     
   463                           ;app.c: 33:         led_toggle(&led0portd);
   464   00FD64  0E1F               	movlw	low _led0portd
   465   00FD66  6E28               	movwf	led_toggle@my_led^0,c
   466   00FD68  0E00               	movlw	high _led0portd
   467   00FD6A  6E29               	movwf	(led_toggle@my_led+1)^0,c
   468   00FD6C  ECAC  F07D         	call	_led_toggle	;wreg free
   469   00FD70  EFA7  F07E         	goto	l1281
   470   00FD74  EF00  F000         	goto	start
   471   00FD78                     __end_of_main:
   472                           	callstack 0
   473                           
   474 ;; *************** function _led_turn_on *****************
   475 ;; Defined at:
   476 ;;		line 15 in file "ECU_L/LED/led.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  my_led          2    9[COMRAM] PTR const struct .
   479 ;;		 -> led0portd(1), 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  my_pin          1   12[COMRAM] struct .
   482 ;;  ret             1    0        unsigned char 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      unsigned char 
   485 ;; Registers used:
   486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;Total ram usage:        4 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 1
   499 ;; This function calls:
   500 ;;		_gpio_pin_logic_write
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507   00FA7C                     __ptext1:
   508                           	callstack 0
   509   00FA7C                     _led_turn_on:
   510                           	callstack 29
   511   00FA7C                     
   512                           ;ECU_L/LED/led.c: 17:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_high};
   513   00FA7C  C034  F02C         	movff	led_turn_on@F3049,led_turn_on@my_pin
   514   00FA80  C029  FFD9         	movff	led_turn_on@my_led,fsr2l
   515   00FA84  C02A  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   516   00FA88  50DF               	movf	223,w,c
   517   00FA8A  0B07               	andlw	7
   518   00FA8C  6E2B               	movwf	??_led_turn_on^0,c
   519   00FA8E  502C               	movf	led_turn_on@my_pin^0,w,c
   520   00FA90  182B               	xorwf	??_led_turn_on^0,w,c
   521   00FA92  0BF8               	andlw	-8
   522   00FA94  182B               	xorwf	??_led_turn_on^0,w,c
   523   00FA96  6E2C               	movwf	led_turn_on@my_pin^0,c
   524   00FA98  C029  FFD9         	movff	led_turn_on@my_led,fsr2l
   525   00FA9C  C02A  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   526   00FAA0  30DF               	rrcf	223,w,c
   527   00FAA2  32E8               	rrcf	wreg,f,c
   528   00FAA4  32E8               	rrcf	wreg,f,c
   529   00FAA6  0B07               	andlw	7
   530   00FAA8  6E2B               	movwf	??_led_turn_on^0,c
   531   00FAAA  462B               	rlncf	??_led_turn_on^0,f,c
   532   00FAAC  462B               	rlncf	??_led_turn_on^0,f,c
   533   00FAAE  462B               	rlncf	??_led_turn_on^0,f,c
   534   00FAB0  502C               	movf	led_turn_on@my_pin^0,w,c
   535   00FAB2  182B               	xorwf	??_led_turn_on^0,w,c
   536   00FAB4  0BC7               	andlw	-57
   537   00FAB6  182B               	xorwf	??_led_turn_on^0,w,c
   538   00FAB8  6E2C               	movwf	led_turn_on@my_pin^0,c
   539   00FABA  9C2C               	bcf	led_turn_on@my_pin^0,6,c
   540   00FABC  8E2C               	bsf	led_turn_on@my_pin^0,7,c
   541   00FABE                     
   542                           ;ECU_L/LED/led.c: 18:     if(my_led == ((void*)0)){
   543   00FABE  5029               	movf	led_turn_on@my_led^0,w,c
   544   00FAC0  102A               	iorwf	(led_turn_on@my_led+1)^0,w,c
   545   00FAC2  A4D8               	btfss	status,2,c
   546   00FAC4  EF66  F07D         	goto	u571
   547   00FAC8  EF68  F07D         	goto	u570
   548   00FACC                     u571:
   549   00FACC  EF6A  F07D         	goto	l1239
   550   00FAD0                     u570:
   551   00FAD0                     
   552                           ;ECU_L/LED/led.c: 20:     }
   553   00FAD0  EF70  F07D         	goto	l155
   554   00FAD4                     l1239:
   555   00FAD4  0E2C               	movlw	low led_turn_on@my_pin
   556   00FAD6  6E20               	movwf	gpio_pin_logic_write@my_pin^0,c
   557   00FAD8  0E00               	movlw	high led_turn_on@my_pin
   558   00FADA  6E21               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   559   00FADC  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
   560   00FAE0                     l155:
   561   00FAE0  0012               	return		;funcret
   562   00FAE2                     __end_of_led_turn_on:
   563                           	callstack 0
   564                           
   565 ;; *************** function _led_turn_off *****************
   566 ;; Defined at:
   567 ;;		line 26 in file "ECU_L/LED/led.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  my_led          2    9[COMRAM] PTR const struct .
   570 ;;		 -> led0portd(1), 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  my_pin          1   12[COMRAM] struct .
   573 ;;  ret             1    0        unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      unsigned char 
   576 ;; Registers used:
   577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 1
   590 ;; This function calls:
   591 ;;		_gpio_pin_logic_write
   592 ;; This function is called by:
   593 ;;		_main
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text2
   598   00FA16                     __ptext2:
   599                           	callstack 0
   600   00FA16                     _led_turn_off:
   601                           	callstack 29
   602   00FA16                     
   603                           ;ECU_L/LED/led.c: 28:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_low};
   604   00FA16  C033  F02C         	movff	led_turn_off@F3054,led_turn_off@my_pin
   605   00FA1A  C029  FFD9         	movff	led_turn_off@my_led,fsr2l
   606   00FA1E  C02A  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   607   00FA22  50DF               	movf	223,w,c
   608   00FA24  0B07               	andlw	7
   609   00FA26  6E2B               	movwf	??_led_turn_off^0,c
   610   00FA28  502C               	movf	led_turn_off@my_pin^0,w,c
   611   00FA2A  182B               	xorwf	??_led_turn_off^0,w,c
   612   00FA2C  0BF8               	andlw	-8
   613   00FA2E  182B               	xorwf	??_led_turn_off^0,w,c
   614   00FA30  6E2C               	movwf	led_turn_off@my_pin^0,c
   615   00FA32  C029  FFD9         	movff	led_turn_off@my_led,fsr2l
   616   00FA36  C02A  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   617   00FA3A  30DF               	rrcf	223,w,c
   618   00FA3C  32E8               	rrcf	wreg,f,c
   619   00FA3E  32E8               	rrcf	wreg,f,c
   620   00FA40  0B07               	andlw	7
   621   00FA42  6E2B               	movwf	??_led_turn_off^0,c
   622   00FA44  462B               	rlncf	??_led_turn_off^0,f,c
   623   00FA46  462B               	rlncf	??_led_turn_off^0,f,c
   624   00FA48  462B               	rlncf	??_led_turn_off^0,f,c
   625   00FA4A  502C               	movf	led_turn_off@my_pin^0,w,c
   626   00FA4C  182B               	xorwf	??_led_turn_off^0,w,c
   627   00FA4E  0BC7               	andlw	-57
   628   00FA50  182B               	xorwf	??_led_turn_off^0,w,c
   629   00FA52  6E2C               	movwf	led_turn_off@my_pin^0,c
   630   00FA54  9C2C               	bcf	led_turn_off@my_pin^0,6,c
   631   00FA56  9E2C               	bcf	led_turn_off@my_pin^0,7,c
   632   00FA58                     
   633                           ;ECU_L/LED/led.c: 29:     if(my_led == ((void*)0)){
   634   00FA58  5029               	movf	led_turn_off@my_led^0,w,c
   635   00FA5A  102A               	iorwf	(led_turn_off@my_led+1)^0,w,c
   636   00FA5C  A4D8               	btfss	status,2,c
   637   00FA5E  EF33  F07D         	goto	u561
   638   00FA62  EF35  F07D         	goto	u560
   639   00FA66                     u561:
   640   00FA66  EF37  F07D         	goto	l1219
   641   00FA6A                     u560:
   642   00FA6A                     
   643                           ;ECU_L/LED/led.c: 31:     }
   644   00FA6A  EF3D  F07D         	goto	l162
   645   00FA6E                     l1219:
   646   00FA6E  0E2C               	movlw	low led_turn_off@my_pin
   647   00FA70  6E20               	movwf	gpio_pin_logic_write@my_pin^0,c
   648   00FA72  0E00               	movlw	high led_turn_off@my_pin
   649   00FA74  6E21               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   650   00FA76  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
   651   00FA7A                     l162:
   652   00FA7A  0012               	return		;funcret
   653   00FA7C                     __end_of_led_turn_off:
   654                           	callstack 0
   655                           
   656 ;; *************** function _led_toggle *****************
   657 ;; Defined at:
   658 ;;		line 37 in file "ECU_L/LED/led.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  my_led          2    8[COMRAM] PTR const struct .
   661 ;;		 -> led0portd(1), 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  my_pin          1   11[COMRAM] struct .
   664 ;;  ret             1    0        unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      unsigned char 
   667 ;; Registers used:
   668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;Total ram usage:        4 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 1
   681 ;; This function calls:
   682 ;;		_gpio_pin_logic_toggle
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text3
   689   00FB58                     __ptext3:
   690                           	callstack 0
   691   00FB58                     _led_toggle:
   692                           	callstack 29
   693   00FB58                     
   694                           ;ECU_L/LED/led.c: 39:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, my_led->led_status};
   695   00FB58  C032  F02B         	movff	led_toggle@F3059,led_toggle@my_pin
   696   00FB5C  C028  FFD9         	movff	led_toggle@my_led,fsr2l
   697   00FB60  C029  FFDA         	movff	led_toggle@my_led+1,fsr2h
   698   00FB64  50DF               	movf	223,w,c
   699   00FB66  0B07               	andlw	7
   700   00FB68  6E2A               	movwf	??_led_toggle^0,c
   701   00FB6A  502B               	movf	led_toggle@my_pin^0,w,c
   702   00FB6C  182A               	xorwf	??_led_toggle^0,w,c
   703   00FB6E  0BF8               	andlw	-8
   704   00FB70  182A               	xorwf	??_led_toggle^0,w,c
   705   00FB72  6E2B               	movwf	led_toggle@my_pin^0,c
   706   00FB74  C028  FFD9         	movff	led_toggle@my_led,fsr2l
   707   00FB78  C029  FFDA         	movff	led_toggle@my_led+1,fsr2h
   708   00FB7C  30DF               	rrcf	223,w,c
   709   00FB7E  32E8               	rrcf	wreg,f,c
   710   00FB80  32E8               	rrcf	wreg,f,c
   711   00FB82  0B07               	andlw	7
   712   00FB84  6E2A               	movwf	??_led_toggle^0,c
   713   00FB86  462A               	rlncf	??_led_toggle^0,f,c
   714   00FB88  462A               	rlncf	??_led_toggle^0,f,c
   715   00FB8A  462A               	rlncf	??_led_toggle^0,f,c
   716   00FB8C  502B               	movf	led_toggle@my_pin^0,w,c
   717   00FB8E  182A               	xorwf	??_led_toggle^0,w,c
   718   00FB90  0BC7               	andlw	-57
   719   00FB92  182A               	xorwf	??_led_toggle^0,w,c
   720   00FB94  6E2B               	movwf	led_toggle@my_pin^0,c
   721   00FB96  9C2B               	bcf	led_toggle@my_pin^0,6,c
   722   00FB98  C028  FFD9         	movff	led_toggle@my_led,fsr2l
   723   00FB9C  C029  FFDA         	movff	led_toggle@my_led+1,fsr2h
   724   00FBA0  ACDF               	btfss	indf2,6,c
   725   00FBA2  D002               	bra	u585
   726   00FBA4  8E2B               	bsf	led_toggle@my_pin^0,7,c
   727   00FBA6  D001               	bra	u587
   728   00FBA8                     u585:
   729   00FBA8  9E2B               	bcf	led_toggle@my_pin^0,7,c
   730   00FBAA                     u587:
   731   00FBAA                     
   732                           ;ECU_L/LED/led.c: 40:     if(my_led == ((void*)0)){
   733   00FBAA  5028               	movf	led_toggle@my_led^0,w,c
   734   00FBAC  1029               	iorwf	(led_toggle@my_led+1)^0,w,c
   735   00FBAE  A4D8               	btfss	status,2,c
   736   00FBB0  EFDC  F07D         	goto	u591
   737   00FBB4  EFDE  F07D         	goto	u590
   738   00FBB8                     u591:
   739   00FBB8  EFE0  F07D         	goto	l1259
   740   00FBBC                     u590:
   741   00FBBC                     
   742                           ;ECU_L/LED/led.c: 42:     }
   743   00FBBC  EFE6  F07D         	goto	l169
   744   00FBC0                     l1259:
   745   00FBC0  0E2B               	movlw	low led_toggle@my_pin
   746   00FBC2  6E20               	movwf	gpio_pin_logic_toggle@my_pin^0,c
   747   00FBC4  0E00               	movlw	high led_toggle@my_pin
   748   00FBC6  6E21               	movwf	(gpio_pin_logic_toggle@my_pin+1)^0,c
   749   00FBC8  ECE7  F07D         	call	_gpio_pin_logic_toggle	;wreg free
   750   00FBCC                     l169:
   751   00FBCC  0012               	return		;funcret
   752   00FBCE                     __end_of_led_toggle:
   753                           	callstack 0
   754                           
   755 ;; *************** function _gpio_pin_logic_toggle *****************
   756 ;; Defined at:
   757 ;;		line 69 in file "MCAL/GPIO/gpio.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  my_pin          2    0[COMRAM] PTR const struct .
   760 ;;		 -> led_toggle@my_pin(1), 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  ret             1    7[COMRAM] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      unsigned char 
   765 ;; Registers used:
   766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;Total ram usage:        8 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_led_toggle
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text4
   786   00FBCE                     __ptext4:
   787                           	callstack 0
   788   00FBCE                     _gpio_pin_logic_toggle:
   789                           	callstack 29
   790   00FBCE                     
   791                           ;MCAL/GPIO/gpio.c: 70:     Std_ReturnType ret = (Std_ReturnType)0x01;
   792   00FBCE  0E01               	movlw	1
   793   00FBD0  6E27               	movwf	gpio_pin_logic_toggle@ret^0,c
   794   00FBD2                     
   795                           ;MCAL/GPIO/gpio.c: 71:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
   796   00FBD2  5020               	movf	gpio_pin_logic_toggle@my_pin^0,w,c
   797   00FBD4  1021               	iorwf	(gpio_pin_logic_toggle@my_pin+1)^0,w,c
   798   00FBD6  B4D8               	btfsc	status,2,c
   799   00FBD8  EFF0  F07D         	goto	u501
   800   00FBDC  EFF2  F07D         	goto	u500
   801   00FBE0                     u501:
   802   00FBE0  EF03  F07E         	goto	l1163
   803   00FBE4                     u500:
   804   00FBE4  C020  FFD9         	movff	gpio_pin_logic_toggle@my_pin,fsr2l
   805   00FBE8  C021  FFDA         	movff	gpio_pin_logic_toggle@my_pin+1,fsr2h
   806   00FBEC  30DF               	rrcf	223,w,c
   807   00FBEE  32E8               	rrcf	wreg,f,c
   808   00FBF0  32E8               	rrcf	wreg,f,c
   809   00FBF2  0B07               	andlw	7
   810   00FBF4  6E22               	movwf	??_gpio_pin_logic_toggle^0,c
   811   00FBF6  0E07               	movlw	7
   812   00FBF8  6422               	cpfsgt	??_gpio_pin_logic_toggle^0,c
   813   00FBFA  EF01  F07E         	goto	u511
   814   00FBFE  EF03  F07E         	goto	u510
   815   00FC02                     u511:
   816   00FC02  EF07  F07E         	goto	l1165
   817   00FC06                     u510:
   818   00FC06                     l1163:
   819                           
   820                           ;MCAL/GPIO/gpio.c: 72:         ret = (Std_ReturnType)0x00;
   821   00FC06  0E00               	movlw	0
   822   00FC08  6E27               	movwf	gpio_pin_logic_toggle@ret^0,c
   823                           
   824                           ;MCAL/GPIO/gpio.c: 73:     }
   825   00FC0A  EF33  F07E         	goto	l1167
   826   00FC0E                     l1165:
   827                           
   828                           ;MCAL/GPIO/gpio.c: 75:         (*lat_regs[my_pin->port] ^=(1<<my_pin->pin));
   829   00FC0E  C020  FFD9         	movff	gpio_pin_logic_toggle@my_pin,fsr2l
   830   00FC12  C021  FFDA         	movff	gpio_pin_logic_toggle@my_pin+1,fsr2h
   831   00FC16  30DF               	rrcf	223,w,c
   832   00FC18  32E8               	rrcf	wreg,f,c
   833   00FC1A  32E8               	rrcf	wreg,f,c
   834   00FC1C  0B07               	andlw	7
   835   00FC1E  6E22               	movwf	??_gpio_pin_logic_toggle^0,c
   836   00FC20  0E01               	movlw	1
   837   00FC22  6E23               	movwf	(??_gpio_pin_logic_toggle+1)^0,c
   838   00FC24  2A22               	incf	??_gpio_pin_logic_toggle^0,f,c
   839   00FC26  EF17  F07E         	goto	u524
   840   00FC2A                     u525:
   841   00FC2A  90D8               	bcf	status,0,c
   842   00FC2C  3623               	rlcf	(??_gpio_pin_logic_toggle+1)^0,f,c
   843   00FC2E                     u524:
   844   00FC2E  2E22               	decfsz	??_gpio_pin_logic_toggle^0,f,c
   845   00FC30  EF15  F07E         	goto	u525
   846   00FC34  C020  FFD9         	movff	gpio_pin_logic_toggle@my_pin,fsr2l
   847   00FC38  C021  FFDA         	movff	gpio_pin_logic_toggle@my_pin+1,fsr2h
   848   00FC3C  50DF               	movf	223,w,c
   849   00FC3E  0B07               	andlw	7
   850   00FC40  6E24               	movwf	(??_gpio_pin_logic_toggle+2)^0,c
   851   00FC42  5024               	movf	(??_gpio_pin_logic_toggle+2)^0,w,c
   852   00FC44  0D02               	mullw	2
   853   00FC46  0E01               	movlw	low _lat_regs
   854   00FC48  24F3               	addwf	243,w,c
   855   00FC4A  6ED9               	movwf	fsr2l,c
   856   00FC4C  0E00               	movlw	high _lat_regs
   857   00FC4E  20F4               	addwfc	prodh,w,c
   858   00FC50  6EDA               	movwf	fsr2h,c
   859   00FC52  CFDE F025          	movff	postinc2,??_gpio_pin_logic_toggle+3
   860   00FC56  CFDD F026          	movff	postdec2,??_gpio_pin_logic_toggle+4
   861   00FC5A  C025  FFD9         	movff	??_gpio_pin_logic_toggle+3,fsr2l
   862   00FC5E  C026  FFDA         	movff	??_gpio_pin_logic_toggle+4,fsr2h
   863   00FC62  5023               	movf	(??_gpio_pin_logic_toggle+1)^0,w,c
   864   00FC64  1ADF               	xorwf	indf2,f,c
   865   00FC66                     l1167:
   866                           
   867                           ;MCAL/GPIO/gpio.c: 77:     return ret;
   868   00FC66  5027               	movf	gpio_pin_logic_toggle@ret^0,w,c
   869   00FC68  0012               	return		;funcret
   870   00FC6A                     __end_of_gpio_pin_logic_toggle:
   871                           	callstack 0
   872                           
   873 ;; *************** function _led_init *****************
   874 ;; Defined at:
   875 ;;		line 4 in file "ECU_L/LED/led.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  my_led          2   12[COMRAM] PTR const struct .
   878 ;;		 -> led0portd(1), 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  my_pin          1   15[COMRAM] struct .
   881 ;;  ret             1    0        unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      unsigned char 
   884 ;; Registers used:
   885 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:        4 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 2
   898 ;; This function calls:
   899 ;;		_gpio_pin_initialize
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text5
   906   00FAE2                     __ptext5:
   907                           	callstack 0
   908   00FAE2                     _led_init:
   909                           	callstack 28
   910   00FAE2                     
   911                           ;ECU_L/LED/led.c: 6:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio_
      +                          output, my_led->led_status};
   912   00FAE2  C035  F02F         	movff	led_init@F3044,led_init@my_pin
   913   00FAE6  C02C  FFD9         	movff	led_init@my_led,fsr2l
   914   00FAEA  C02D  FFDA         	movff	led_init@my_led+1,fsr2h
   915   00FAEE  50DF               	movf	223,w,c
   916   00FAF0  0B07               	andlw	7
   917   00FAF2  6E2E               	movwf	??_led_init^0,c
   918   00FAF4  502F               	movf	led_init@my_pin^0,w,c
   919   00FAF6  182E               	xorwf	??_led_init^0,w,c
   920   00FAF8  0BF8               	andlw	-8
   921   00FAFA  182E               	xorwf	??_led_init^0,w,c
   922   00FAFC  6E2F               	movwf	led_init@my_pin^0,c
   923   00FAFE  C02C  FFD9         	movff	led_init@my_led,fsr2l
   924   00FB02  C02D  FFDA         	movff	led_init@my_led+1,fsr2h
   925   00FB06  30DF               	rrcf	223,w,c
   926   00FB08  32E8               	rrcf	wreg,f,c
   927   00FB0A  32E8               	rrcf	wreg,f,c
   928   00FB0C  0B07               	andlw	7
   929   00FB0E  6E2E               	movwf	??_led_init^0,c
   930   00FB10  462E               	rlncf	??_led_init^0,f,c
   931   00FB12  462E               	rlncf	??_led_init^0,f,c
   932   00FB14  462E               	rlncf	??_led_init^0,f,c
   933   00FB16  502F               	movf	led_init@my_pin^0,w,c
   934   00FB18  182E               	xorwf	??_led_init^0,w,c
   935   00FB1A  0BC7               	andlw	-57
   936   00FB1C  182E               	xorwf	??_led_init^0,w,c
   937   00FB1E  6E2F               	movwf	led_init@my_pin^0,c
   938   00FB20  9C2F               	bcf	led_init@my_pin^0,6,c
   939   00FB22  C02C  FFD9         	movff	led_init@my_led,fsr2l
   940   00FB26  C02D  FFDA         	movff	led_init@my_led+1,fsr2h
   941   00FB2A  ACDF               	btfss	indf2,6,c
   942   00FB2C  D002               	bra	u545
   943   00FB2E  8E2F               	bsf	led_init@my_pin^0,7,c
   944   00FB30  D001               	bra	u547
   945   00FB32                     u545:
   946   00FB32  9E2F               	bcf	led_init@my_pin^0,7,c
   947   00FB34                     u547:
   948   00FB34                     
   949                           ;ECU_L/LED/led.c: 7:     if(my_led == ((void*)0)){
   950   00FB34  502C               	movf	led_init@my_led^0,w,c
   951   00FB36  102D               	iorwf	(led_init@my_led+1)^0,w,c
   952   00FB38  A4D8               	btfss	status,2,c
   953   00FB3A  EFA1  F07D         	goto	u551
   954   00FB3E  EFA3  F07D         	goto	u550
   955   00FB42                     u551:
   956   00FB42  EFA5  F07D         	goto	l1199
   957   00FB46                     u550:
   958   00FB46                     
   959                           ;ECU_L/LED/led.c: 9:     }
   960   00FB46  EFAB  F07D         	goto	l148
   961   00FB4A                     l1199:
   962   00FB4A  0E2F               	movlw	low led_init@my_pin
   963   00FB4C  6E29               	movwf	gpio_pin_initialize@my_pin^0,c
   964   00FB4E  0E00               	movlw	high led_init@my_pin
   965   00FB50  6E2A               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   966   00FB52  ECEE  F07C         	call	_gpio_pin_initialize	;wreg free
   967   00FB56                     l148:
   968   00FB56  0012               	return		;funcret
   969   00FB58                     __end_of_led_init:
   970                           	callstack 0
   971                           
   972 ;; *************** function _gpio_pin_initialize *****************
   973 ;; Defined at:
   974 ;;		line 79 in file "MCAL/GPIO/gpio.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  my_pin          2    9[COMRAM] PTR const struct .
   977 ;;		 -> led_init@my_pin(1), 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  ret             1   11[COMRAM] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      unsigned char 
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 1
   996 ;; This function calls:
   997 ;;		_gpio_pin_direction_init
   998 ;;		_gpio_pin_logic_write
   999 ;; This function is called by:
  1000 ;;		_led_init
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text6
  1005   00F9DC                     __ptext6:
  1006                           	callstack 0
  1007   00F9DC                     _gpio_pin_initialize:
  1008                           	callstack 28
  1009   00F9DC                     
  1010                           ;MCAL/GPIO/gpio.c: 81:     if (((void*)0) == my_pin){
  1011   00F9DC  5029               	movf	gpio_pin_initialize@my_pin^0,w,c
  1012   00F9DE  102A               	iorwf	(gpio_pin_initialize@my_pin+1)^0,w,c
  1013   00F9E0  A4D8               	btfss	status,2,c
  1014   00F9E2  EFF5  F07C         	goto	u531
  1015   00F9E6  EFF7  F07C         	goto	u530
  1016   00F9EA                     u531:
  1017   00F9EA  EFFB  F07C         	goto	l1177
  1018   00F9EE                     u530:
  1019   00F9EE                     
  1020                           ;MCAL/GPIO/gpio.c: 82:         ret = (Std_ReturnType)0x00;
  1021   00F9EE  0E00               	movlw	0
  1022   00F9F0  6E2B               	movwf	gpio_pin_initialize@ret^0,c
  1023                           
  1024                           ;MCAL/GPIO/gpio.c: 83:     }
  1025   00F9F2  EF09  F07D         	goto	l1179
  1026   00F9F6                     l1177:
  1027                           
  1028                           ;MCAL/GPIO/gpio.c: 85:         ret = gpio_pin_direction_init(my_pin);
  1029   00F9F6  C029  F020         	movff	gpio_pin_initialize@my_pin,gpio_pin_direction_init@my_pin
  1030   00F9FA  C02A  F021         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_direction_init@my_pin+1
  1031   00F9FE  ECBC  F07E         	call	_gpio_pin_direction_init	;wreg free
  1032   00FA02  6E2B               	movwf	gpio_pin_initialize@ret^0,c
  1033                           
  1034                           ;MCAL/GPIO/gpio.c: 86:         ret = gpio_pin_logic_write(my_pin);
  1035   00FA04  C029  F020         	movff	gpio_pin_initialize@my_pin,gpio_pin_logic_write@my_pin
  1036   00FA08  C02A  F021         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_logic_write@my_pin+1
  1037   00FA0C  EC5E  F07F         	call	_gpio_pin_logic_write	;wreg free
  1038   00FA10  6E2B               	movwf	gpio_pin_initialize@ret^0,c
  1039   00FA12                     l1179:
  1040                           
  1041                           ;MCAL/GPIO/gpio.c: 88:     return ret;
  1042   00FA12  502B               	movf	gpio_pin_initialize@ret^0,w,c
  1043   00FA14  0012               	return		;funcret
  1044   00FA16                     __end_of_gpio_pin_initialize:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _gpio_pin_logic_write *****************
  1048 ;; Defined at:
  1049 ;;		line 41 in file "MCAL/GPIO/gpio.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1052 ;;		 -> led_turn_off@my_pin(1), led_turn_on@my_pin(1), led_init@my_pin(1), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  ret             1    8[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      unsigned char 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;Total ram usage:        9 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_gpio_pin_initialize
  1074 ;;		_led_turn_on
  1075 ;;		_led_turn_off
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text7
  1080   00FEBC                     __ptext7:
  1081                           	callstack 0
  1082   00FEBC                     _gpio_pin_logic_write:
  1083                           	callstack 29
  1084   00FEBC                     
  1085                           ;MCAL/GPIO/gpio.c: 42:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1086   00FEBC  0E01               	movlw	1
  1087   00FEBE  6E28               	movwf	gpio_pin_logic_write@ret^0,c
  1088   00FEC0                     
  1089                           ;MCAL/GPIO/gpio.c: 43:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
  1090   00FEC0  5020               	movf	gpio_pin_logic_write@my_pin^0,w,c
  1091   00FEC2  1021               	iorwf	(gpio_pin_logic_write@my_pin+1)^0,w,c
  1092   00FEC4  B4D8               	btfsc	status,2,c
  1093   00FEC6  EF67  F07F         	goto	u441
  1094   00FECA  EF69  F07F         	goto	u440
  1095   00FECE                     u441:
  1096   00FECE  EF7A  F07F         	goto	l1139
  1097   00FED2                     u440:
  1098   00FED2  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1099   00FED6  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1100   00FEDA  30DF               	rrcf	223,w,c
  1101   00FEDC  32E8               	rrcf	wreg,f,c
  1102   00FEDE  32E8               	rrcf	wreg,f,c
  1103   00FEE0  0B07               	andlw	7
  1104   00FEE2  6E22               	movwf	??_gpio_pin_logic_write^0,c
  1105   00FEE4  0E07               	movlw	7
  1106   00FEE6  6422               	cpfsgt	??_gpio_pin_logic_write^0,c
  1107   00FEE8  EF78  F07F         	goto	u451
  1108   00FEEC  EF7A  F07F         	goto	u450
  1109   00FEF0                     u451:
  1110   00FEF0  EFDD  F07F         	goto	l1147
  1111   00FEF4                     u450:
  1112   00FEF4                     l1139:
  1113                           
  1114                           ;MCAL/GPIO/gpio.c: 44:         ret = (Std_ReturnType)0x00;
  1115   00FEF4  0E00               	movlw	0
  1116   00FEF6  6E28               	movwf	gpio_pin_logic_write@ret^0,c
  1117                           
  1118                           ;MCAL/GPIO/gpio.c: 45:     }
  1119   00FEF8  EFFE  F07F         	goto	l1149
  1120   00FEFC                     l1141:
  1121                           
  1122                           ;MCAL/GPIO/gpio.c: 49:                 (*lat_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1123   00FEFC  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1124   00FF00  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1125   00FF04  30DF               	rrcf	223,w,c
  1126   00FF06  32E8               	rrcf	wreg,f,c
  1127   00FF08  32E8               	rrcf	wreg,f,c
  1128   00FF0A  0B07               	andlw	7
  1129   00FF0C  6E22               	movwf	??_gpio_pin_logic_write^0,c
  1130   00FF0E  0E01               	movlw	1
  1131   00FF10  6E23               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1132   00FF12  2A22               	incf	??_gpio_pin_logic_write^0,f,c
  1133   00FF14  EF8E  F07F         	goto	u464
  1134   00FF18                     u465:
  1135   00FF18  90D8               	bcf	status,0,c
  1136   00FF1A  3623               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1137   00FF1C                     u464:
  1138   00FF1C  2E22               	decfsz	??_gpio_pin_logic_write^0,f,c
  1139   00FF1E  EF8C  F07F         	goto	u465
  1140   00FF22  5023               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1141   00FF24  0AFF               	xorlw	255
  1142   00FF26  6E24               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1143   00FF28  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1144   00FF2C  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1145   00FF30  50DF               	movf	223,w,c
  1146   00FF32  0B07               	andlw	7
  1147   00FF34  6E25               	movwf	(??_gpio_pin_logic_write+3)^0,c
  1148   00FF36  5025               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  1149   00FF38  0D02               	mullw	2
  1150   00FF3A  0E01               	movlw	low _lat_regs
  1151   00FF3C  24F3               	addwf	243,w,c
  1152   00FF3E  6ED9               	movwf	fsr2l,c
  1153   00FF40  0E00               	movlw	high _lat_regs
  1154   00FF42  20F4               	addwfc	prodh,w,c
  1155   00FF44  6EDA               	movwf	fsr2h,c
  1156   00FF46  CFDE F026          	movff	postinc2,??_gpio_pin_logic_write+4
  1157   00FF4A  CFDD F027          	movff	postdec2,??_gpio_pin_logic_write+5
  1158   00FF4E  C026  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  1159   00FF52  C027  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  1160   00FF56  5024               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1161   00FF58  16DF               	andwf	indf2,f,c
  1162                           
  1163                           ;MCAL/GPIO/gpio.c: 50:                 break;
  1164   00FF5A  EFFE  F07F         	goto	l1149
  1165   00FF5E                     l1143:
  1166                           
  1167                           ;MCAL/GPIO/gpio.c: 52:                 (*lat_regs[my_pin->port] |=(1<<my_pin->pin));
  1168   00FF5E  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1169   00FF62  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1170   00FF66  30DF               	rrcf	223,w,c
  1171   00FF68  32E8               	rrcf	wreg,f,c
  1172   00FF6A  32E8               	rrcf	wreg,f,c
  1173   00FF6C  0B07               	andlw	7
  1174   00FF6E  6E22               	movwf	??_gpio_pin_logic_write^0,c
  1175   00FF70  0E01               	movlw	1
  1176   00FF72  6E23               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1177   00FF74  2A22               	incf	??_gpio_pin_logic_write^0,f,c
  1178   00FF76  EFBF  F07F         	goto	u474
  1179   00FF7A                     u475:
  1180   00FF7A  90D8               	bcf	status,0,c
  1181   00FF7C  3623               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1182   00FF7E                     u474:
  1183   00FF7E  2E22               	decfsz	??_gpio_pin_logic_write^0,f,c
  1184   00FF80  EFBD  F07F         	goto	u475
  1185   00FF84  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1186   00FF88  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1187   00FF8C  50DF               	movf	223,w,c
  1188   00FF8E  0B07               	andlw	7
  1189   00FF90  6E24               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1190   00FF92  5024               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1191   00FF94  0D02               	mullw	2
  1192   00FF96  0E01               	movlw	low _lat_regs
  1193   00FF98  24F3               	addwf	243,w,c
  1194   00FF9A  6ED9               	movwf	fsr2l,c
  1195   00FF9C  0E00               	movlw	high _lat_regs
  1196   00FF9E  20F4               	addwfc	prodh,w,c
  1197   00FFA0  6EDA               	movwf	fsr2h,c
  1198   00FFA2  CFDE F025          	movff	postinc2,??_gpio_pin_logic_write+3
  1199   00FFA6  CFDD F026          	movff	postdec2,??_gpio_pin_logic_write+4
  1200   00FFAA  C025  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  1201   00FFAE  C026  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  1202   00FFB2  5023               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1203   00FFB4  12DF               	iorwf	indf2,f,c
  1204                           
  1205                           ;MCAL/GPIO/gpio.c: 53:                 break;
  1206   00FFB6  EFFE  F07F         	goto	l1149
  1207   00FFBA                     l1147:
  1208   00FFBA  C020  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1209   00FFBE  C021  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1210   00FFC2  BEDF               	btfsc	indf2,7,c
  1211   00FFC4  EFE6  F07F         	goto	u481
  1212   00FFC8  EFE9  F07F         	goto	u480
  1213   00FFCC                     u481:
  1214   00FFCC  0E01               	movlw	1
  1215   00FFCE  EFEA  F07F         	goto	u490
  1216   00FFD2                     u480:
  1217   00FFD2  0E00               	movlw	0
  1218   00FFD4                     u490:
  1219   00FFD4  6E22               	movwf	??_gpio_pin_logic_write^0,c
  1220   00FFD6  6A23               	clrf	(??_gpio_pin_logic_write+1)^0,c
  1221                           
  1222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 1, Range of values is 0 to 0
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte            4     3 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229   00FFD8  5023               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1230   00FFDA  0A00               	xorlw	0	; case 0
  1231   00FFDC  B4D8               	btfsc	status,2,c
  1232   00FFDE  EFF3  F07F         	goto	l1293
  1233   00FFE2  EF7A  F07F         	goto	l1139
  1234   00FFE6                     l1293:
  1235                           
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 2, Range of values is 0 to 1
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte            7     4 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242   00FFE6  5022               	movf	??_gpio_pin_logic_write^0,w,c
  1243   00FFE8  0A00               	xorlw	0	; case 0
  1244   00FFEA  B4D8               	btfsc	status,2,c
  1245   00FFEC  EF7E  F07F         	goto	l1141
  1246   00FFF0  0A01               	xorlw	1	; case 1
  1247   00FFF2  B4D8               	btfsc	status,2,c
  1248   00FFF4  EFAF  F07F         	goto	l1143
  1249   00FFF8  EF7A  F07F         	goto	l1139
  1250   00FFFC                     l1149:
  1251                           
  1252                           ;MCAL/GPIO/gpio.c: 57:     return ret;
  1253   00FFFC  5028               	movf	gpio_pin_logic_write@ret^0,w,c
  1254   00FFFE  0012               	return		;funcret
  1255   010000                     __end_of_gpio_pin_logic_write:
  1256                           	callstack 0
  1257                           
  1258 ;; *************** function _gpio_pin_direction_init *****************
  1259 ;; Defined at:
  1260 ;;		line 13 in file "MCAL/GPIO/gpio.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1263 ;;		 -> led_init@my_pin(1), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  ret             1    8[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      unsigned char 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;Total ram usage:        9 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_gpio_pin_initialize
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text8
  1289   00FD78                     __ptext8:
  1290                           	callstack 0
  1291   00FD78                     _gpio_pin_direction_init:
  1292                           	callstack 28
  1293   00FD78                     
  1294                           ;MCAL/GPIO/gpio.c: 14:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1295   00FD78  0E01               	movlw	1
  1296   00FD7A  6E28               	movwf	gpio_pin_direction_init@ret^0,c
  1297   00FD7C                     
  1298                           ;MCAL/GPIO/gpio.c: 15:     if(((void*)0) == my_pin || my_pin->pin > 7){
  1299   00FD7C  5020               	movf	gpio_pin_direction_init@my_pin^0,w,c
  1300   00FD7E  1021               	iorwf	(gpio_pin_direction_init@my_pin+1)^0,w,c
  1301   00FD80  B4D8               	btfsc	status,2,c
  1302   00FD82  EFC5  F07E         	goto	u381
  1303   00FD86  EFC7  F07E         	goto	u380
  1304   00FD8A                     u381:
  1305   00FD8A  EFD8  F07E         	goto	l1115
  1306   00FD8E                     u380:
  1307   00FD8E  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1308   00FD92  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1309   00FD96  30DF               	rrcf	223,w,c
  1310   00FD98  32E8               	rrcf	wreg,f,c
  1311   00FD9A  32E8               	rrcf	wreg,f,c
  1312   00FD9C  0B07               	andlw	7
  1313   00FD9E  6E22               	movwf	??_gpio_pin_direction_init^0,c
  1314   00FDA0  0E07               	movlw	7
  1315   00FDA2  6422               	cpfsgt	??_gpio_pin_direction_init^0,c
  1316   00FDA4  EFD6  F07E         	goto	u391
  1317   00FDA8  EFD8  F07E         	goto	u390
  1318   00FDAC                     u391:
  1319   00FDAC  EF3B  F07F         	goto	l1123
  1320   00FDB0                     u390:
  1321   00FDB0                     l1115:
  1322                           
  1323                           ;MCAL/GPIO/gpio.c: 16:         ret = (Std_ReturnType)0x00;
  1324   00FDB0  0E00               	movlw	0
  1325   00FDB2  6E28               	movwf	gpio_pin_direction_init@ret^0,c
  1326                           
  1327                           ;MCAL/GPIO/gpio.c: 17:     }
  1328   00FDB4  EF5C  F07F         	goto	l1125
  1329   00FDB8                     l1117:
  1330                           
  1331                           ;MCAL/GPIO/gpio.c: 21:                 (*tris_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1332   00FDB8  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1333   00FDBC  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1334   00FDC0  30DF               	rrcf	223,w,c
  1335   00FDC2  32E8               	rrcf	wreg,f,c
  1336   00FDC4  32E8               	rrcf	wreg,f,c
  1337   00FDC6  0B07               	andlw	7
  1338   00FDC8  6E22               	movwf	??_gpio_pin_direction_init^0,c
  1339   00FDCA  0E01               	movlw	1
  1340   00FDCC  6E23               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1341   00FDCE  2A22               	incf	??_gpio_pin_direction_init^0,f,c
  1342   00FDD0  EFEC  F07E         	goto	u404
  1343   00FDD4                     u405:
  1344   00FDD4  90D8               	bcf	status,0,c
  1345   00FDD6  3623               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1346   00FDD8                     u404:
  1347   00FDD8  2E22               	decfsz	??_gpio_pin_direction_init^0,f,c
  1348   00FDDA  EFEA  F07E         	goto	u405
  1349   00FDDE  5023               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1350   00FDE0  0AFF               	xorlw	255
  1351   00FDE2  6E24               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1352   00FDE4  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1353   00FDE8  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1354   00FDEC  50DF               	movf	223,w,c
  1355   00FDEE  0B07               	andlw	7
  1356   00FDF0  6E25               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1357   00FDF2  5025               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1358   00FDF4  0D02               	mullw	2
  1359   00FDF6  0E15               	movlw	low _tris_regs
  1360   00FDF8  24F3               	addwf	243,w,c
  1361   00FDFA  6ED9               	movwf	fsr2l,c
  1362   00FDFC  0E00               	movlw	high _tris_regs
  1363   00FDFE  20F4               	addwfc	prodh,w,c
  1364   00FE00  6EDA               	movwf	fsr2h,c
  1365   00FE02  CFDE F026          	movff	postinc2,??_gpio_pin_direction_init+4
  1366   00FE06  CFDD F027          	movff	postdec2,??_gpio_pin_direction_init+5
  1367   00FE0A  C026  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1368   00FE0E  C027  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1369   00FE12  5024               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1370   00FE14  16DF               	andwf	indf2,f,c
  1371                           
  1372                           ;MCAL/GPIO/gpio.c: 22:                 break;
  1373   00FE16  EF5C  F07F         	goto	l1125
  1374   00FE1A                     l1119:
  1375                           
  1376                           ;MCAL/GPIO/gpio.c: 24:                 (*tris_regs[my_pin->port] |=(1<<my_pin->pin));
  1377   00FE1A  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1378   00FE1E  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1379   00FE22  30DF               	rrcf	223,w,c
  1380   00FE24  32E8               	rrcf	wreg,f,c
  1381   00FE26  32E8               	rrcf	wreg,f,c
  1382   00FE28  0B07               	andlw	7
  1383   00FE2A  6E22               	movwf	??_gpio_pin_direction_init^0,c
  1384   00FE2C  0E01               	movlw	1
  1385   00FE2E  6E23               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1386   00FE30  2A22               	incf	??_gpio_pin_direction_init^0,f,c
  1387   00FE32  EF1D  F07F         	goto	u414
  1388   00FE36                     u415:
  1389   00FE36  90D8               	bcf	status,0,c
  1390   00FE38  3623               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1391   00FE3A                     u414:
  1392   00FE3A  2E22               	decfsz	??_gpio_pin_direction_init^0,f,c
  1393   00FE3C  EF1B  F07F         	goto	u415
  1394   00FE40  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1395   00FE44  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1396   00FE48  50DF               	movf	223,w,c
  1397   00FE4A  0B07               	andlw	7
  1398   00FE4C  6E24               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1399   00FE4E  5024               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1400   00FE50  0D02               	mullw	2
  1401   00FE52  0E15               	movlw	low _tris_regs
  1402   00FE54  24F3               	addwf	243,w,c
  1403   00FE56  6ED9               	movwf	fsr2l,c
  1404   00FE58  0E00               	movlw	high _tris_regs
  1405   00FE5A  20F4               	addwfc	prodh,w,c
  1406   00FE5C  6EDA               	movwf	fsr2h,c
  1407   00FE5E  CFDE F025          	movff	postinc2,??_gpio_pin_direction_init+3
  1408   00FE62  CFDD F026          	movff	postdec2,??_gpio_pin_direction_init+4
  1409   00FE66  C025  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1410   00FE6A  C026  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1411   00FE6E  5023               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1412   00FE70  12DF               	iorwf	indf2,f,c
  1413                           
  1414                           ;MCAL/GPIO/gpio.c: 25:                 break;
  1415   00FE72  EF5C  F07F         	goto	l1125
  1416   00FE76                     l1123:
  1417   00FE76  C020  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1418   00FE7A  C021  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1419   00FE7E  BCDF               	btfsc	indf2,6,c
  1420   00FE80  EF44  F07F         	goto	u421
  1421   00FE84  EF47  F07F         	goto	u420
  1422   00FE88                     u421:
  1423   00FE88  0E01               	movlw	1
  1424   00FE8A  EF48  F07F         	goto	u430
  1425   00FE8E                     u420:
  1426   00FE8E  0E00               	movlw	0
  1427   00FE90                     u430:
  1428   00FE90  6E22               	movwf	??_gpio_pin_direction_init^0,c
  1429   00FE92  6A23               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1430                           
  1431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1432                           ; Switch size 1, requested type "simple"
  1433                           ; Number of cases is 1, Range of values is 0 to 0
  1434                           ; switch strategies available:
  1435                           ; Name         Instructions Cycles
  1436                           ; simple_byte            4     3 (average)
  1437                           ;	Chosen strategy is simple_byte
  1438   00FE94  5023               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1439   00FE96  0A00               	xorlw	0	; case 0
  1440   00FE98  B4D8               	btfsc	status,2,c
  1441   00FE9A  EF51  F07F         	goto	l1295
  1442   00FE9E  EFD8  F07E         	goto	l1115
  1443   00FEA2                     l1295:
  1444                           
  1445                           ; Switch size 1, requested type "simple"
  1446                           ; Number of cases is 2, Range of values is 0 to 1
  1447                           ; switch strategies available:
  1448                           ; Name         Instructions Cycles
  1449                           ; simple_byte            7     4 (average)
  1450                           ;	Chosen strategy is simple_byte
  1451   00FEA2  5022               	movf	??_gpio_pin_direction_init^0,w,c
  1452   00FEA4  0A00               	xorlw	0	; case 0
  1453   00FEA6  B4D8               	btfsc	status,2,c
  1454   00FEA8  EFDC  F07E         	goto	l1117
  1455   00FEAC  0A01               	xorlw	1	; case 1
  1456   00FEAE  B4D8               	btfsc	status,2,c
  1457   00FEB0  EF0D  F07F         	goto	l1119
  1458   00FEB4  EFD8  F07E         	goto	l1115
  1459   00FEB8                     l1125:
  1460                           
  1461                           ;MCAL/GPIO/gpio.c: 29:     return ret;
  1462   00FEB8  5028               	movf	gpio_pin_direction_init@ret^0,w,c
  1463   00FEBA  0012               	return		;funcret
  1464   00FEBC                     __end_of_gpio_pin_direction_init:
  1465                           	callstack 0
  1466   000000                     
  1467                           	psect	rparam
  1468   000000                     
  1469                           	psect	idloc
  1470                           
  1471                           ;Config register IDLOC0 @ 0x200000
  1472                           ;	unspecified, using default values
  1473   200000                     	org	2097152
  1474   200000  FF                 	db	255
  1475                           
  1476                           ;Config register IDLOC1 @ 0x200001
  1477                           ;	unspecified, using default values
  1478   200001                     	org	2097153
  1479   200001  FF                 	db	255
  1480                           
  1481                           ;Config register IDLOC2 @ 0x200002
  1482                           ;	unspecified, using default values
  1483   200002                     	org	2097154
  1484   200002  FF                 	db	255
  1485                           
  1486                           ;Config register IDLOC3 @ 0x200003
  1487                           ;	unspecified, using default values
  1488   200003                     	org	2097155
  1489   200003  FF                 	db	255
  1490                           
  1491                           ;Config register IDLOC4 @ 0x200004
  1492                           ;	unspecified, using default values
  1493   200004                     	org	2097156
  1494   200004  FF                 	db	255
  1495                           
  1496                           ;Config register IDLOC5 @ 0x200005
  1497                           ;	unspecified, using default values
  1498   200005                     	org	2097157
  1499   200005  FF                 	db	255
  1500                           
  1501                           ;Config register IDLOC6 @ 0x200006
  1502                           ;	unspecified, using default values
  1503   200006                     	org	2097158
  1504   200006  FF                 	db	255
  1505                           
  1506                           ;Config register IDLOC7 @ 0x200007
  1507                           ;	unspecified, using default values
  1508   200007                     	org	2097159
  1509   200007  FF                 	db	255
  1510                           
  1511                           	psect	config
  1512                           
  1513                           ; Padding undefined space
  1514   300000                     	org	3145728
  1515   300000  FF                 	db	255
  1516                           
  1517                           ;Config register CONFIG1H @ 0x300001
  1518                           ;	unspecified, using default values
  1519                           ;	Oscillator Selection bits
  1520                           ;	OSC = 0x7, unprogrammed default
  1521                           ;	Fail-Safe Clock Monitor Enable bit
  1522                           ;	FCMEN = 0x0, unprogrammed default
  1523                           ;	Internal/External Oscillator Switchover bit
  1524                           ;	IESO = 0x0, unprogrammed default
  1525   300001                     	org	3145729
  1526   300001  07                 	db	7
  1527                           
  1528                           ;Config register CONFIG2L @ 0x300002
  1529                           ;	unspecified, using default values
  1530                           ;	Power-up Timer Enable bit
  1531                           ;	PWRT = 0x1, unprogrammed default
  1532                           ;	Brown-out Reset Enable bits
  1533                           ;	BOREN = 0x3, unprogrammed default
  1534                           ;	Brown Out Reset Voltage bits
  1535                           ;	BORV = 0x3, unprogrammed default
  1536   300002                     	org	3145730
  1537   300002  1F                 	db	31
  1538                           
  1539                           ;Config register CONFIG2H @ 0x300003
  1540                           ;	unspecified, using default values
  1541                           ;	Watchdog Timer Enable bit
  1542                           ;	WDT = 0x1, unprogrammed default
  1543                           ;	Watchdog Timer Postscale Select bits
  1544                           ;	WDTPS = 0xF, unprogrammed default
  1545   300003                     	org	3145731
  1546   300003  1F                 	db	31
  1547                           
  1548                           ; Padding undefined space
  1549   300004                     	org	3145732
  1550   300004  FF                 	db	255
  1551                           
  1552                           ;Config register CONFIG3H @ 0x300005
  1553                           ;	unspecified, using default values
  1554                           ;	CCP2 MUX bit
  1555                           ;	CCP2MX = 0x1, unprogrammed default
  1556                           ;	PORTB A/D Enable bit
  1557                           ;	PBADEN = 0x1, unprogrammed default
  1558                           ;	Low-Power Timer1 Oscillator Enable bit
  1559                           ;	LPT1OSC = 0x0, unprogrammed default
  1560                           ;	MCLR Pin Enable bit
  1561                           ;	MCLRE = 0x1, unprogrammed default
  1562   300005                     	org	3145733
  1563   300005  83                 	db	131
  1564                           
  1565                           ;Config register CONFIG4L @ 0x300006
  1566                           ;	unspecified, using default values
  1567                           ;	Stack Full/Underflow Reset Enable bit
  1568                           ;	STVREN = 0x1, unprogrammed default
  1569                           ;	Single-Supply ICSP Enable bit
  1570                           ;	LVP = 0x1, unprogrammed default
  1571                           ;	Extended Instruction Set Enable bit
  1572                           ;	XINST = 0x0, unprogrammed default
  1573                           ;	Background Debugger Enable bit
  1574                           ;	DEBUG = 0x1, unprogrammed default
  1575   300006                     	org	3145734
  1576   300006  85                 	db	133
  1577                           
  1578                           ; Padding undefined space
  1579   300007                     	org	3145735
  1580   300007  FF                 	db	255
  1581                           
  1582                           ;Config register CONFIG5L @ 0x300008
  1583                           ;	unspecified, using default values
  1584                           ;	Code Protection bit
  1585                           ;	CP0 = 0x1, unprogrammed default
  1586                           ;	Code Protection bit
  1587                           ;	CP1 = 0x1, unprogrammed default
  1588                           ;	Code Protection bit
  1589                           ;	CP2 = 0x1, unprogrammed default
  1590                           ;	Code Protection bit
  1591                           ;	CP3 = 0x1, unprogrammed default
  1592   300008                     	org	3145736
  1593   300008  0F                 	db	15
  1594                           
  1595                           ;Config register CONFIG5H @ 0x300009
  1596                           ;	unspecified, using default values
  1597                           ;	Boot Block Code Protection bit
  1598                           ;	CPB = 0x1, unprogrammed default
  1599                           ;	Data EEPROM Code Protection bit
  1600                           ;	CPD = 0x1, unprogrammed default
  1601   300009                     	org	3145737
  1602   300009  C0                 	db	192
  1603                           
  1604                           ;Config register CONFIG6L @ 0x30000A
  1605                           ;	unspecified, using default values
  1606                           ;	Write Protection bit
  1607                           ;	WRT0 = 0x1, unprogrammed default
  1608                           ;	Write Protection bit
  1609                           ;	WRT1 = 0x1, unprogrammed default
  1610                           ;	Write Protection bit
  1611                           ;	WRT2 = 0x1, unprogrammed default
  1612                           ;	Write Protection bit
  1613                           ;	WRT3 = 0x1, unprogrammed default
  1614   30000A                     	org	3145738
  1615   30000A  0F                 	db	15
  1616                           
  1617                           ;Config register CONFIG6H @ 0x30000B
  1618                           ;	unspecified, using default values
  1619                           ;	Configuration Register Write Protection bit
  1620                           ;	WRTC = 0x1, unprogrammed default
  1621                           ;	Boot Block Write Protection bit
  1622                           ;	WRTB = 0x1, unprogrammed default
  1623                           ;	Data EEPROM Write Protection bit
  1624                           ;	WRTD = 0x1, unprogrammed default
  1625   30000B                     	org	3145739
  1626   30000B  E0                 	db	224
  1627                           
  1628                           ;Config register CONFIG7L @ 0x30000C
  1629                           ;	unspecified, using default values
  1630                           ;	Table Read Protection bit
  1631                           ;	EBTR0 = 0x1, unprogrammed default
  1632                           ;	Table Read Protection bit
  1633                           ;	EBTR1 = 0x1, unprogrammed default
  1634                           ;	Table Read Protection bit
  1635                           ;	EBTR2 = 0x1, unprogrammed default
  1636                           ;	Table Read Protection bit
  1637                           ;	EBTR3 = 0x1, unprogrammed default
  1638   30000C                     	org	3145740
  1639   30000C  0F                 	db	15
  1640                           
  1641                           ;Config register CONFIG7H @ 0x30000D
  1642                           ;	unspecified, using default values
  1643                           ;	Boot Block Table Read Protection bit
  1644                           ;	EBTRB = 0x1, unprogrammed default
  1645   30000D                     	org	3145741
  1646   30000D  40                 	db	64
  1647                           tosu	equ	0xFFF
  1648                           tosh	equ	0xFFE
  1649                           tosl	equ	0xFFD
  1650                           stkptr	equ	0xFFC
  1651                           pclatu	equ	0xFFB
  1652                           pclath	equ	0xFFA
  1653                           pcl	equ	0xFF9
  1654                           tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           prodh	equ	0xFF4
  1659                           prodl	equ	0xFF3
  1660                           indf0	equ	0xFEF
  1661                           postinc0	equ	0xFEE
  1662                           postdec0	equ	0xFED
  1663                           preinc0	equ	0xFEC
  1664                           plusw0	equ	0xFEB
  1665                           fsr0h	equ	0xFEA
  1666                           fsr0l	equ	0xFE9
  1667                           wreg	equ	0xFE8
  1668                           indf1	equ	0xFE7
  1669                           postinc1	equ	0xFE6
  1670                           postdec1	equ	0xFE5
  1671                           preinc1	equ	0xFE4
  1672                           plusw1	equ	0xFE3
  1673                           fsr1h	equ	0xFE2
  1674                           fsr1l	equ	0xFE1
  1675                           bsr	equ	0xFE0
  1676                           indf2	equ	0xFDF
  1677                           postinc2	equ	0xFDE
  1678                           postdec2	equ	0xFDD
  1679                           preinc2	equ	0xFDC
  1680                           plusw2	equ	0xFDB
  1681                           fsr2h	equ	0xFDA
  1682                           fsr2l	equ	0xFD9
  1683                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        31
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     18      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    led_toggle@my_led	PTR const struct . size(2) Largest target is 1
		 -> led0portd(COMRAM[1]), 

    led_turn_off@my_led	PTR const struct . size(2) Largest target is 1
		 -> led0portd(COMRAM[1]), 

    led_turn_on@my_led	PTR const struct . size(2) Largest target is 1
		 -> led0portd(COMRAM[1]), 

    led_init@my_led	PTR const struct . size(2) Largest target is 1
		 -> led0portd(COMRAM[1]), 

    gpio_pin_initialize@my_pin	PTR const struct . size(2) Largest target is 1
		 -> led_init@my_pin(COMRAM[1]), 

    gpio_pin_logic_toggle@my_pin	PTR const struct . size(2) Largest target is 1
		 -> led_toggle@my_pin(COMRAM[1]), 

    gpio_pin_logic_write@my_pin	PTR const struct . size(2) Largest target is 1
		 -> led_turn_off@my_pin(COMRAM[1]), led_turn_on@my_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_direction_init@my_pin	PTR const struct . size(2) Largest target is 1
		 -> led_init@my_pin(COMRAM[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_led_init
    _led_turn_on->_gpio_pin_logic_write
    _led_turn_off->_gpio_pin_logic_write
    _led_toggle->_gpio_pin_logic_toggle
    _led_init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_direction_init
    _gpio_pin_initialize->_gpio_pin_logic_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2919
                                             16 COMRAM     2     2      0
                           _led_init
                         _led_toggle
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2     591
                                              9 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2     743
                                              9 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           5     3      2     391
                                              8 COMRAM     4     2      2
              _gpio_pin_logic_toggle
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_toggle                                8     6      2     188
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _led_init                                             5     3      2    1194
                                             12 COMRAM     4     2      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     1      2     830
                                              9 COMRAM     3     1      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_write                                 9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     255
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_init
     _gpio_pin_initialize
       _gpio_pin_direction_init
       _gpio_pin_logic_write
   _led_toggle
     _gpio_pin_logic_toggle
   _led_turn_off
     _gpio_pin_logic_write
   _led_turn_on
     _gpio_pin_logic_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     12      35       1       41.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      39        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 04 01:20:00 2023

                             l48 FEBA                               l81 FC68  
                             l67 FFFE                               l86 FA14  
                            l162 FA7A                              l155 FAE0  
                            l148 FB56                              l169 FBCC  
                            u420 FE8E                              u404 FDD8  
                            u500 FBE4                              u421 FE88  
                            u405 FDD4                              u501 FBE0  
                            u430 FE90                              u414 FE3A  
                            u510 FC06                              u415 FE36  
                            u511 FC02                              u440 FED2  
                            u441 FECE                              u450 FEF4  
                            u530 F9EE                              u451 FEF0  
                            u531 F9EA                              u380 FD8E  
                            u524 FC2E                              u381 FD8A  
                            u525 FC2A                              u390 FDB0  
                            u550 FB46                              u391 FDAC  
                            u551 FB42                              u607 FC80  
                            u480 FFD2                              u464 FF1C  
                            u560 FA6A                              u481 FFCC  
                            u465 FF18                              u545 FB32  
                            u561 FA66                              u617 FCA4  
                            u490 FFD4                              u474 FF7E  
                            u570 FAD0                              u475 FF7A  
                            u547 FB34                              u571 FACC  
                            u627 FCC8                              u637 FCEC  
                            u590 FBBC                              u591 FBB8  
                            u647 FD10                              u585 FBA8  
                            u657 FD34                              u587 FBAA  
                            u667 FD58           ??_gpio_pin_logic_write 0022  
                            prod 000FF3                              wreg 000FE8  
     gpio_pin_logic_write@my_pin 0020                     ?_led_turn_on 0029  
                           l1111 FD7C                             l1113 FD8E  
                           l1123 FE76                             l1115 FDB0  
                           l1211 FA54                             l1203 FA16  
                           l1117 FDB8                             l1125 FEB8  
                           l1109 FD78                             l1141 FEFC  
                           l1133 FEBC                             l1213 FA56  
                           l1205 FA16                             l1119 FE1A  
                           l1143 FF5E                             l1135 FEC0  
                           l1215 FA58                             l1207 FA1A  
                           l1231 FABA                             l1223 FA7C  
                           l1137 FED2                             l1161 FBE4  
                           l1217 FA6A                             l1209 FA32  
                           l1233 FABC                             l1225 FA7C  
                           l1147 FFBA                             l1139 FEF4  
                           l1171 F9DC                             l1163 FC06  
                           l1251 FB96                             l1243 FB58  
                           l1219 FA6E                             l1235 FABE  
                           l1227 FA80                             l1149 FFFC  
                           l1173 F9DC                             l1165 FC0E  
                           l1157 FBCE                             l1253 FB98  
                           l1245 FB58                             l1237 FAD0  
                           l1229 FA98                             l1175 F9EE  
                           l1191 FB20                             l1183 FAE2  
                           l1167 FC66                             l1159 FBD2  
                           l1255 FBAA                             l1247 FB5C  
                           l1239 FAD4                             l1271 FCBE  
                           l1263 FC6A                             l1177 F9F6  
                           l1193 FB22                             l1185 FAE2  
                           l1257 FBBC                             l1249 FB74  
                           l1281 FD4E                             l1273 FCE2  
                           l1265 FC76                             l1179 FA12  
                           l1195 FB34                             l1187 FAE6  
                           l1259 FBC0                             l1283 FD64  
                           l1275 FCFA                             l1267 FC8E  
                           l1293 FFE6                             l1197 FB46  
                           l1189 FAFE                             l1277 FD1E  
                           l1269 FCB2                             l1295 FEA2  
                           l1199 FB4A                             l1279 FD2A  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _LATD 000F8C  
                           _LATE 000F8D          ??_gpio_pin_logic_toggle 0022  
                           _main FC6A                             fsr2h 000FDA  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9         ?_gpio_pin_direction_init 0020  
                           prodl 000FF3                             start 0000  
                  ?_led_turn_off 0029                     ___param_bank 000000  
                          ?_main 0020                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            tablat 000FF5  
                          status 000FD8                   ??_led_turn_off 002B  
                __initialization F9AA                     __end_of_main FD78  
                         ??_main 0030                    __activetblptr 000002  
               led_turn_on@F3049 0034                 __end_of_led_init FB58  
                         isa$std 000001                    led_init@F3044 0035  
                   __pdataCOMRAM 0001                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0080          __end_of__initialization F9D2  
                  ___rparam_used 000001                   __pcstackCOMRAM 0020  
           __end_of_led_turn_off FA7C    __end_of_gpio_pin_logic_toggle FC6A  
              led_turn_off@F3054 0033                  led_toggle@F3059 0032  
              led_turn_on@my_led 0029                led_turn_on@my_pin 002C  
                      ?_led_init 002C                       _led_toggle FB58  
                        __Hparam 0000                          __Lparam 0000  
            _gpio_pin_initialize F9DC                          __pcinit F9AA  
                        __ramtop 1000                          __ptext0 FC6A  
                        __ptext1 FA7C                          __ptext2 FA16  
                        __ptext3 FB58                          __ptext4 FBCE  
                        __ptext5 FAE2                          __ptext6 F9DC  
                        __ptext7 FEBC                          __ptext8 FD78  
           ?_gpio_pin_initialize 0029                       ??_led_init 002E  
           end_of_initialization F9D2                    __Lmediumconst 0000  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
                 led_init@my_led 002C                   led_init@my_pin 002F  
          ??_gpio_pin_initialize 002B                      ?_led_toggle 0028  
                   _led_turn_off FA16          _gpio_pin_direction_init FD78  
                  __pidataCOMRAM F98B              start_initialization F9AA  
                  ??_led_turn_on 002B                      __pbssCOMRAM 0032  
            __end_of_led_turn_on FAE2     __end_of_gpio_pin_logic_write 0000  
                      _led0portd 001F            _gpio_pin_logic_toggle FBCE  
      ??_gpio_pin_direction_init 0022      gpio_pin_logic_toggle@my_pin 0020  
      gpio_pin_initialize@my_pin 0029               led_turn_off@my_led 0029  
             led_turn_off@my_pin 002C                 led_toggle@my_led 0028  
               led_toggle@my_pin 002B                        _port_regs 000B  
                      _tris_regs 0015           gpio_pin_initialize@ret 002B  
__end_of_gpio_pin_direction_init FEBC                      _led_turn_on FA7C  
       gpio_pin_logic_toggle@ret 0027                        copy_data0 F9BE  
                   ??_led_toggle 002A           ?_gpio_pin_logic_toggle 0020  
                       __Hrparam 0000                         __Lrparam 0000  
    __end_of_gpio_pin_initialize FA16               __end_of_led_toggle FBCE  
           _gpio_pin_logic_write FEBC                         _led_init FAE2  
                       _lat_regs 0001                         isa$xinst 000000  
          ?_gpio_pin_logic_write 0020          gpio_pin_logic_write@ret 0028  
  gpio_pin_direction_init@my_pin 0020       gpio_pin_direction_init@ret 0028  
