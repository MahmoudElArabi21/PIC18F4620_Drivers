

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 06 00:15:32 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4620 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   001912                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _lat_regs
    71   001912  89                 	db	137
    72   001913  0F                 	db	15
    73   001914  8A                 	db	138
    74   001915  0F                 	db	15
    75   001916  8B                 	db	139
    76   001917  0F                 	db	15
    77   001918  8C                 	db	140
    78   001919  0F                 	db	15
    79   00191A  8D                 	db	141
    80   00191B  0F                 	db	15
    81                           
    82                           ;initializer for _port_regs
    83   00191C  80                 	db	128
    84   00191D  0F                 	db	15
    85   00191E  81                 	db	129
    86   00191F  0F                 	db	15
    87   001920  82                 	db	130
    88   001921  0F                 	db	15
    89   001922  83                 	db	131
    90   001923  0F                 	db	15
    91   001924  84                 	db	132
    92   001925  0F                 	db	15
    93                           
    94                           ;initializer for _tris_regs
    95   001926  92                 	db	146
    96   001927  0F                 	db	15
    97   001928  93                 	db	147
    98   001929  0F                 	db	15
    99   00192A  94                 	db	148
   100   00192B  0F                 	db	15
   101   00192C  95                 	db	149
   102   00192D  0F                 	db	15
   103   00192E  96                 	db	150
   104   00192F  0F                 	db	15
   105                           
   106                           ;initializer for _LCD2
   107   001930  32                 	db	50
   108   001931  3A                 	db	58
   109   001932  03                 	db	3
   110   001933  0B                 	db	11
   111   001934  13                 	db	19
   112   001935  1B                 	db	27
   113   001936  23                 	db	35
   114   001937  2B                 	db	43
   115   001938  33                 	db	51
   116   001939  3B                 	db	59
   117                           
   118                           ;initializer for _LCD1
   119   00193A  02                 	db	2
   120   00193B  0A                 	db	10
   121   00193C  12                 	db	18
   122   00193D  1A                 	db	26
   123   00193E  22                 	db	34
   124   00193F  2A                 	db	42
   125                           
   126                           	psect	smallconst
   127   001000                     __psmallconst:
   128                           	callstack 0
   129   001000  00                 	db	0
   130   001001                     _customchar:
   131                           	callstack 0
   132   001001  01                 	db	1
   133   001002  03                 	db	3
   134   001003  07                 	db	7
   135   001004  1F                 	db	31
   136   001005  1F                 	db	31
   137   001006  07                 	db	7
   138   001007  03                 	db	3
   139   001008  01                 	db	1
   140   001009                     __end_of_customchar:
   141                           	callstack 0
   142   000000                     _LATA	set	3977
   143   000000                     _PORTE	set	3972
   144   000000                     _PORTD	set	3971
   145   000000                     _PORTC	set	3970
   146   000000                     _PORTB	set	3969
   147   000000                     _PORTA	set	3968
   148   000000                     _TRISA	set	3986
   149   000000                     _TRISE	set	3990
   150   000000                     _TRISD	set	3989
   151   000000                     _TRISC	set	3988
   152   000000                     _TRISB	set	3987
   153   000000                     _LATE	set	3981
   154   000000                     _LATD	set	3980
   155   000000                     _LATC	set	3979
   156   000000                     _LATB	set	3978
   157   001009                     STR_1:
   158   001009  25                 	db	37
   159   00100A  69                 	db	105	;'i'
   160   00100B  00                 	db	0
   161   00100C  00                 	db	0	; dummy byte at the end
   162   000000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166   001874                     __pcinit:
   167                           	callstack 0
   168   001874                     start_initialization:
   169                           	callstack 0
   170   001874                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Initialize objects allocated to COMRAM (46 bytes)
   174                           ; load TBLPTR registers with __pidataCOMRAM
   175   001874  0E12               	movlw	low __pidataCOMRAM
   176   001876  6EF6               	movwf	tblptrl,c
   177   001878  0E19               	movlw	high __pidataCOMRAM
   178   00187A  6EF7               	movwf	tblptrh,c
   179   00187C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   180   00187E  6EF8               	movwf	tblptru,c
   181   001880  EE00  F001         	lfsr	0,__pdataCOMRAM
   182   001884  EE10 F02E          	lfsr	1,46
   183   001888                     copy_data0:
   184   001888  0009               	tblrd		*+
   185   00188A  CFF5 FFEE          	movff	tablat,postinc0
   186   00188E  50E5               	movf	postdec1,w,c
   187   001890  50E1               	movf	fsr1l,w,c
   188   001892  E1FA               	bnz	copy_data0
   189                           
   190                           ; Clear objects allocated to COMRAM (13 bytes)
   191   001894  EE00  F05C         	lfsr	0,__pbssCOMRAM
   192   001898  0E0D               	movlw	13
   193   00189A                     clear_0:
   194   00189A  6AEE               	clrf	postinc0,c
   195   00189C  06E8               	decf	wreg,f,c
   196   00189E  E1FD               	bnz	clear_0
   197   0018A0                     end_of_initialization:
   198                           	callstack 0
   199   0018A0                     __end_of__initialization:
   200                           	callstack 0
   201   0018A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202   0018A2  6EF8               	movwf	tblptru,c
   203   0018A4  0100               	movlb	0
   204   0018A6  EF1A  F00C         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207   00005C                     __pbssCOMRAM:
   208                           	callstack 0
   209   00005C                     	ds	6
   210   000062                     relay_turn_off@F3049:
   211                           	callstack 0
   212   000062                     	ds	1
   213   000063                     relay_turn_on@F3044:
   214                           	callstack 0
   215   000063                     	ds	1
   216   000064                     relay_initialize@F3039:
   217                           	callstack 0
   218   000064                     	ds	1
   219   000065                     led_toggle@F3060:
   220                           	callstack 0
   221   000065                     	ds	1
   222   000066                     led_turn_off@F3055:
   223                           	callstack 0
   224   000066                     	ds	1
   225   000067                     led_turn_on@F3050:
   226                           	callstack 0
   227   000067                     	ds	1
   228   000068                     led_init@F3045:
   229                           	callstack 0
   230   000068                     	ds	1
   231                           
   232                           	psect	dataCOMRAM
   233   000001                     __pdataCOMRAM:
   234                           	callstack 0
   235   000001                     _lat_regs:
   236                           	callstack 0
   237   000001                     	ds	10
   238   00000B                     _port_regs:
   239                           	callstack 0
   240   00000B                     	ds	10
   241   000015                     _tris_regs:
   242                           	callstack 0
   243   000015                     	ds	10
   244   00001F                     _LCD2:
   245                           	callstack 0
   246   00001F                     	ds	10
   247   000029                     _LCD1:
   248                           	callstack 0
   249   000029                     	ds	6
   250                           
   251                           	psect	cstackCOMRAM
   252   00002F                     __pcstackCOMRAM:
   253                           	callstack 0
   254   00002F                     gpio_pin_direction_init@my_pin:
   255                           	callstack 0
   256   00002F                     gpio_pin_logic_write@my_pin:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x0
   260   00002F                     	ds	2
   261   000031                     ??_gpio_pin_direction_init:
   262   000031                     gpio_pin_logic_write@logic:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x2
   266   000031                     	ds	1
   267   000032                     ??_gpio_pin_logic_write:
   268                           
   269                           ; 1 bytes @ 0x3
   270   000032                     	ds	5
   271   000037                     gpio_pin_direction_init@ret:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x8
   275   000037                     	ds	1
   276   000038                     gpio_pin_logic_write@ret:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x9
   280   000038                     	ds	1
   281   000039                     lcd_send_4bits@lcd:
   282                           	callstack 0
   283   000039                     lcd_4bit_send_enable_signal@lcd:
   284                           	callstack 0
   285   000039                     lcd_8bit_send_enable_signal@lcd:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xA
   289   000039                     	ds	2
   290   00003B                     lcd_send_4bits@_data_command:
   291                           	callstack 0
   292   00003B                     lcd_4bit_send_enable_signal@ret:
   293                           	callstack 0
   294   00003B                     lcd_8bit_send_enable_signal@ret:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0xC
   298   00003B                     	ds	1
   299   00003C                     lcd_send_4bits@ret:
   300                           	callstack 0
   301   00003C                     lcd_8bit_send_command@lcd:
   302                           	callstack 0
   303   00003C                     lcd_8bit_send_char_data@lcd:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xD
   307   00003C                     	ds	1
   308   00003D                     lcd_4bit_send_command@lcd:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xE
   312   00003D                     	ds	1
   313   00003E                     lcd_8bit_send_command@command:
   314                           	callstack 0
   315   00003E                     lcd_8bit_send_char_data@data:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xF
   319   00003E                     	ds	1
   320   00003F                     ??_lcd_8bit_send_command:
   321   00003F                     ??_lcd_8bit_send_char_data:
   322   00003F                     lcd_4bit_send_command@command:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x10
   326   00003F                     	ds	1
   327   000040                     lcd_4bit_send_command@ret:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x11
   331   000040                     	ds	1
   332   000041                     lcd_4bit_intialize@lcd:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x12
   336   000041                     	ds	2
   337   000043                     ??_lcd_4bit_intialize:
   338   000043                     lcd_8bit_send_command@ret:
   339                           	callstack 0
   340   000043                     lcd_8bit_send_char_data@ret:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x14
   344   000043                     	ds	1
   345   000044                     lcd_8bit_send_command@l_pin_counter:
   346                           	callstack 0
   347   000044                     lcd_8bit_send_char_data@l_pin_counter:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x15
   351   000044                     	ds	1
   352   000045                     lcd_4bit_intialize@ret:
   353                           	callstack 0
   354   000045                     lcd_8bit_intialize@lcd:
   355                           	callstack 0
   356   000045                     lcd_8bit_set_cursor@lcd:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x16
   360   000045                     	ds	1
   361   000046                     lcd_4bit_intialize@l_data_pins_counter:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x17
   365   000046                     	ds	1
   366   000047                     ??_lcd_8bit_intialize:
   367   000047                     lcd_8bit_set_cursor@row:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x18
   371   000047                     	ds	1
   372   000048                     lcd_8bit_set_cursor@coulmn:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x19
   376   000048                     	ds	1
   377   000049                     ??_lcd_8bit_set_cursor:
   378   000049                     lcd_8bit_intialize@ret:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x1A
   382   000049                     	ds	1
   383   00004A                     lcd_8bit_intialize@l_data_pins_counter:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x1B
   387   00004A                     	ds	1
   388   00004B                     lcd_8bit_set_cursor@ret:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x1C
   392   00004B                     	ds	1
   393   00004C                     lcd_8bit_send_char_data_pos@lcd:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x1D
   397   00004C                     	ds	2
   398   00004E                     lcd_8bit_send_char_data_pos@row:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x1F
   402   00004E                     	ds	1
   403   00004F                     lcd_8bit_send_char_data_pos@column:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x20
   407   00004F                     	ds	1
   408   000050                     lcd_8bit_send_char_data_pos@data:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x21
   412   000050                     	ds	1
   413   000051                     lcd_8bit_send_char_data_pos@ret:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x22
   417   000051                     	ds	1
   418   000052                     lcd_8bit_send_custom_char@lcd:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x23
   422   000052                     	ds	2
   423   000054                     lcd_8bit_send_custom_char@row:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x25
   427   000054                     	ds	1
   428   000055                     lcd_8bit_send_custom_char@column:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x26
   432   000055                     	ds	1
   433   000056                     lcd_8bit_send_custom_char@_chr:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x27
   437   000056                     	ds	2
   438   000058                     lcd_8bit_send_custom_char@mem_pos:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x29
   442   000058                     	ds	1
   443   000059                     ??_lcd_8bit_send_custom_char:
   444                           
   445                           ; 1 bytes @ 0x2A
   446   000059                     	ds	2
   447   00005B                     lcd_8bit_send_custom_char@lcd_counter:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x2C
   451   00005B                     	ds	1
   452   00005C                     
   453                           ; 1 bytes @ 0x2D
   454 ;;
   455 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   456 ;;
   457 ;; *************** function _main *****************
   458 ;; Defined at:
   459 ;;		line 89 in file "app.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  2  251[None  ] int 
   466 ;; Registers used:
   467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels required when called: 6
   479 ;; This function calls:
   480 ;;		_lcd_4bit_intialize
   481 ;;		_lcd_8bit_intialize
   482 ;;		_lcd_8bit_send_custom_char
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489   001834                     __ptext0:
   490                           	callstack 0
   491   001834                     _main:
   492                           	callstack 25
   493   001834                     
   494                           ;app.c: 90:     lcd_4bit_intialize(&LCD1);
   495   001834  0E29               	movlw	low _LCD1
   496   001836  6E41               	movwf	lcd_4bit_intialize@lcd^0,c
   497   001838  0E00               	movlw	high _LCD1
   498   00183A  6E42               	movwf	(lcd_4bit_intialize@lcd+1)^0,c
   499   00183C  ECD1  F009         	call	_lcd_4bit_intialize	;wreg free
   500                           
   501                           ;app.c: 91:     lcd_8bit_intialize(&LCD2);
   502   001840  0E1F               	movlw	low _LCD2
   503   001842  6E45               	movwf	lcd_8bit_intialize@lcd^0,c
   504   001844  0E00               	movlw	high _LCD2
   505   001846  6E46               	movwf	(lcd_8bit_intialize@lcd+1)^0,c
   506   001848  EC3F  F009         	call	_lcd_8bit_intialize	;wreg free
   507   00184C                     l2430:
   508                           
   509                           ;app.c: 94:          lcd_8bit_send_custom_char (&LCD2 , 1 , 20 , customchar , 0);
   510   00184C  0E1F               	movlw	low _LCD2
   511   00184E  6E52               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   512   001850  0E00               	movlw	high _LCD2
   513   001852  6E53               	movwf	(lcd_8bit_send_custom_char@lcd+1)^0,c
   514   001854  0E01               	movlw	1
   515   001856  6E54               	movwf	lcd_8bit_send_custom_char@row^0,c
   516   001858  0E14               	movlw	20
   517   00185A  6E55               	movwf	lcd_8bit_send_custom_char@column^0,c
   518   00185C  0E01               	movlw	low _customchar
   519   00185E  6E56               	movwf	lcd_8bit_send_custom_char@_chr^0,c
   520   001860  0E10               	movlw	high _customchar
   521   001862  6E57               	movwf	(lcd_8bit_send_custom_char@_chr+1)^0,c
   522   001864  0E00               	movlw	0
   523   001866  6E58               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   524   001868  EC47  F00B         	call	_lcd_8bit_send_custom_char	;wreg free
   525   00186C  EF26  F00C         	goto	l2430
   526   001870  EF00  F000         	goto	start
   527   001874                     __end_of_main:
   528                           	callstack 0
   529                           
   530 ;; *************** function _lcd_8bit_send_custom_char *****************
   531 ;; Defined at:
   532 ;;		line 245 in file "ECU_L/LCD/lcd.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  lcd             2   35[COMRAM] PTR const struct .
   535 ;;		 -> LCD2(10), 
   536 ;;  row             1   37[COMRAM] unsigned char 
   537 ;;  column          1   38[COMRAM] unsigned char 
   538 ;;  _chr            2   39[COMRAM] PTR const unsigned char 
   539 ;;		 -> customchar(8), 
   540 ;;  mem_pos         1   41[COMRAM] unsigned char 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  lcd_counter     1   44[COMRAM] unsigned char 
   543 ;;  ret             1    0        unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      unsigned char 
   546 ;; Registers used:
   547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:       10 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 5
   560 ;; This function calls:
   561 ;;		_lcd_8bit_send_char_data
   562 ;;		_lcd_8bit_send_char_data_pos
   563 ;;		_lcd_8bit_send_command
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text1
   570   00168E                     __ptext1:
   571                           	callstack 0
   572   00168E                     _lcd_8bit_send_custom_char:
   573                           	callstack 25
   574   00168E                     
   575                           ;ECU_L/LCD/lcd.c: 248:     uint8 lcd_counter = 0;
   576   00168E  0E00               	movlw	0
   577   001690  6E5B               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
   578   001692                     
   579                           ;ECU_L/LCD/lcd.c: 249:     if(((void*)0) == lcd){
   580   001692  5052               	movf	lcd_8bit_send_custom_char@lcd^0,w,c
   581   001694  1053               	iorwf	(lcd_8bit_send_custom_char@lcd+1)^0,w,c
   582   001696  A4D8               	btfss	status,2,c
   583   001698  EF50  F00B         	goto	u1041
   584   00169C  EF52  F00B         	goto	u1040
   585   0016A0                     u1041:
   586   0016A0  EF54  F00B         	goto	l2190
   587   0016A4                     u1040:
   588   0016A4                     
   589                           ;ECU_L/LCD/lcd.c: 251:     }
   590   0016A4  EF89  F00B         	goto	l370
   591   0016A8                     l2190:
   592   0016A8  C052  F03C         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_command@lcd
   593   0016AC  C053  F03D         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_command@lcd+1
   594   0016B0  5058               	movf	lcd_8bit_send_custom_char@mem_pos^0,w,c
   595   0016B2  0D08               	mullw	8
   596   0016B4  50F3               	movf	243,w,c
   597   0016B6  0F40               	addlw	64
   598   0016B8  6E3E               	movwf	lcd_8bit_send_command@command^0,c
   599   0016BA  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
   600   0016BE                     
   601                           ;ECU_L/LCD/lcd.c: 254:         for(lcd_counter=0; lcd_counter<=7; ++lcd_counter){
   602   0016BE  0E00               	movlw	0
   603   0016C0  6E5B               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
   604   0016C2                     l2198:
   605   0016C2  C052  F03C         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data@lcd
   606   0016C6  C053  F03D         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data@lcd+1
   607   0016CA  505B               	movf	lcd_8bit_send_custom_char@lcd_counter^0,w,c
   608   0016CC  2456               	addwf	lcd_8bit_send_custom_char@_chr^0,w,c
   609   0016CE  6E59               	movwf	??_lcd_8bit_send_custom_char^0,c
   610   0016D0  0E00               	movlw	0
   611   0016D2  2057               	addwfc	(lcd_8bit_send_custom_char@_chr+1)^0,w,c
   612   0016D4  6E5A               	movwf	(??_lcd_8bit_send_custom_char+1)^0,c
   613   0016D6  C059  FFF6         	movff	??_lcd_8bit_send_custom_char,tblptrl
   614   0016DA  C05A  FFF7         	movff	??_lcd_8bit_send_custom_char+1,tblptrh
   615   0016DE                     	if	0	;tblptru may be non-zero
   616   0016DE                     	endif
   617   0016DE                     	if	0	;tblptru may be non-zero
   618   0016DE                     	endif
   619   0016DE  0008               	tblrd		*
   620   0016E0  CFF5 F03E          	movff	tablat,lcd_8bit_send_char_data@data
   621   0016E4  ECB7  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   622   0016E8                     
   623                           ;ECU_L/LCD/lcd.c: 256:         }
   624   0016E8  2A5B               	incf	lcd_8bit_send_custom_char@lcd_counter^0,f,c
   625   0016EA  0E07               	movlw	7
   626   0016EC  645B               	cpfsgt	lcd_8bit_send_custom_char@lcd_counter^0,c
   627   0016EE  EF7B  F00B         	goto	u1051
   628   0016F2  EF7D  F00B         	goto	u1050
   629   0016F6                     u1051:
   630   0016F6  EF61  F00B         	goto	l2198
   631   0016FA                     u1050:
   632   0016FA  C052  F04C         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data_pos@lcd
   633   0016FE  C053  F04D         	movff	lcd_8bit_send_custom_char@lcd+1,lcd_8bit_send_char_data_pos@lcd+1
   634   001702  C054  F04E         	movff	lcd_8bit_send_custom_char@row,lcd_8bit_send_char_data_pos@row
   635   001706  C055  F04F         	movff	lcd_8bit_send_custom_char@column,lcd_8bit_send_char_data_pos@column
   636   00170A  C058  F050         	movff	lcd_8bit_send_custom_char@mem_pos,lcd_8bit_send_char_data_pos@data
   637   00170E  ECF7  F00B         	call	_lcd_8bit_send_char_data_pos	;wreg free
   638   001712                     l370:
   639   001712  0012               	return		;funcret
   640   001714                     __end_of_lcd_8bit_send_custom_char:
   641                           	callstack 0
   642                           
   643 ;; *************** function _lcd_8bit_send_char_data_pos *****************
   644 ;; Defined at:
   645 ;;		line 208 in file "ECU_L/LCD/lcd.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  lcd             2   29[COMRAM] PTR const struct .
   648 ;;		 -> LCD2(10), 
   649 ;;  row             1   31[COMRAM] unsigned char 
   650 ;;  column          1   32[COMRAM] unsigned char 
   651 ;;  data            1   33[COMRAM] unsigned char 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  ret             1   34[COMRAM] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      unsigned char 
   656 ;; Registers used:
   657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        6 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 4
   670 ;; This function calls:
   671 ;;		_lcd_8bit_send_char_data
   672 ;;		_lcd_8bit_set_cursor
   673 ;; This function is called by:
   674 ;;		_lcd_8bit_send_custom_char
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text2
   679   0017EE                     __ptext2:
   680                           	callstack 0
   681   0017EE                     _lcd_8bit_send_char_data_pos:
   682                           	callstack 25
   683   0017EE                     
   684                           ;ECU_L/LCD/lcd.c: 210:     if(((void*)0) == lcd){
   685   0017EE  504C               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
   686   0017F0  104D               	iorwf	(lcd_8bit_send_char_data_pos@lcd+1)^0,w,c
   687   0017F2  A4D8               	btfss	status,2,c
   688   0017F4  EFFE  F00B         	goto	u991
   689   0017F8  EF00  F00C         	goto	u990
   690   0017FC                     u991:
   691   0017FC  EF04  F00C         	goto	l2090
   692   001800                     u990:
   693   001800                     
   694                           ;ECU_L/LCD/lcd.c: 211:         ret = (Std_ReturnType)0x00;
   695   001800  0E00               	movlw	0
   696   001802  6E51               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   697                           
   698                           ;ECU_L/LCD/lcd.c: 212:     }
   699   001804  EF18  F00C         	goto	l2092
   700   001808                     l2090:
   701                           
   702                           ;ECU_L/LCD/lcd.c: 214:         ret = lcd_8bit_set_cursor(lcd, row, column);
   703   001808  C04C  F045         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
   704   00180C  C04D  F046         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_set_cursor@lcd+1
   705   001810  C04E  F047         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
   706   001814  C04F  F048         	movff	lcd_8bit_send_char_data_pos@column,lcd_8bit_set_cursor@coulmn
   707   001818  EC63  F00A         	call	_lcd_8bit_set_cursor	;wreg free
   708   00181C  6E51               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   709                           
   710                           ;ECU_L/LCD/lcd.c: 215:         ret = lcd_8bit_send_char_data(lcd, data);
   711   00181E  C04C  F03C         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
   712   001822  C04D  F03D         	movff	lcd_8bit_send_char_data_pos@lcd+1,lcd_8bit_send_char_data@lcd+1
   713   001826  C050  F03E         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
   714   00182A  ECB7  F00A         	call	_lcd_8bit_send_char_data	;wreg free
   715   00182E  6E51               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
   716   001830                     l2092:
   717                           
   718                           ;ECU_L/LCD/lcd.c: 217:     return ret;
   719   001830  5051               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
   720   001832  0012               	return		;funcret
   721   001834                     __end_of_lcd_8bit_send_char_data_pos:
   722                           	callstack 0
   723                           
   724 ;; *************** function _lcd_8bit_set_cursor *****************
   725 ;; Defined at:
   726 ;;		line 333 in file "ECU_L/LCD/lcd.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  lcd             2   22[COMRAM] PTR const struct .
   729 ;;		 -> LCD2(10), 
   730 ;;  row             1   24[COMRAM] unsigned char 
   731 ;;  coulmn          1   25[COMRAM] unsigned char 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  ret             1   28[COMRAM] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;Total ram usage:        7 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 3
   750 ;; This function calls:
   751 ;;		_lcd_8bit_send_command
   752 ;; This function is called by:
   753 ;;		_lcd_8bit_send_char_data_pos
   754 ;;		_lcd_8bit_send_string_pos
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text3
   759   0014C6                     __ptext3:
   760                           	callstack 0
   761   0014C6                     _lcd_8bit_set_cursor:
   762                           	callstack 25
   763   0014C6                     
   764                           ;ECU_L/LCD/lcd.c: 334:     Std_ReturnType ret = (Std_ReturnType)0x01;
   765   0014C6  0E01               	movlw	1
   766   0014C8  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   767   0014CA                     
   768                           ;ECU_L/LCD/lcd.c: 335:     coulmn--;
   769   0014CA  0648               	decf	lcd_8bit_set_cursor@coulmn^0,f,c
   770                           
   771                           ;ECU_L/LCD/lcd.c: 336:     switch(row){
   772   0014CC  EF98  F00A         	goto	l2026
   773   0014D0                     l2018:
   774   0014D0  C045  F03C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   775   0014D4  C046  F03D         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   776   0014D8  5048               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   777   0014DA  0F80               	addlw	128
   778   0014DC  6E3E               	movwf	lcd_8bit_send_command@command^0,c
   779   0014DE  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
   780   0014E2  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   781   0014E4  EFB5  F00A         	goto	l2028
   782   0014E8                     l2020:
   783   0014E8  C045  F03C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   784   0014EC  C046  F03D         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   785   0014F0  5048               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   786   0014F2  0FC0               	addlw	192
   787   0014F4  6E3E               	movwf	lcd_8bit_send_command@command^0,c
   788   0014F6  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
   789   0014FA  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   790   0014FC  EFB5  F00A         	goto	l2028
   791   001500                     l2022:
   792   001500  C045  F03C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   793   001504  C046  F03D         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   794   001508  5048               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   795   00150A  0F94               	addlw	148
   796   00150C  6E3E               	movwf	lcd_8bit_send_command@command^0,c
   797   00150E  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
   798   001512  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   799   001514  EFB5  F00A         	goto	l2028
   800   001518                     l2024:
   801   001518  C045  F03C         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
   802   00151C  C046  F03D         	movff	lcd_8bit_set_cursor@lcd+1,lcd_8bit_send_command@lcd+1
   803   001520  5048               	movf	lcd_8bit_set_cursor@coulmn^0,w,c
   804   001522  0FD4               	addlw	212
   805   001524  6E3E               	movwf	lcd_8bit_send_command@command^0,c
   806   001526  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
   807   00152A  6E4B               	movwf	lcd_8bit_set_cursor@ret^0,c
   808   00152C  EFB5  F00A         	goto	l2028
   809   001530                     l2026:
   810   001530  5047               	movf	lcd_8bit_set_cursor@row^0,w,c
   811   001532  6E49               	movwf	??_lcd_8bit_set_cursor^0,c
   812   001534  6A4A               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
   813                           
   814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   815                           ; Switch size 1, requested type "simple"
   816                           ; Number of cases is 1, Range of values is 0 to 0
   817                           ; switch strategies available:
   818                           ; Name         Instructions Cycles
   819                           ; simple_byte            4     3 (average)
   820                           ;	Chosen strategy is simple_byte
   821   001536  504A               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
   822   001538  0A00               	xorlw	0	; case 0
   823   00153A  B4D8               	btfsc	status,2,c
   824   00153C  EFA2  F00A         	goto	l2526
   825   001540  EFB5  F00A         	goto	l2028
   826   001544                     l2526:
   827                           
   828                           ; Switch size 1, requested type "simple"
   829                           ; Number of cases is 4, Range of values is 1 to 4
   830                           ; switch strategies available:
   831                           ; Name         Instructions Cycles
   832                           ; simple_byte           13     7 (average)
   833                           ;	Chosen strategy is simple_byte
   834   001544  5049               	movf	??_lcd_8bit_set_cursor^0,w,c
   835   001546  0A01               	xorlw	1	; case 1
   836   001548  B4D8               	btfsc	status,2,c
   837   00154A  EF68  F00A         	goto	l2018
   838   00154E  0A03               	xorlw	3	; case 2
   839   001550  B4D8               	btfsc	status,2,c
   840   001552  EF74  F00A         	goto	l2020
   841   001556  0A01               	xorlw	1	; case 3
   842   001558  B4D8               	btfsc	status,2,c
   843   00155A  EF80  F00A         	goto	l2022
   844   00155E  0A07               	xorlw	7	; case 4
   845   001560  B4D8               	btfsc	status,2,c
   846   001562  EF8C  F00A         	goto	l2024
   847   001566  EFB5  F00A         	goto	l2028
   848   00156A                     l2028:
   849                           
   850                           ;ECU_L/LCD/lcd.c: 343:     return ret;
   851   00156A  504B               	movf	lcd_8bit_set_cursor@ret^0,w,c
   852   00156C  0012               	return		;funcret
   853   00156E                     __end_of_lcd_8bit_set_cursor:
   854                           	callstack 0
   855                           
   856 ;; *************** function _lcd_8bit_send_char_data *****************
   857 ;; Defined at:
   858 ;;		line 188 in file "ECU_L/LCD/lcd.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  lcd             2   13[COMRAM] PTR const struct .
   861 ;;		 -> LCD2(10), 
   862 ;;  data            1   15[COMRAM] unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  l_pin_counte    1   21[COMRAM] unsigned char 
   865 ;;  ret             1   20[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      unsigned char 
   868 ;; Registers used:
   869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;Total ram usage:        9 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 2
   882 ;; This function calls:
   883 ;;		_gpio_pin_logic_write
   884 ;;		_lcd_8bit_send_enable_signal
   885 ;; This function is called by:
   886 ;;		_lcd_8bit_send_char_data_pos
   887 ;;		_lcd_8bit_send_custom_char
   888 ;;		_lcd_8bit_send_string
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text4
   893   00156E                     __ptext4:
   894                           	callstack 0
   895   00156E                     _lcd_8bit_send_char_data:
   896                           	callstack 26
   897   00156E                     
   898                           ;ECU_L/LCD/lcd.c: 190:     uint8 l_pin_counter = 0;
   899   00156E  0E00               	movlw	0
   900   001570  6E44               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   901   001572                     
   902                           ;ECU_L/LCD/lcd.c: 191:     if(((void*)0) == lcd){
   903   001572  503C               	movf	lcd_8bit_send_char_data@lcd^0,w,c
   904   001574  103D               	iorwf	(lcd_8bit_send_char_data@lcd+1)^0,w,c
   905   001576  A4D8               	btfss	status,2,c
   906   001578  EFC0  F00A         	goto	u881
   907   00157C  EFC2  F00A         	goto	u880
   908   001580                     u881:
   909   001580  EFC6  F00A         	goto	l1994
   910   001584                     u880:
   911   001584                     
   912                           ;ECU_L/LCD/lcd.c: 192:         ret = (Std_ReturnType)0x00;
   913   001584  0E00               	movlw	0
   914   001586  6E43               	movwf	lcd_8bit_send_char_data@ret^0,c
   915                           
   916                           ;ECU_L/LCD/lcd.c: 193:     }
   917   001588  EFFD  F00A         	goto	l2010
   918   00158C                     l1994:
   919   00158C  C03C  F02F         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_logic_write@my_pin
   920   001590  C03D  F030         	movff	lcd_8bit_send_char_data@lcd+1,gpio_pin_logic_write@my_pin+1
   921   001594  0E01               	movlw	1
   922   001596  6E31               	movwf	gpio_pin_logic_write@logic^0,c
   923   001598  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
   924   00159C                     
   925                           ;ECU_L/LCD/lcd.c: 199:         for(l_pin_counter=0; l_pin_counter<8; ++l_pin_counter){
   926   00159C  0E00               	movlw	0
   927   00159E  6E44               	movwf	lcd_8bit_send_char_data@l_pin_counter^0,c
   928   0015A0                     l2002:
   929   0015A0  5044               	movf	lcd_8bit_send_char_data@l_pin_counter^0,w,c
   930   0015A2  243C               	addwf	lcd_8bit_send_char_data@lcd^0,w,c
   931   0015A4  6E3F               	movwf	??_lcd_8bit_send_char_data^0,c
   932   0015A6  0E00               	movlw	0
   933   0015A8  203D               	addwfc	(lcd_8bit_send_char_data@lcd+1)^0,w,c
   934   0015AA  6E40               	movwf	(??_lcd_8bit_send_char_data+1)^0,c
   935   0015AC  0E02               	movlw	2
   936   0015AE  243F               	addwf	??_lcd_8bit_send_char_data^0,w,c
   937   0015B0  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
   938   0015B2  0E00               	movlw	0
   939   0015B4  2040               	addwfc	(??_lcd_8bit_send_char_data+1)^0,w,c
   940   0015B6  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   941   0015B8  C044  F041         	movff	lcd_8bit_send_char_data@l_pin_counter,??_lcd_8bit_send_char_data+2
   942   0015BC  C03E  F042         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+3
   943   0015C0  2A41               	incf	(??_lcd_8bit_send_char_data+2)^0,f,c
   944   0015C2  EFE5  F00A         	goto	u894
   945   0015C6                     u895:
   946   0015C6  90D8               	bcf	status,0,c
   947   0015C8  3242               	rrcf	(??_lcd_8bit_send_char_data+3)^0,f,c
   948   0015CA                     u894:
   949   0015CA  2E41               	decfsz	(??_lcd_8bit_send_char_data+2)^0,f,c
   950   0015CC  EFE3  F00A         	goto	u895
   951   0015D0  5042               	movf	(??_lcd_8bit_send_char_data+3)^0,w,c
   952   0015D2  0B01               	andlw	1
   953   0015D4  6E31               	movwf	gpio_pin_logic_write@logic^0,c
   954   0015D6  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
   955   0015DA                     
   956                           ;ECU_L/LCD/lcd.c: 201:         }
   957   0015DA  2A44               	incf	lcd_8bit_send_char_data@l_pin_counter^0,f,c
   958   0015DC  0E07               	movlw	7
   959   0015DE  6444               	cpfsgt	lcd_8bit_send_char_data@l_pin_counter^0,c
   960   0015E0  EFF4  F00A         	goto	u901
   961   0015E4  EFF6  F00A         	goto	u900
   962   0015E8                     u901:
   963   0015E8  EFD0  F00A         	goto	l2002
   964   0015EC                     u900:
   965   0015EC                     
   966                           ;ECU_L/LCD/lcd.c: 203:         ret = lcd_8bit_send_enable_signal(lcd);
   967   0015EC  C03C  F039         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
   968   0015F0  C03D  F03A         	movff	lcd_8bit_send_char_data@lcd+1,lcd_8bit_send_enable_signal@lcd+1
   969   0015F4  EC55  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
   970   0015F8  6E43               	movwf	lcd_8bit_send_char_data@ret^0,c
   971   0015FA                     l2010:
   972                           
   973                           ;ECU_L/LCD/lcd.c: 205:     return ret;
   974   0015FA  5043               	movf	lcd_8bit_send_char_data@ret^0,w,c
   975   0015FC  0012               	return		;funcret
   976   0015FE                     __end_of_lcd_8bit_send_char_data:
   977                           	callstack 0
   978                           
   979 ;; *************** function _lcd_8bit_intialize *****************
   980 ;; Defined at:
   981 ;;		line 139 in file "ECU_L/LCD/lcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  lcd             2   22[COMRAM] PTR const struct .
   984 ;;		 -> LCD2(10), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  l_data_pins_    1   27[COMRAM] unsigned char 
   987 ;;  ret             1   26[COMRAM] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      unsigned char 
   990 ;; Registers used:
   991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        6 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 3
  1004 ;; This function calls:
  1005 ;;		_gpio_pin_direction_init
  1006 ;;		_lcd_8bit_send_command
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text5
  1013   00127E                     __ptext5:
  1014                           	callstack 0
  1015   00127E                     _lcd_8bit_intialize:
  1016                           	callstack 27
  1017   00127E                     
  1018                           ;ECU_L/LCD/lcd.c: 141:     uint8 l_data_pins_counter = 0;
  1019   00127E  0E00               	movlw	0
  1020   001280  6E4A               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1021   001282                     
  1022                           ;ECU_L/LCD/lcd.c: 142:     if(((void*)0) == lcd){
  1023   001282  5045               	movf	lcd_8bit_intialize@lcd^0,w,c
  1024   001284  1046               	iorwf	(lcd_8bit_intialize@lcd+1)^0,w,c
  1025   001286  A4D8               	btfss	status,2,c
  1026   001288  EF48  F009         	goto	u1021
  1027   00128C  EF4A  F009         	goto	u1020
  1028   001290                     u1021:
  1029   001290  EF4C  F009         	goto	l2146
  1030   001294                     u1020:
  1031   001294                     
  1032                           ;ECU_L/LCD/lcd.c: 144:     }
  1033   001294  EFD0  F009         	goto	l331
  1034   001298                     l2146:
  1035                           
  1036                           ;ECU_L/LCD/lcd.c: 146:         ret = gpio_pin_direction_init(&(lcd->lcd_rs));
  1037   001298  C045  F02F         	movff	lcd_8bit_intialize@lcd,gpio_pin_direction_init@my_pin
  1038   00129C  C046  F030         	movff	lcd_8bit_intialize@lcd+1,gpio_pin_direction_init@my_pin+1
  1039   0012A0  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1040   0012A4  6E49               	movwf	lcd_8bit_intialize@ret^0,c
  1041                           
  1042                           ;ECU_L/LCD/lcd.c: 147:         ret = gpio_pin_direction_init(&(lcd->lcd_en));
  1043   0012A6  0E01               	movlw	1
  1044   0012A8  2445               	addwf	lcd_8bit_intialize@lcd^0,w,c
  1045   0012AA  6E2F               	movwf	gpio_pin_direction_init@my_pin^0,c
  1046   0012AC  0E00               	movlw	0
  1047   0012AE  2046               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  1048   0012B0  6E30               	movwf	(gpio_pin_direction_init@my_pin+1)^0,c
  1049   0012B2  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1050   0012B6  6E49               	movwf	lcd_8bit_intialize@ret^0,c
  1051   0012B8                     
  1052                           ;ECU_L/LCD/lcd.c: 148:         for(l_data_pins_counter=0; l_data_pins_counter<8; l_data_
      +                          pins_counter++){
  1053   0012B8  0E00               	movlw	0
  1054   0012BA  6E4A               	movwf	lcd_8bit_intialize@l_data_pins_counter^0,c
  1055   0012BC                     l2154:
  1056   0012BC  504A               	movf	lcd_8bit_intialize@l_data_pins_counter^0,w,c
  1057   0012BE  2445               	addwf	lcd_8bit_intialize@lcd^0,w,c
  1058   0012C0  6E47               	movwf	??_lcd_8bit_intialize^0,c
  1059   0012C2  0E00               	movlw	0
  1060   0012C4  2046               	addwfc	(lcd_8bit_intialize@lcd+1)^0,w,c
  1061   0012C6  6E48               	movwf	(??_lcd_8bit_intialize+1)^0,c
  1062   0012C8  0E02               	movlw	2
  1063   0012CA  2447               	addwf	??_lcd_8bit_intialize^0,w,c
  1064   0012CC  6E2F               	movwf	gpio_pin_direction_init@my_pin^0,c
  1065   0012CE  0E00               	movlw	0
  1066   0012D0  2048               	addwfc	(??_lcd_8bit_intialize+1)^0,w,c
  1067   0012D2  6E30               	movwf	(gpio_pin_direction_init@my_pin+1)^0,c
  1068   0012D4  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1069   0012D8                     
  1070                           ;ECU_L/LCD/lcd.c: 150:         }
  1071   0012D8  2A4A               	incf	lcd_8bit_intialize@l_data_pins_counter^0,f,c
  1072   0012DA  0E07               	movlw	7
  1073   0012DC  644A               	cpfsgt	lcd_8bit_intialize@l_data_pins_counter^0,c
  1074   0012DE  EF73  F009         	goto	u1031
  1075   0012E2  EF75  F009         	goto	u1030
  1076   0012E6                     u1031:
  1077   0012E6  EF5E  F009         	goto	l2154
  1078   0012EA                     u1030:
  1079   0012EA                     
  1080                           ;ECU_L/LCD/lcd.c: 151:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1081   0012EA  0E1A               	movlw	26
  1082   0012EC  6E47               	movwf	??_lcd_8bit_intialize^0,c
  1083   0012EE  0EF8               	movlw	248
  1084   0012F0                     u1337:
  1085   0012F0  2EE8               	decfsz	wreg,f,c
  1086   0012F2  D7FE               	bra	u1337
  1087   0012F4  2E47               	decfsz	??_lcd_8bit_intialize^0,f,c
  1088   0012F6  D7FC               	bra	u1337
  1089   0012F8  D000               	nop2	
  1090   0012FA  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1091   0012FE  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1092   001302  0E38               	movlw	56
  1093   001304  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1094   001306  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1095   00130A                     
  1096                           ;ECU_L/LCD/lcd.c: 153:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1097   00130A  0E07               	movlw	7
  1098   00130C  6E47               	movwf	??_lcd_8bit_intialize^0,c
  1099   00130E  0E7D               	movlw	125
  1100   001310                     u1347:
  1101   001310  2EE8               	decfsz	wreg,f,c
  1102   001312  D7FE               	bra	u1347
  1103   001314  2E47               	decfsz	??_lcd_8bit_intialize^0,f,c
  1104   001316  D7FC               	bra	u1347
  1105   001318  F000               	nop	
  1106   00131A  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1107   00131E  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1108   001322  0E38               	movlw	56
  1109   001324  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1110   001326  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1111   00132A                     
  1112                           ;ECU_L/LCD/lcd.c: 155:         _delay((unsigned long)((150)*(4000000UL/4000000.0)));
  1113   00132A  0E32               	movlw	50
  1114   00132C                     u1357:
  1115   00132C  2EE8               	decfsz	wreg,f,c
  1116   00132E  D7FE               	bra	u1357
  1117   001330  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1118   001334  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1119   001338  0E38               	movlw	56
  1120   00133A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1121   00133C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1122   001340  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1123   001344  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1124   001348  0E01               	movlw	1
  1125   00134A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1126   00134C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1127   001350  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1128   001354  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1129   001358  0E02               	movlw	2
  1130   00135A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1131   00135C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1132   001360  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1133   001364  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1134   001368  0E06               	movlw	6
  1135   00136A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1136   00136C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1137   001370  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1138   001374  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1139   001378  0E0C               	movlw	12
  1140   00137A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1141   00137C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1142   001380  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1143   001384  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1144   001388  0E38               	movlw	56
  1145   00138A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1146   00138C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1147   001390  C045  F03C         	movff	lcd_8bit_intialize@lcd,lcd_8bit_send_command@lcd
  1148   001394  C046  F03D         	movff	lcd_8bit_intialize@lcd+1,lcd_8bit_send_command@lcd+1
  1149   001398  0E80               	movlw	128
  1150   00139A  6E3E               	movwf	lcd_8bit_send_command@command^0,c
  1151   00139C  ECFF  F00A         	call	_lcd_8bit_send_command	;wreg free
  1152   0013A0                     l331:
  1153   0013A0  0012               	return		;funcret
  1154   0013A2                     __end_of_lcd_8bit_intialize:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _lcd_8bit_send_command *****************
  1158 ;; Defined at:
  1159 ;;		line 168 in file "ECU_L/LCD/lcd.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  lcd             2   13[COMRAM] PTR const struct .
  1162 ;;		 -> LCD2(10), 
  1163 ;;  command         1   15[COMRAM] unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  l_pin_counte    1   21[COMRAM] unsigned char 
  1166 ;;  ret             1   20[COMRAM] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      unsigned char 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:        9 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 2
  1183 ;; This function calls:
  1184 ;;		_gpio_pin_logic_write
  1185 ;;		_lcd_8bit_send_enable_signal
  1186 ;; This function is called by:
  1187 ;;		_lcd_8bit_intialize
  1188 ;;		_lcd_8bit_send_custom_char
  1189 ;;		_lcd_8bit_set_cursor
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text6
  1194   0015FE                     __ptext6:
  1195                           	callstack 0
  1196   0015FE                     _lcd_8bit_send_command:
  1197                           	callstack 27
  1198   0015FE                     
  1199                           ;ECU_L/LCD/lcd.c: 170:     uint8 l_pin_counter = 0;
  1200   0015FE  0E00               	movlw	0
  1201   001600  6E44               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1202   001602                     
  1203                           ;ECU_L/LCD/lcd.c: 171:     if(((void*)0) == lcd){
  1204   001602  503C               	movf	lcd_8bit_send_command@lcd^0,w,c
  1205   001604  103D               	iorwf	(lcd_8bit_send_command@lcd+1)^0,w,c
  1206   001606  A4D8               	btfss	status,2,c
  1207   001608  EF08  F00B         	goto	u851
  1208   00160C  EF0A  F00B         	goto	u850
  1209   001610                     u851:
  1210   001610  EF0E  F00B         	goto	l1946
  1211   001614                     u850:
  1212   001614                     
  1213                           ;ECU_L/LCD/lcd.c: 172:         ret = (Std_ReturnType)0x00;
  1214   001614  0E00               	movlw	0
  1215   001616  6E43               	movwf	lcd_8bit_send_command@ret^0,c
  1216                           
  1217                           ;ECU_L/LCD/lcd.c: 173:     }
  1218   001618  EF45  F00B         	goto	l1962
  1219   00161C                     l1946:
  1220   00161C  C03C  F02F         	movff	lcd_8bit_send_command@lcd,gpio_pin_logic_write@my_pin
  1221   001620  C03D  F030         	movff	lcd_8bit_send_command@lcd+1,gpio_pin_logic_write@my_pin+1
  1222   001624  0E00               	movlw	0
  1223   001626  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1224   001628  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1225   00162C                     
  1226                           ;ECU_L/LCD/lcd.c: 179:         for(l_pin_counter=0; l_pin_counter<8; ++l_pin_counter){
  1227   00162C  0E00               	movlw	0
  1228   00162E  6E44               	movwf	lcd_8bit_send_command@l_pin_counter^0,c
  1229   001630                     l1954:
  1230   001630  5044               	movf	lcd_8bit_send_command@l_pin_counter^0,w,c
  1231   001632  243C               	addwf	lcd_8bit_send_command@lcd^0,w,c
  1232   001634  6E3F               	movwf	??_lcd_8bit_send_command^0,c
  1233   001636  0E00               	movlw	0
  1234   001638  203D               	addwfc	(lcd_8bit_send_command@lcd+1)^0,w,c
  1235   00163A  6E40               	movwf	(??_lcd_8bit_send_command+1)^0,c
  1236   00163C  0E02               	movlw	2
  1237   00163E  243F               	addwf	??_lcd_8bit_send_command^0,w,c
  1238   001640  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1239   001642  0E00               	movlw	0
  1240   001644  2040               	addwfc	(??_lcd_8bit_send_command+1)^0,w,c
  1241   001646  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1242   001648  C044  F041         	movff	lcd_8bit_send_command@l_pin_counter,??_lcd_8bit_send_command+2
  1243   00164C  C03E  F042         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+3
  1244   001650  2A41               	incf	(??_lcd_8bit_send_command+2)^0,f,c
  1245   001652  EF2D  F00B         	goto	u864
  1246   001656                     u865:
  1247   001656  90D8               	bcf	status,0,c
  1248   001658  3242               	rrcf	(??_lcd_8bit_send_command+3)^0,f,c
  1249   00165A                     u864:
  1250   00165A  2E41               	decfsz	(??_lcd_8bit_send_command+2)^0,f,c
  1251   00165C  EF2B  F00B         	goto	u865
  1252   001660  5042               	movf	(??_lcd_8bit_send_command+3)^0,w,c
  1253   001662  0B01               	andlw	1
  1254   001664  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1255   001666  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1256   00166A                     
  1257                           ;ECU_L/LCD/lcd.c: 181:         }
  1258   00166A  2A44               	incf	lcd_8bit_send_command@l_pin_counter^0,f,c
  1259   00166C  0E07               	movlw	7
  1260   00166E  6444               	cpfsgt	lcd_8bit_send_command@l_pin_counter^0,c
  1261   001670  EF3C  F00B         	goto	u871
  1262   001674  EF3E  F00B         	goto	u870
  1263   001678                     u871:
  1264   001678  EF18  F00B         	goto	l1954
  1265   00167C                     u870:
  1266   00167C                     
  1267                           ;ECU_L/LCD/lcd.c: 183:         ret = lcd_8bit_send_enable_signal(lcd);
  1268   00167C  C03C  F039         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  1269   001680  C03D  F03A         	movff	lcd_8bit_send_command@lcd+1,lcd_8bit_send_enable_signal@lcd+1
  1270   001684  EC55  F00C         	call	_lcd_8bit_send_enable_signal	;wreg free
  1271   001688  6E43               	movwf	lcd_8bit_send_command@ret^0,c
  1272   00168A                     l1962:
  1273                           
  1274                           ;ECU_L/LCD/lcd.c: 185:     return ret;
  1275   00168A  5043               	movf	lcd_8bit_send_command@ret^0,w,c
  1276   00168C  0012               	return		;funcret
  1277   00168E                     __end_of_lcd_8bit_send_command:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _lcd_8bit_send_enable_signal *****************
  1281 ;; Defined at:
  1282 ;;		line 324 in file "ECU_L/LCD/lcd.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  lcd             2   10[COMRAM] PTR const struct .
  1285 ;;		 -> LCD2(10), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  ret             1   12[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		_gpio_pin_logic_write
  1306 ;; This function is called by:
  1307 ;;		_lcd_8bit_send_command
  1308 ;;		_lcd_8bit_send_char_data
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text7
  1313   0018AA                     __ptext7:
  1314                           	callstack 0
  1315   0018AA                     _lcd_8bit_send_enable_signal:
  1316                           	callstack 27
  1317   0018AA  0E01               	movlw	1
  1318   0018AC  2439               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1319   0018AE  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1320   0018B0  0E00               	movlw	0
  1321   0018B2  203A               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1322   0018B4  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1323   0018B6  0E01               	movlw	1
  1324   0018B8  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1325   0018BA  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1326   0018BE                     
  1327                           ;ECU_L/LCD/lcd.c: 327:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1328   0018BE  D000               	nop2		;2 cycle nop
  1329   0018C0  D000               	nop2		;2 cycle nop
  1330   0018C2  F000               	nop	
  1331   0018C4                     
  1332                           ;ECU_L/LCD/lcd.c: 328:     ret = gpio_pin_logic_write(&(lcd->lcd_en), gpio_low);
  1333   0018C4  0E01               	movlw	1
  1334   0018C6  2439               	addwf	lcd_8bit_send_enable_signal@lcd^0,w,c
  1335   0018C8  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1336   0018CA  0E00               	movlw	0
  1337   0018CC  203A               	addwfc	(lcd_8bit_send_enable_signal@lcd+1)^0,w,c
  1338   0018CE  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1339   0018D0  0E00               	movlw	0
  1340   0018D2  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1341   0018D4  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1342   0018D8  6E3B               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  1343                           
  1344                           ;ECU_L/LCD/lcd.c: 329:     return ret;
  1345   0018DA  503B               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  1346   0018DC  0012               	return		;funcret
  1347   0018DE                     __end_of_lcd_8bit_send_enable_signal:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _lcd_4bit_intialize *****************
  1351 ;; Defined at:
  1352 ;;		line 12 in file "ECU_L/LCD/lcd.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  lcd             2   18[COMRAM] PTR const struct .
  1355 ;;		 -> LCD1(6), 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  l_data_pins_    1   23[COMRAM] unsigned char 
  1358 ;;  ret             1   22[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      unsigned char 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;Total ram usage:        6 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; Hardware stack levels required when called: 3
  1375 ;; This function calls:
  1376 ;;		_gpio_pin_direction_init
  1377 ;;		_lcd_4bit_send_command
  1378 ;; This function is called by:
  1379 ;;		_main
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384   0013A2                     __ptext8:
  1385                           	callstack 0
  1386   0013A2                     _lcd_4bit_intialize:
  1387                           	callstack 27
  1388   0013A2                     
  1389                           ;ECU_L/LCD/lcd.c: 14:     uint8 l_data_pins_counter = 0;
  1390   0013A2  0E00               	movlw	0
  1391   0013A4  6E46               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1392   0013A6                     
  1393                           ;ECU_L/LCD/lcd.c: 15:     if(((void*)0) == lcd){
  1394   0013A6  5041               	movf	lcd_4bit_intialize@lcd^0,w,c
  1395   0013A8  1042               	iorwf	(lcd_4bit_intialize@lcd+1)^0,w,c
  1396   0013AA  A4D8               	btfss	status,2,c
  1397   0013AC  EFDA  F009         	goto	u1001
  1398   0013B0  EFDC  F009         	goto	u1000
  1399   0013B4                     u1001:
  1400   0013B4  EFDE  F009         	goto	l2102
  1401   0013B8                     u1000:
  1402   0013B8                     
  1403                           ;ECU_L/LCD/lcd.c: 17:     }
  1404   0013B8  EF62  F00A         	goto	l286
  1405   0013BC                     l2102:
  1406                           
  1407                           ;ECU_L/LCD/lcd.c: 19:         ret = gpio_pin_direction_init(&(lcd->lcd_rs));
  1408   0013BC  C041  F02F         	movff	lcd_4bit_intialize@lcd,gpio_pin_direction_init@my_pin
  1409   0013C0  C042  F030         	movff	lcd_4bit_intialize@lcd+1,gpio_pin_direction_init@my_pin+1
  1410   0013C4  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1411   0013C8  6E45               	movwf	lcd_4bit_intialize@ret^0,c
  1412                           
  1413                           ;ECU_L/LCD/lcd.c: 20:         ret = gpio_pin_direction_init(&(lcd->lcd_en));
  1414   0013CA  0E01               	movlw	1
  1415   0013CC  2441               	addwf	lcd_4bit_intialize@lcd^0,w,c
  1416   0013CE  6E2F               	movwf	gpio_pin_direction_init@my_pin^0,c
  1417   0013D0  0E00               	movlw	0
  1418   0013D2  2042               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  1419   0013D4  6E30               	movwf	(gpio_pin_direction_init@my_pin+1)^0,c
  1420   0013D6  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1421   0013DA  6E45               	movwf	lcd_4bit_intialize@ret^0,c
  1422   0013DC                     
  1423                           ;ECU_L/LCD/lcd.c: 21:         for(l_data_pins_counter=0; l_data_pins_counter<4; l_data_p
      +                          ins_counter++){
  1424   0013DC  0E00               	movlw	0
  1425   0013DE  6E46               	movwf	lcd_4bit_intialize@l_data_pins_counter^0,c
  1426   0013E0                     l2110:
  1427   0013E0  5046               	movf	lcd_4bit_intialize@l_data_pins_counter^0,w,c
  1428   0013E2  2441               	addwf	lcd_4bit_intialize@lcd^0,w,c
  1429   0013E4  6E43               	movwf	??_lcd_4bit_intialize^0,c
  1430   0013E6  0E00               	movlw	0
  1431   0013E8  2042               	addwfc	(lcd_4bit_intialize@lcd+1)^0,w,c
  1432   0013EA  6E44               	movwf	(??_lcd_4bit_intialize+1)^0,c
  1433   0013EC  0E02               	movlw	2
  1434   0013EE  2443               	addwf	??_lcd_4bit_intialize^0,w,c
  1435   0013F0  6E2F               	movwf	gpio_pin_direction_init@my_pin^0,c
  1436   0013F2  0E00               	movlw	0
  1437   0013F4  2044               	addwfc	(??_lcd_4bit_intialize+1)^0,w,c
  1438   0013F6  6E30               	movwf	(gpio_pin_direction_init@my_pin+1)^0,c
  1439   0013F8  EC07  F008         	call	_gpio_pin_direction_init	;wreg free
  1440   0013FC                     
  1441                           ;ECU_L/LCD/lcd.c: 23:         }
  1442   0013FC  2A46               	incf	lcd_4bit_intialize@l_data_pins_counter^0,f,c
  1443   0013FE  0E03               	movlw	3
  1444   001400  6446               	cpfsgt	lcd_4bit_intialize@l_data_pins_counter^0,c
  1445   001402  EF05  F00A         	goto	u1011
  1446   001406  EF07  F00A         	goto	u1010
  1447   00140A                     u1011:
  1448   00140A  EFF0  F009         	goto	l2110
  1449   00140E                     u1010:
  1450   00140E                     
  1451                           ;ECU_L/LCD/lcd.c: 24:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1452   00140E  0E1A               	movlw	26
  1453   001410  6E43               	movwf	??_lcd_4bit_intialize^0,c
  1454   001412  0EF8               	movlw	248
  1455   001414                     u1367:
  1456   001414  2EE8               	decfsz	wreg,f,c
  1457   001416  D7FE               	bra	u1367
  1458   001418  2E43               	decfsz	??_lcd_4bit_intialize^0,f,c
  1459   00141A  D7FC               	bra	u1367
  1460   00141C  D000               	nop2	
  1461   00141E  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1462   001422  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1463   001426  0E38               	movlw	56
  1464   001428  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1465   00142A  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1466   00142E                     
  1467                           ;ECU_L/LCD/lcd.c: 26:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1468   00142E  0E07               	movlw	7
  1469   001430  6E43               	movwf	??_lcd_4bit_intialize^0,c
  1470   001432  0E7D               	movlw	125
  1471   001434                     u1377:
  1472   001434  2EE8               	decfsz	wreg,f,c
  1473   001436  D7FE               	bra	u1377
  1474   001438  2E43               	decfsz	??_lcd_4bit_intialize^0,f,c
  1475   00143A  D7FC               	bra	u1377
  1476   00143C  F000               	nop	
  1477   00143E  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1478   001442  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1479   001446  0E38               	movlw	56
  1480   001448  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1481   00144A  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1482   00144E                     
  1483                           ;ECU_L/LCD/lcd.c: 28:         _delay((unsigned long)((150)*(4000000UL/4000000.0)));
  1484   00144E  0E32               	movlw	50
  1485   001450                     u1387:
  1486   001450  2EE8               	decfsz	wreg,f,c
  1487   001452  D7FE               	bra	u1387
  1488   001454  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1489   001458  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1490   00145C  0E38               	movlw	56
  1491   00145E  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1492   001460  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1493   001464  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1494   001468  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1495   00146C  0E01               	movlw	1
  1496   00146E  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1497   001470  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1498   001474  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1499   001478  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1500   00147C  0E02               	movlw	2
  1501   00147E  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1502   001480  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1503   001484  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1504   001488  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1505   00148C  0E06               	movlw	6
  1506   00148E  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1507   001490  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1508   001494  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1509   001498  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1510   00149C  0E0C               	movlw	12
  1511   00149E  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1512   0014A0  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1513   0014A4  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1514   0014A8  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1515   0014AC  0E28               	movlw	40
  1516   0014AE  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1517   0014B0  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1518   0014B4  C041  F03D         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1519   0014B8  C042  F03E         	movff	lcd_4bit_intialize@lcd+1,lcd_4bit_send_command@lcd+1
  1520   0014BC  0E80               	movlw	128
  1521   0014BE  6E3F               	movwf	lcd_4bit_send_command@command^0,c
  1522   0014C0  EC8A  F00B         	call	_lcd_4bit_send_command	;wreg free
  1523   0014C4                     l286:
  1524   0014C4  0012               	return		;funcret
  1525   0014C6                     __end_of_lcd_4bit_intialize:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _lcd_4bit_send_command *****************
  1529 ;; Defined at:
  1530 ;;		line 41 in file "ECU_L/LCD/lcd.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  lcd             2   14[COMRAM] PTR const struct .
  1533 ;;		 -> LCD1(6), 
  1534 ;;  command         1   16[COMRAM] unsigned char 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  ret             1   17[COMRAM] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      unsigned char 
  1539 ;; Registers used:
  1540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        4 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 2
  1553 ;; This function calls:
  1554 ;;		_gpio_pin_logic_write
  1555 ;;		_lcd_4bit_send_enable_signal
  1556 ;;		_lcd_send_4bits
  1557 ;; This function is called by:
  1558 ;;		_lcd_4bit_intialize
  1559 ;;		_lcd_4bit_send_custom_char
  1560 ;;		_lcd_4bit_set_cursor
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text9
  1565   001714                     __ptext9:
  1566                           	callstack 0
  1567   001714                     _lcd_4bit_send_command:
  1568                           	callstack 27
  1569   001714                     
  1570                           ;ECU_L/LCD/lcd.c: 43:     if(((void*)0) == lcd){
  1571   001714  503D               	movf	lcd_4bit_send_command@lcd^0,w,c
  1572   001716  103E               	iorwf	(lcd_4bit_send_command@lcd+1)^0,w,c
  1573   001718  A4D8               	btfss	status,2,c
  1574   00171A  EF91  F00B         	goto	u971
  1575   00171E  EF93  F00B         	goto	u970
  1576   001722                     u971:
  1577   001722  EF97  F00B         	goto	l2066
  1578   001726                     u970:
  1579   001726                     
  1580                           ;ECU_L/LCD/lcd.c: 44:         ret = (Std_ReturnType)0x00;
  1581   001726  0E00               	movlw	0
  1582   001728  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1583                           
  1584                           ;ECU_L/LCD/lcd.c: 45:     }
  1585   00172A  EFC1  F00B         	goto	l2068
  1586   00172E                     l2066:
  1587                           
  1588                           ;ECU_L/LCD/lcd.c: 49:         ret = gpio_pin_logic_write(&(lcd->lcd_rs), gpio_low);
  1589   00172E  C03D  F02F         	movff	lcd_4bit_send_command@lcd,gpio_pin_logic_write@my_pin
  1590   001732  C03E  F030         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_logic_write@my_pin+1
  1591   001736  0E00               	movlw	0
  1592   001738  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1593   00173A  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1594   00173E  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1595                           
  1596                           ;ECU_L/LCD/lcd.c: 51:         ret = lcd_send_4bits(lcd, command >> 4);
  1597   001740  C03D  F039         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1598   001744  C03E  F03A         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1599   001748  383F               	swapf	lcd_4bit_send_command@command^0,w,c
  1600   00174A  0B0F               	andlw	15
  1601   00174C  6E3B               	movwf	lcd_send_4bits@_data_command^0,c
  1602   00174E  ECC3  F00B         	call	_lcd_send_4bits	;wreg free
  1603   001752  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1604                           
  1605                           ;ECU_L/LCD/lcd.c: 53:         ret = lcd_4bit_send_enable_signal(lcd);
  1606   001754  C03D  F039         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1607   001758  C03E  F03A         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1608   00175C  EC6F  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1609   001760  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1610                           
  1611                           ;ECU_L/LCD/lcd.c: 55:         ret = lcd_send_4bits(lcd, command);
  1612   001762  C03D  F039         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  1613   001766  C03E  F03A         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  1614   00176A  C03F  F03B         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  1615   00176E  ECC3  F00B         	call	_lcd_send_4bits	;wreg free
  1616   001772  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1617                           
  1618                           ;ECU_L/LCD/lcd.c: 57:         ret = lcd_4bit_send_enable_signal(lcd);
  1619   001774  C03D  F039         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  1620   001778  C03E  F03A         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  1621   00177C  EC6F  F00C         	call	_lcd_4bit_send_enable_signal	;wreg free
  1622   001780  6E40               	movwf	lcd_4bit_send_command@ret^0,c
  1623   001782                     l2068:
  1624                           
  1625                           ;ECU_L/LCD/lcd.c: 59:     return ret;
  1626   001782  5040               	movf	lcd_4bit_send_command@ret^0,w,c
  1627   001784  0012               	return		;funcret
  1628   001786                     __end_of_lcd_4bit_send_command:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _lcd_send_4bits *****************
  1632 ;; Defined at:
  1633 ;;		line 306 in file "ECU_L/LCD/lcd.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  lcd             2   10[COMRAM] PTR const struct .
  1636 ;;		 -> LCD1(6), 
  1637 ;;  _data_comman    1   12[COMRAM] unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  ret             1   13[COMRAM] unsigned char 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      unsigned char 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;Total ram usage:        4 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 1
  1656 ;; This function calls:
  1657 ;;		_gpio_pin_logic_write
  1658 ;; This function is called by:
  1659 ;;		_lcd_4bit_send_command
  1660 ;;		_lcd_4bit_send_char_data
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text10
  1665   001786                     __ptext10:
  1666                           	callstack 0
  1667   001786                     _lcd_send_4bits:
  1668                           	callstack 27
  1669   001786  0E02               	movlw	2
  1670   001788  2439               	addwf	lcd_send_4bits@lcd^0,w,c
  1671   00178A  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1672   00178C  0E00               	movlw	0
  1673   00178E  203A               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1674   001790  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1675   001792  503B               	movf	lcd_send_4bits@_data_command^0,w,c
  1676   001794  0B01               	andlw	1
  1677   001796  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1678   001798  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1679   00179C  0E03               	movlw	3
  1680   00179E  2439               	addwf	lcd_send_4bits@lcd^0,w,c
  1681   0017A0  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1682   0017A2  0E00               	movlw	0
  1683   0017A4  203A               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1684   0017A6  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1685   0017A8  90D8               	bcf	status,0,c
  1686   0017AA  303B               	rrcf	lcd_send_4bits@_data_command^0,w,c
  1687   0017AC  0B01               	andlw	1
  1688   0017AE  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1689   0017B0  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1690   0017B4  0E04               	movlw	4
  1691   0017B6  2439               	addwf	lcd_send_4bits@lcd^0,w,c
  1692   0017B8  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1693   0017BA  0E00               	movlw	0
  1694   0017BC  203A               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1695   0017BE  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1696   0017C0  403B               	rrncf	lcd_send_4bits@_data_command^0,w,c
  1697   0017C2  42E8               	rrncf	wreg,f,c
  1698   0017C4  0B3F               	andlw	63
  1699   0017C6  0B01               	andlw	1
  1700   0017C8  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1701   0017CA  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1702   0017CE                     
  1703                           ;ECU_L/LCD/lcd.c: 311:     ret = gpio_pin_logic_write(&(lcd->lcd_data[3]), (_data_comman
      +                          d >> 3) & (uint8)0x01);
  1704   0017CE  0E05               	movlw	5
  1705   0017D0  2439               	addwf	lcd_send_4bits@lcd^0,w,c
  1706   0017D2  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1707   0017D4  0E00               	movlw	0
  1708   0017D6  203A               	addwfc	(lcd_send_4bits@lcd+1)^0,w,c
  1709   0017D8  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1710   0017DA  383B               	swapf	lcd_send_4bits@_data_command^0,w,c
  1711   0017DC  46E8               	rlncf	wreg,f,c
  1712   0017DE  0B1F               	andlw	31
  1713   0017E0  0B01               	andlw	1
  1714   0017E2  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1715   0017E4  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1716   0017E8  6E3C               	movwf	lcd_send_4bits@ret^0,c
  1717                           
  1718                           ;ECU_L/LCD/lcd.c: 312:     return ret;
  1719   0017EA  503C               	movf	lcd_send_4bits@ret^0,w,c
  1720   0017EC  0012               	return		;funcret
  1721   0017EE                     __end_of_lcd_send_4bits:
  1722                           	callstack 0
  1723                           
  1724 ;; *************** function _lcd_4bit_send_enable_signal *****************
  1725 ;; Defined at:
  1726 ;;		line 315 in file "ECU_L/LCD/lcd.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  lcd             2   10[COMRAM] PTR const struct .
  1729 ;;		 -> LCD1(6), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  ret             1   12[COMRAM] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      unsigned char 
  1734 ;; Registers used:
  1735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;Total ram usage:        3 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 1
  1748 ;; This function calls:
  1749 ;;		_gpio_pin_logic_write
  1750 ;; This function is called by:
  1751 ;;		_lcd_4bit_send_command
  1752 ;;		_lcd_4bit_send_char_data
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text11
  1757   0018DE                     __ptext11:
  1758                           	callstack 0
  1759   0018DE                     _lcd_4bit_send_enable_signal:
  1760                           	callstack 27
  1761   0018DE  0E01               	movlw	1
  1762   0018E0  2439               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1763   0018E2  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1764   0018E4  0E00               	movlw	0
  1765   0018E6  203A               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1766   0018E8  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1767   0018EA  0E01               	movlw	1
  1768   0018EC  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1769   0018EE  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1770   0018F2                     
  1771                           ;ECU_L/LCD/lcd.c: 318:     _delay((unsigned long)((5)*(4000000UL/4000000.0)));
  1772   0018F2  D000               	nop2		;2 cycle nop
  1773   0018F4  D000               	nop2		;2 cycle nop
  1774   0018F6  F000               	nop	
  1775   0018F8                     
  1776                           ;ECU_L/LCD/lcd.c: 319:     ret = gpio_pin_logic_write(&(lcd->lcd_en), gpio_low);
  1777   0018F8  0E01               	movlw	1
  1778   0018FA  2439               	addwf	lcd_4bit_send_enable_signal@lcd^0,w,c
  1779   0018FC  6E2F               	movwf	gpio_pin_logic_write@my_pin^0,c
  1780   0018FE  0E00               	movlw	0
  1781   001900  203A               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)^0,w,c
  1782   001902  6E30               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1783   001904  0E00               	movlw	0
  1784   001906  6E31               	movwf	gpio_pin_logic_write@logic^0,c
  1785   001908  ECA9  F008         	call	_gpio_pin_logic_write	;wreg free
  1786   00190C  6E3B               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  1787                           
  1788                           ;ECU_L/LCD/lcd.c: 320:     return ret;
  1789   00190E  503B               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  1790   001910  0012               	return		;funcret
  1791   001912                     __end_of_lcd_4bit_send_enable_signal:
  1792                           	callstack 0
  1793                           
  1794 ;; *************** function _gpio_pin_logic_write *****************
  1795 ;; Defined at:
  1796 ;;		line 41 in file "MCAL/GPIO/gpio.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1799 ;;		 -> LCD2.lcd_data(8), LCD2(10), LCD1.lcd_data(4), LCD1(6), 
  1800 ;;		 -> relay_turn_off@rel_pin(1), relay_turn_on@rel_pin(1), relay_initialize@rel_pin(1), led_turn_off@my_pin(1), 
  1801 ;;		 -> led_turn_on@my_pin(1), led_init@my_pin(1), 
  1802 ;;  logic           1    2[COMRAM] unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  ret             1    9[COMRAM] unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      unsigned char 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1814 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;Total ram usage:       10 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_lcd_4bit_send_command
  1824 ;;		_lcd_8bit_send_command
  1825 ;;		_lcd_8bit_send_char_data
  1826 ;;		_lcd_send_4bits
  1827 ;;		_lcd_4bit_send_enable_signal
  1828 ;;		_lcd_8bit_send_enable_signal
  1829 ;;		_seven_segement_write_number
  1830 ;;		_dc_motor_move_right
  1831 ;;		_dc_motor_move_left
  1832 ;;		_dc_motor_stop
  1833 ;;		_led_turn_on
  1834 ;;		_led_turn_off
  1835 ;;		_relay_turn_on
  1836 ;;		_relay_turn_off
  1837 ;;		_gpio_pin_initialize
  1838 ;;		_lcd_4bit_send_char_data
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text12
  1843   001152                     __ptext12:
  1844                           	callstack 0
  1845   001152                     _gpio_pin_logic_write:
  1846                           	callstack 27
  1847   001152                     
  1848                           ;MCAL/GPIO/gpio.c: 42:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1849   001152  0E01               	movlw	1
  1850   001154  6E38               	movwf	gpio_pin_logic_write@ret^0,c
  1851   001156                     
  1852                           ;MCAL/GPIO/gpio.c: 43:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
  1853   001156  502F               	movf	gpio_pin_logic_write@my_pin^0,w,c
  1854   001158  1030               	iorwf	(gpio_pin_logic_write@my_pin+1)^0,w,c
  1855   00115A  B4D8               	btfsc	status,2,c
  1856   00115C  EFB2  F008         	goto	u811
  1857   001160  EFB4  F008         	goto	u810
  1858   001164                     u811:
  1859   001164  EFC5  F008         	goto	l1912
  1860   001168                     u810:
  1861   001168  C02F  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1862   00116C  C030  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1863   001170  30DF               	rrcf	223,w,c
  1864   001172  32E8               	rrcf	wreg,f,c
  1865   001174  32E8               	rrcf	wreg,f,c
  1866   001176  0B07               	andlw	7
  1867   001178  6E32               	movwf	??_gpio_pin_logic_write^0,c
  1868   00117A  0E07               	movlw	7
  1869   00117C  6432               	cpfsgt	??_gpio_pin_logic_write^0,c
  1870   00117E  EFC3  F008         	goto	u821
  1871   001182  EFC5  F008         	goto	u820
  1872   001186                     u821:
  1873   001186  EF28  F009         	goto	l1920
  1874   00118A                     u820:
  1875   00118A                     l1912:
  1876                           
  1877                           ;MCAL/GPIO/gpio.c: 44:         ret = (Std_ReturnType)0x00;
  1878   00118A  0E00               	movlw	0
  1879   00118C  6E38               	movwf	gpio_pin_logic_write@ret^0,c
  1880                           
  1881                           ;MCAL/GPIO/gpio.c: 45:     }
  1882   00118E  EF3D  F009         	goto	l1922
  1883   001192                     l1914:
  1884                           
  1885                           ;MCAL/GPIO/gpio.c: 49:                 (*lat_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1886   001192  C02F  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1887   001196  C030  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1888   00119A  30DF               	rrcf	223,w,c
  1889   00119C  32E8               	rrcf	wreg,f,c
  1890   00119E  32E8               	rrcf	wreg,f,c
  1891   0011A0  0B07               	andlw	7
  1892   0011A2  6E32               	movwf	??_gpio_pin_logic_write^0,c
  1893   0011A4  0E01               	movlw	1
  1894   0011A6  6E33               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1895   0011A8  2A32               	incf	??_gpio_pin_logic_write^0,f,c
  1896   0011AA  EFD9  F008         	goto	u834
  1897   0011AE                     u835:
  1898   0011AE  90D8               	bcf	status,0,c
  1899   0011B0  3633               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1900   0011B2                     u834:
  1901   0011B2  2E32               	decfsz	??_gpio_pin_logic_write^0,f,c
  1902   0011B4  EFD7  F008         	goto	u835
  1903   0011B8  5033               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1904   0011BA  0AFF               	xorlw	255
  1905   0011BC  6E34               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1906   0011BE  C02F  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1907   0011C2  C030  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1908   0011C6  50DF               	movf	223,w,c
  1909   0011C8  0B07               	andlw	7
  1910   0011CA  6E35               	movwf	(??_gpio_pin_logic_write+3)^0,c
  1911   0011CC  5035               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  1912   0011CE  0D02               	mullw	2
  1913   0011D0  0E01               	movlw	low _lat_regs
  1914   0011D2  24F3               	addwf	243,w,c
  1915   0011D4  6ED9               	movwf	fsr2l,c
  1916   0011D6  0E00               	movlw	high _lat_regs
  1917   0011D8  20F4               	addwfc	prodh,w,c
  1918   0011DA  6EDA               	movwf	fsr2h,c
  1919   0011DC  CFDE F036          	movff	postinc2,??_gpio_pin_logic_write+4
  1920   0011E0  CFDD F037          	movff	postdec2,??_gpio_pin_logic_write+5
  1921   0011E4  C036  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  1922   0011E8  C037  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  1923   0011EC  5034               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1924   0011EE  16DF               	andwf	indf2,f,c
  1925                           
  1926                           ;MCAL/GPIO/gpio.c: 50:                 break;
  1927   0011F0  EF3D  F009         	goto	l1922
  1928   0011F4                     l1916:
  1929                           
  1930                           ;MCAL/GPIO/gpio.c: 52:                 (*lat_regs[my_pin->port] |=(1<<my_pin->pin));
  1931   0011F4  C02F  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1932   0011F8  C030  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1933   0011FC  30DF               	rrcf	223,w,c
  1934   0011FE  32E8               	rrcf	wreg,f,c
  1935   001200  32E8               	rrcf	wreg,f,c
  1936   001202  0B07               	andlw	7
  1937   001204  6E32               	movwf	??_gpio_pin_logic_write^0,c
  1938   001206  0E01               	movlw	1
  1939   001208  6E33               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1940   00120A  2A32               	incf	??_gpio_pin_logic_write^0,f,c
  1941   00120C  EF0A  F009         	goto	u844
  1942   001210                     u845:
  1943   001210  90D8               	bcf	status,0,c
  1944   001212  3633               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1945   001214                     u844:
  1946   001214  2E32               	decfsz	??_gpio_pin_logic_write^0,f,c
  1947   001216  EF08  F009         	goto	u845
  1948   00121A  C02F  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1949   00121E  C030  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1950   001222  50DF               	movf	223,w,c
  1951   001224  0B07               	andlw	7
  1952   001226  6E34               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1953   001228  5034               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1954   00122A  0D02               	mullw	2
  1955   00122C  0E01               	movlw	low _lat_regs
  1956   00122E  24F3               	addwf	243,w,c
  1957   001230  6ED9               	movwf	fsr2l,c
  1958   001232  0E00               	movlw	high _lat_regs
  1959   001234  20F4               	addwfc	prodh,w,c
  1960   001236  6EDA               	movwf	fsr2h,c
  1961   001238  CFDE F035          	movff	postinc2,??_gpio_pin_logic_write+3
  1962   00123C  CFDD F036          	movff	postdec2,??_gpio_pin_logic_write+4
  1963   001240  C035  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  1964   001244  C036  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  1965   001248  5033               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1966   00124A  12DF               	iorwf	indf2,f,c
  1967                           
  1968                           ;MCAL/GPIO/gpio.c: 53:                 break;
  1969   00124C  EF3D  F009         	goto	l1922
  1970   001250                     l1920:
  1971   001250  5031               	movf	gpio_pin_logic_write@logic^0,w,c
  1972   001252  6E32               	movwf	??_gpio_pin_logic_write^0,c
  1973   001254  6A33               	clrf	(??_gpio_pin_logic_write+1)^0,c
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982   001256  5033               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1983   001258  0A00               	xorlw	0	; case 0
  1984   00125A  B4D8               	btfsc	status,2,c
  1985   00125C  EF32  F009         	goto	l2528
  1986   001260  EFC5  F008         	goto	l1912
  1987   001264                     l2528:
  1988                           
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 2, Range of values is 0 to 1
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte            7     4 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995   001264  5032               	movf	??_gpio_pin_logic_write^0,w,c
  1996   001266  0A00               	xorlw	0	; case 0
  1997   001268  B4D8               	btfsc	status,2,c
  1998   00126A  EFC9  F008         	goto	l1914
  1999   00126E  0A01               	xorlw	1	; case 1
  2000   001270  B4D8               	btfsc	status,2,c
  2001   001272  EFFA  F008         	goto	l1916
  2002   001276  EFC5  F008         	goto	l1912
  2003   00127A                     l1922:
  2004                           
  2005                           ;MCAL/GPIO/gpio.c: 57:     return ret;
  2006   00127A  5038               	movf	gpio_pin_logic_write@ret^0,w,c
  2007   00127C  0012               	return		;funcret
  2008   00127E                     __end_of_gpio_pin_logic_write:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _gpio_pin_direction_init *****************
  2012 ;; Defined at:
  2013 ;;		line 13 in file "MCAL/GPIO/gpio.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  my_pin          2    0[COMRAM] PTR const struct .
  2016 ;;		 -> LCD2.lcd_data(8), LCD2(10), LCD1.lcd_data(4), LCD1(6), 
  2017 ;;		 -> relay_initialize@rel_pin(1), led_init@my_pin(1), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  ret             1    8[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        9 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_lcd_4bit_intialize
  2039 ;;		_lcd_8bit_intialize
  2040 ;;		_gpio_pin_initialize
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text13
  2045   00100E                     __ptext13:
  2046                           	callstack 0
  2047   00100E                     _gpio_pin_direction_init:
  2048                           	callstack 29
  2049   00100E                     
  2050                           ;MCAL/GPIO/gpio.c: 14:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2051   00100E  0E01               	movlw	1
  2052   001010  6E37               	movwf	gpio_pin_direction_init@ret^0,c
  2053   001012                     
  2054                           ;MCAL/GPIO/gpio.c: 15:     if(((void*)0) == my_pin || my_pin->pin > 7){
  2055   001012  502F               	movf	gpio_pin_direction_init@my_pin^0,w,c
  2056   001014  1030               	iorwf	(gpio_pin_direction_init@my_pin+1)^0,w,c
  2057   001016  B4D8               	btfsc	status,2,c
  2058   001018  EF10  F008         	goto	u911
  2059   00101C  EF12  F008         	goto	u910
  2060   001020                     u911:
  2061   001020  EF23  F008         	goto	l2042
  2062   001024                     u910:
  2063   001024  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2064   001028  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2065   00102C  30DF               	rrcf	223,w,c
  2066   00102E  32E8               	rrcf	wreg,f,c
  2067   001030  32E8               	rrcf	wreg,f,c
  2068   001032  0B07               	andlw	7
  2069   001034  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2070   001036  0E07               	movlw	7
  2071   001038  6431               	cpfsgt	??_gpio_pin_direction_init^0,c
  2072   00103A  EF21  F008         	goto	u921
  2073   00103E  EF23  F008         	goto	u920
  2074   001042                     u921:
  2075   001042  EF86  F008         	goto	l2050
  2076   001046                     u920:
  2077   001046                     l2042:
  2078                           
  2079                           ;MCAL/GPIO/gpio.c: 16:         ret = (Std_ReturnType)0x00;
  2080   001046  0E00               	movlw	0
  2081   001048  6E37               	movwf	gpio_pin_direction_init@ret^0,c
  2082                           
  2083                           ;MCAL/GPIO/gpio.c: 17:     }
  2084   00104A  EFA7  F008         	goto	l2052
  2085   00104E                     l2044:
  2086                           
  2087                           ;MCAL/GPIO/gpio.c: 21:                 (*tris_regs[my_pin->port] &= ~(1<<my_pin->pin));
  2088   00104E  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2089   001052  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2090   001056  30DF               	rrcf	223,w,c
  2091   001058  32E8               	rrcf	wreg,f,c
  2092   00105A  32E8               	rrcf	wreg,f,c
  2093   00105C  0B07               	andlw	7
  2094   00105E  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2095   001060  0E01               	movlw	1
  2096   001062  6E32               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2097   001064  2A31               	incf	??_gpio_pin_direction_init^0,f,c
  2098   001066  EF37  F008         	goto	u934
  2099   00106A                     u935:
  2100   00106A  90D8               	bcf	status,0,c
  2101   00106C  3632               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2102   00106E                     u934:
  2103   00106E  2E31               	decfsz	??_gpio_pin_direction_init^0,f,c
  2104   001070  EF35  F008         	goto	u935
  2105   001074  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2106   001076  0AFF               	xorlw	255
  2107   001078  6E33               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2108   00107A  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2109   00107E  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2110   001082  50DF               	movf	223,w,c
  2111   001084  0B07               	andlw	7
  2112   001086  6E34               	movwf	(??_gpio_pin_direction_init+3)^0,c
  2113   001088  5034               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  2114   00108A  0D02               	mullw	2
  2115   00108C  0E15               	movlw	low _tris_regs
  2116   00108E  24F3               	addwf	243,w,c
  2117   001090  6ED9               	movwf	fsr2l,c
  2118   001092  0E00               	movlw	high _tris_regs
  2119   001094  20F4               	addwfc	prodh,w,c
  2120   001096  6EDA               	movwf	fsr2h,c
  2121   001098  CFDE F035          	movff	postinc2,??_gpio_pin_direction_init+4
  2122   00109C  CFDD F036          	movff	postdec2,??_gpio_pin_direction_init+5
  2123   0010A0  C035  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  2124   0010A4  C036  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  2125   0010A8  5033               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2126   0010AA  16DF               	andwf	indf2,f,c
  2127                           
  2128                           ;MCAL/GPIO/gpio.c: 22:                 break;
  2129   0010AC  EFA7  F008         	goto	l2052
  2130   0010B0                     l2046:
  2131                           
  2132                           ;MCAL/GPIO/gpio.c: 24:                 (*tris_regs[my_pin->port] |=(1<<my_pin->pin));
  2133   0010B0  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2134   0010B4  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2135   0010B8  30DF               	rrcf	223,w,c
  2136   0010BA  32E8               	rrcf	wreg,f,c
  2137   0010BC  32E8               	rrcf	wreg,f,c
  2138   0010BE  0B07               	andlw	7
  2139   0010C0  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2140   0010C2  0E01               	movlw	1
  2141   0010C4  6E32               	movwf	(??_gpio_pin_direction_init+1)^0,c
  2142   0010C6  2A31               	incf	??_gpio_pin_direction_init^0,f,c
  2143   0010C8  EF68  F008         	goto	u944
  2144   0010CC                     u945:
  2145   0010CC  90D8               	bcf	status,0,c
  2146   0010CE  3632               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  2147   0010D0                     u944:
  2148   0010D0  2E31               	decfsz	??_gpio_pin_direction_init^0,f,c
  2149   0010D2  EF66  F008         	goto	u945
  2150   0010D6  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2151   0010DA  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2152   0010DE  50DF               	movf	223,w,c
  2153   0010E0  0B07               	andlw	7
  2154   0010E2  6E33               	movwf	(??_gpio_pin_direction_init+2)^0,c
  2155   0010E4  5033               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  2156   0010E6  0D02               	mullw	2
  2157   0010E8  0E15               	movlw	low _tris_regs
  2158   0010EA  24F3               	addwf	243,w,c
  2159   0010EC  6ED9               	movwf	fsr2l,c
  2160   0010EE  0E00               	movlw	high _tris_regs
  2161   0010F0  20F4               	addwfc	prodh,w,c
  2162   0010F2  6EDA               	movwf	fsr2h,c
  2163   0010F4  CFDE F034          	movff	postinc2,??_gpio_pin_direction_init+3
  2164   0010F8  CFDD F035          	movff	postdec2,??_gpio_pin_direction_init+4
  2165   0010FC  C034  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  2166   001100  C035  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  2167   001104  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2168   001106  12DF               	iorwf	indf2,f,c
  2169                           
  2170                           ;MCAL/GPIO/gpio.c: 25:                 break;
  2171   001108  EFA7  F008         	goto	l2052
  2172   00110C                     l2050:
  2173   00110C  C02F  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  2174   001110  C030  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  2175   001114  BCDF               	btfsc	indf2,6,c
  2176   001116  EF8F  F008         	goto	u951
  2177   00111A  EF92  F008         	goto	u950
  2178   00111E                     u951:
  2179   00111E  0E01               	movlw	1
  2180   001120  EF93  F008         	goto	u960
  2181   001124                     u950:
  2182   001124  0E00               	movlw	0
  2183   001126                     u960:
  2184   001126  6E31               	movwf	??_gpio_pin_direction_init^0,c
  2185   001128  6A32               	clrf	(??_gpio_pin_direction_init+1)^0,c
  2186                           
  2187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2188                           ; Switch size 1, requested type "simple"
  2189                           ; Number of cases is 1, Range of values is 0 to 0
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte            4     3 (average)
  2193                           ;	Chosen strategy is simple_byte
  2194   00112A  5032               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  2195   00112C  0A00               	xorlw	0	; case 0
  2196   00112E  B4D8               	btfsc	status,2,c
  2197   001130  EF9C  F008         	goto	l2530
  2198   001134  EF23  F008         	goto	l2042
  2199   001138                     l2530:
  2200                           
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 2, Range of values is 0 to 1
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte            7     4 (average)
  2206                           ;	Chosen strategy is simple_byte
  2207   001138  5031               	movf	??_gpio_pin_direction_init^0,w,c
  2208   00113A  0A00               	xorlw	0	; case 0
  2209   00113C  B4D8               	btfsc	status,2,c
  2210   00113E  EF27  F008         	goto	l2044
  2211   001142  0A01               	xorlw	1	; case 1
  2212   001144  B4D8               	btfsc	status,2,c
  2213   001146  EF58  F008         	goto	l2046
  2214   00114A  EF23  F008         	goto	l2042
  2215   00114E                     l2052:
  2216                           
  2217                           ;MCAL/GPIO/gpio.c: 29:     return ret;
  2218   00114E  5037               	movf	gpio_pin_direction_init@ret^0,w,c
  2219   001150  0012               	return		;funcret
  2220   001152                     __end_of_gpio_pin_direction_init:
  2221                           	callstack 0
  2222                           
  2223                           	psect	rparam
  2224   000000                     
  2225                           	psect	idloc
  2226                           
  2227                           ;Config register IDLOC0 @ 0x200000
  2228                           ;	unspecified, using default values
  2229   200000                     	org	2097152
  2230   200000  FF                 	db	255
  2231                           
  2232                           ;Config register IDLOC1 @ 0x200001
  2233                           ;	unspecified, using default values
  2234   200001                     	org	2097153
  2235   200001  FF                 	db	255
  2236                           
  2237                           ;Config register IDLOC2 @ 0x200002
  2238                           ;	unspecified, using default values
  2239   200002                     	org	2097154
  2240   200002  FF                 	db	255
  2241                           
  2242                           ;Config register IDLOC3 @ 0x200003
  2243                           ;	unspecified, using default values
  2244   200003                     	org	2097155
  2245   200003  FF                 	db	255
  2246                           
  2247                           ;Config register IDLOC4 @ 0x200004
  2248                           ;	unspecified, using default values
  2249   200004                     	org	2097156
  2250   200004  FF                 	db	255
  2251                           
  2252                           ;Config register IDLOC5 @ 0x200005
  2253                           ;	unspecified, using default values
  2254   200005                     	org	2097157
  2255   200005  FF                 	db	255
  2256                           
  2257                           ;Config register IDLOC6 @ 0x200006
  2258                           ;	unspecified, using default values
  2259   200006                     	org	2097158
  2260   200006  FF                 	db	255
  2261                           
  2262                           ;Config register IDLOC7 @ 0x200007
  2263                           ;	unspecified, using default values
  2264   200007                     	org	2097159
  2265   200007  FF                 	db	255
  2266                           
  2267                           	psect	config
  2268                           
  2269                           ; Padding undefined space
  2270   300000                     	org	3145728
  2271   300000  FF                 	db	255
  2272                           
  2273                           ;Config register CONFIG1H @ 0x300001
  2274                           ;	unspecified, using default values
  2275                           ;	Oscillator Selection bits
  2276                           ;	OSC = 0x7, unprogrammed default
  2277                           ;	Fail-Safe Clock Monitor Enable bit
  2278                           ;	FCMEN = 0x0, unprogrammed default
  2279                           ;	Internal/External Oscillator Switchover bit
  2280                           ;	IESO = 0x0, unprogrammed default
  2281   300001                     	org	3145729
  2282   300001  07                 	db	7
  2283                           
  2284                           ;Config register CONFIG2L @ 0x300002
  2285                           ;	unspecified, using default values
  2286                           ;	Power-up Timer Enable bit
  2287                           ;	PWRT = 0x1, unprogrammed default
  2288                           ;	Brown-out Reset Enable bits
  2289                           ;	BOREN = 0x3, unprogrammed default
  2290                           ;	Brown Out Reset Voltage bits
  2291                           ;	BORV = 0x3, unprogrammed default
  2292   300002                     	org	3145730
  2293   300002  1F                 	db	31
  2294                           
  2295                           ;Config register CONFIG2H @ 0x300003
  2296                           ;	unspecified, using default values
  2297                           ;	Watchdog Timer Enable bit
  2298                           ;	WDT = 0x1, unprogrammed default
  2299                           ;	Watchdog Timer Postscale Select bits
  2300                           ;	WDTPS = 0xF, unprogrammed default
  2301   300003                     	org	3145731
  2302   300003  1F                 	db	31
  2303                           
  2304                           ; Padding undefined space
  2305   300004                     	org	3145732
  2306   300004  FF                 	db	255
  2307                           
  2308                           ;Config register CONFIG3H @ 0x300005
  2309                           ;	unspecified, using default values
  2310                           ;	CCP2 MUX bit
  2311                           ;	CCP2MX = 0x1, unprogrammed default
  2312                           ;	PORTB A/D Enable bit
  2313                           ;	PBADEN = 0x1, unprogrammed default
  2314                           ;	Low-Power Timer1 Oscillator Enable bit
  2315                           ;	LPT1OSC = 0x0, unprogrammed default
  2316                           ;	MCLR Pin Enable bit
  2317                           ;	MCLRE = 0x1, unprogrammed default
  2318   300005                     	org	3145733
  2319   300005  83                 	db	131
  2320                           
  2321                           ;Config register CONFIG4L @ 0x300006
  2322                           ;	unspecified, using default values
  2323                           ;	Stack Full/Underflow Reset Enable bit
  2324                           ;	STVREN = 0x1, unprogrammed default
  2325                           ;	Single-Supply ICSP Enable bit
  2326                           ;	LVP = 0x1, unprogrammed default
  2327                           ;	Extended Instruction Set Enable bit
  2328                           ;	XINST = 0x0, unprogrammed default
  2329                           ;	Background Debugger Enable bit
  2330                           ;	DEBUG = 0x1, unprogrammed default
  2331   300006                     	org	3145734
  2332   300006  85                 	db	133
  2333                           
  2334                           ; Padding undefined space
  2335   300007                     	org	3145735
  2336   300007  FF                 	db	255
  2337                           
  2338                           ;Config register CONFIG5L @ 0x300008
  2339                           ;	unspecified, using default values
  2340                           ;	Code Protection bit
  2341                           ;	CP0 = 0x1, unprogrammed default
  2342                           ;	Code Protection bit
  2343                           ;	CP1 = 0x1, unprogrammed default
  2344                           ;	Code Protection bit
  2345                           ;	CP2 = 0x1, unprogrammed default
  2346                           ;	Code Protection bit
  2347                           ;	CP3 = 0x1, unprogrammed default
  2348   300008                     	org	3145736
  2349   300008  0F                 	db	15
  2350                           
  2351                           ;Config register CONFIG5H @ 0x300009
  2352                           ;	unspecified, using default values
  2353                           ;	Boot Block Code Protection bit
  2354                           ;	CPB = 0x1, unprogrammed default
  2355                           ;	Data EEPROM Code Protection bit
  2356                           ;	CPD = 0x1, unprogrammed default
  2357   300009                     	org	3145737
  2358   300009  C0                 	db	192
  2359                           
  2360                           ;Config register CONFIG6L @ 0x30000A
  2361                           ;	unspecified, using default values
  2362                           ;	Write Protection bit
  2363                           ;	WRT0 = 0x1, unprogrammed default
  2364                           ;	Write Protection bit
  2365                           ;	WRT1 = 0x1, unprogrammed default
  2366                           ;	Write Protection bit
  2367                           ;	WRT2 = 0x1, unprogrammed default
  2368                           ;	Write Protection bit
  2369                           ;	WRT3 = 0x1, unprogrammed default
  2370   30000A                     	org	3145738
  2371   30000A  0F                 	db	15
  2372                           
  2373                           ;Config register CONFIG6H @ 0x30000B
  2374                           ;	unspecified, using default values
  2375                           ;	Configuration Register Write Protection bit
  2376                           ;	WRTC = 0x1, unprogrammed default
  2377                           ;	Boot Block Write Protection bit
  2378                           ;	WRTB = 0x1, unprogrammed default
  2379                           ;	Data EEPROM Write Protection bit
  2380                           ;	WRTD = 0x1, unprogrammed default
  2381   30000B                     	org	3145739
  2382   30000B  E0                 	db	224
  2383                           
  2384                           ;Config register CONFIG7L @ 0x30000C
  2385                           ;	unspecified, using default values
  2386                           ;	Table Read Protection bit
  2387                           ;	EBTR0 = 0x1, unprogrammed default
  2388                           ;	Table Read Protection bit
  2389                           ;	EBTR1 = 0x1, unprogrammed default
  2390                           ;	Table Read Protection bit
  2391                           ;	EBTR2 = 0x1, unprogrammed default
  2392                           ;	Table Read Protection bit
  2393                           ;	EBTR3 = 0x1, unprogrammed default
  2394   30000C                     	org	3145740
  2395   30000C  0F                 	db	15
  2396                           
  2397                           ;Config register CONFIG7H @ 0x30000D
  2398                           ;	unspecified, using default values
  2399                           ;	Boot Block Table Read Protection bit
  2400                           ;	EBTRB = 0x1, unprogrammed default
  2401   30000D                     	org	3145741
  2402   30000D  40                 	db	64
  2403                           tosu	equ	0xFFF
  2404                           tosh	equ	0xFFE
  2405                           tosl	equ	0xFFD
  2406                           stkptr	equ	0xFFC
  2407                           pclatu	equ	0xFFB
  2408                           pclath	equ	0xFFA
  2409                           pcl	equ	0xFF9
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodh	equ	0xFF4
  2415                           prodl	equ	0xFF3
  2416                           indf0	equ	0xFEF
  2417                           postinc0	equ	0xFEE
  2418                           postdec0	equ	0xFED
  2419                           preinc0	equ	0xFEC
  2420                           plusw0	equ	0xFEB
  2421                           fsr0h	equ	0xFEA
  2422                           fsr0l	equ	0xFE9
  2423                           wreg	equ	0xFE8
  2424                           indf1	equ	0xFE7
  2425                           postinc1	equ	0xFE6
  2426                           postdec1	equ	0xFE5
  2427                           preinc1	equ	0xFE4
  2428                           plusw1	equ	0xFE3
  2429                           fsr1h	equ	0xFE2
  2430                           fsr1l	equ	0xFE1
  2431                           bsr	equ	0xFE0
  2432                           indf2	equ	0xFDF
  2433                           postinc2	equ	0xFDE
  2434                           postdec2	equ	0xFDD
  2435                           preinc2	equ	0xFDC
  2436                           plusw2	equ	0xFDB
  2437                           fsr2h	equ	0xFDA
  2438                           fsr2l	equ	0xFD9
  2439                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    8
    Data        46
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     45     104
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S1203$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1203$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_8bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_8bit_send_custom_char@_chr	PTR const unsigned char  size(2) Largest target is 8
		 -> customchar(CODE[8]), 

    lcd_8bit_send_custom_char@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_8bit_intialize@lcd	PTR const struct . size(2) Largest target is 10
		 -> LCD2(COMRAM[10]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(COMRAM[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> LCD1(COMRAM[6]), 

    gpio_pin_logic_write@my_pin	PTR const struct . size(2) Largest target is 10
		 -> LCD2.lcd_data(COMRAM[8]), LCD2(COMRAM[10]), LCD1.lcd_data(COMRAM[4]), LCD1(COMRAM[6]), 
		 -> relay_turn_off@rel_pin(COMRAM[1]), relay_turn_on@rel_pin(COMRAM[1]), relay_initialize@rel_pin(COMRAM[1]), led_turn_off@my_pin(COMRAM[1]), 
		 -> led_turn_on@my_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_direction_init@my_pin	PTR const struct . size(2) Largest target is 10
		 -> LCD2.lcd_data(COMRAM[8]), LCD2(COMRAM[10]), LCD1.lcd_data(COMRAM[4]), LCD1(COMRAM[6]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_8bit_send_custom_char
    _lcd_8bit_send_custom_char->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_8bit_intialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_logic_write
    _lcd_4bit_intialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_logic_write
    _lcd_4bit_send_enable_signal->_gpio_pin_logic_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   76815
                 _lcd_4bit_intialize
                 _lcd_8bit_intialize
          _lcd_8bit_send_custom_char
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char                           11     4      7   45462
                                             35 COMRAM    10     3      7
            _lcd_8bit_send_char_data
        _lcd_8bit_send_char_data_pos
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data_pos                          6     1      5   22974
                                             29 COMRAM     6     1      5
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_set_cursor                                  7     3      4   12433
                                             22 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              9     6      3   10079
                                             13 COMRAM     9     6      3
               _gpio_pin_logic_write
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_intialize                                   6     4      2   12913
                                             22 COMRAM     6     4      2
            _gpio_pin_direction_init
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_command                                9     6      3   11751
                                             13 COMRAM     9     6      3
               _gpio_pin_logic_write
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_enable_signal                          3     1      2    4808
                                             10 COMRAM     3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   6     4      2   18440
                                             18 COMRAM     6     4      2
            _gpio_pin_direction_init
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_command                                4     1      3   17278
                                             14 COMRAM     4     1      3
               _gpio_pin_logic_write
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       4     1      3    5398
                                             10 COMRAM     4     1      3
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_enable_signal                          3     1      2    4960
                                             10 COMRAM     3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_logic_write                                10     7      3    4587
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_init                              9     7      2     711
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_4bit_intialize
     _gpio_pin_direction_init
     _lcd_4bit_send_command
       _gpio_pin_logic_write
       _lcd_4bit_send_enable_signal
         _gpio_pin_logic_write
       _lcd_send_4bits
         _gpio_pin_logic_write
   _lcd_8bit_intialize
     _gpio_pin_direction_init
     _lcd_8bit_send_command
       _gpio_pin_logic_write
       _lcd_8bit_send_enable_signal
         _gpio_pin_logic_write
   _lcd_8bit_send_custom_char
     _lcd_8bit_send_char_data
       _gpio_pin_logic_write
       _lcd_8bit_send_enable_signal
     _lcd_8bit_send_char_data_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command
     _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2D      68       1       81.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      68      39        0.0%
DATA                 0      0      68       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 06 00:15:32 2023

                      ?_lcd_send_4bits 0039          lcd_8bit_send_custom_char@_chr 0056  
                                  l331 13A0                                    l350 1832  
                                  l168 1150                                    l345 15FC  
                                  l409 156C                                    l338 168C  
                                  l370 1712                                    l187 127C  
                                  l291 1784                                    l286 14C4  
                                  l393 17EC                                    l396 1910  
                                  l399 18DC                                    u810 1168  
                                  u811 1164                                    u820 118A  
                                  u900 15EC                                    u821 1186  
                                  u901 15E8                                    u910 1024  
                                  u911 1020                                    u920 1046  
                                  u921 1042                                    u834 11B2  
                                  u850 1614                                    u835 11AE  
                                  u851 1610                                    u844 1214  
                                  u845 1210                                    u950 1124  
                                  u934 106E                                    u870 167C  
                                  u951 111E                                    u935 106A  
                                  u871 1678                                    u960 1126  
                                  u944 10D0                                    u864 165A  
                                  u880 1584                                    u945 10CC  
                                  u865 1656                                    u881 1580  
                                  u970 1726                                    u971 1722  
                                  u894 15CA                                    u990 1800  
                                  u895 15C6                                    u991 17FC  
               ??_gpio_pin_logic_write 0032    __end_of_lcd_4bit_send_enable_signal 1912  
          _lcd_4bit_send_enable_signal 18DE                                    prod 000FF3  
                                  wreg 000FE8                  relay_initialize@F3039 0064  
           gpio_pin_logic_write@my_pin 002F            __end_of_lcd_8bit_set_cursor 156E  
          lcd_send_4bits@_data_command 003B                                   l2002 15A0  
                                 l2010 15FA                                   l2100 13B8  
                                 l2004 15DA                                   l2020 14E8  
                                 l2110 13E0                                   l2102 13BC  
                                 l2006 15DC                                   l2022 1500  
                                 l2014 14C6                                   l2040 1024  
                                 l2120 142E                                   l2112 13FC  
                                 l2104 13DC                                   l2008 15EC  
                                 l2024 1518                                   l2016 14CA  
                                 l2200 16E8                                   l2050 110C  
                                 l2042 1046                                   l2130 1484  
                                 l2122 144E                                   l2114 13FE  
                                 l2018 14D0                                   l2026 1530  
                                 l2202 16EA                                   l2044 104E  
                                 l2052 114E                                   l2036 100E  
                                 l2060 1714                                   l2132 1494  
                                 l2124 1454                                   l2116 140E  
                                 l2140 127E                                   l2028 156A  
                                 l2204 16FA                                   l2046 10B0  
                                 l2038 1012                                   l2062 1714  
                                 l2134 14A4                                   l2126 1464  
                                 l2118 141E                                   l2142 1282  
                                 l2064 1726                                   l2136 14B4  
                                 l2128 1474                                   l2160 12EA  
                                 l2144 1294                                   l2066 172E  
                                 l2170 1340                                   l2162 12FA  
                                 l2154 12BC                                   l2146 1298  
                                 l2090 1808                                   l2068 1782  
                                 l2180 1390                                   l2172 1350  
                                 l2164 130A                                   l2156 12D8  
                                 l2148 12B8                                   l2092 1830  
                                 l2084 17EE                                   l2174 1360  
                                 l2166 132A                                   l2158 12DA  
                                 l2086 17EE                                   l2190 16A8  
                                 l2430 184C                                   l2096 13A2  
                                 l2176 1370                                   l2168 1330  
                                 l2088 1800                                   l2192 16BE  
                                 l2184 168E                                   l2530 1138  
                                 l2098 13A6                                   l2178 1380  
                                 l2186 1692                                   l2188 16A4  
                                 l2428 1834                                   l1910 1168  
                                 l2526 1544                                   l2198 16C2  
                                 l2528 1264                                   l1920 1250  
                                 l1912 118A                                   l1914 1192  
                                 l1922 127A                                   l1906 1152  
                                 l1930 18AA                                   l1916 11F4  
                                 l1908 1156                                   l1932 18AA  
                                 l1940 15FE                                   l1934 18BE  
                                 l1942 1602                                   l1936 18C4  
                                 l1960 167C                                   l1944 1614  
                                 l1970 179C                                   l1954 1630  
                                 l1962 168A                                   l1946 161C  
                                 l1980 18DE                                   l1972 17B4  
                                 l1956 166A                                   l1948 162C  
                                 l1982 18F2                                   l1974 17CE  
                                 l1966 1786                                   l1958 166C  
                                 l1990 1572                                   l1984 18F8  
                                 l1968 1786                                   l1992 1584  
                                 l1978 18DE                                   l1994 158C  
                                 l1996 159C                                   l1988 156E  
                                 STR_1 1009                                   _LCD1 0029  
                                 _LCD2 001F                                   u1000 13B8  
                                 u1001 13B4                                   u1010 140E  
                                 u1011 140A                                   u1020 1294  
                                 u1021 1290                                   u1030 12EA  
                                 u1031 12E6                                   u1040 16A4  
                                 u1041 16A0                                   u1050 16FA  
                                 u1051 16F6     lcd_8bit_send_command@l_pin_counter 0044  
                                 _LATA 000F89                                   _LATB 000F8A  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 u1337 12F0                                   _LATE 000F8D  
                                 u1347 1310                                   u1357 132C  
                                 u1367 1414                                   u1377 1434  
                                 u1387 1450          ??_lcd_4bit_send_enable_signal 003B  
                                 _main 1834                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9               ?_gpio_pin_direction_init 002F  
                                 prodl 000FF3                                   start 0000  
        __end_of_lcd_8bit_send_command 168E                           ___param_bank 000000  
                _lcd_4bit_send_command 1714                  lcd_4bit_intialize@lcd 0041  
                lcd_4bit_intialize@ret 0045                                  ?_main 002F  
                  relay_turn_off@F3049 0062                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTC 000F82  
                                _PORTD 000F83                                  _PORTE 000F84  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TRISE 000F96            ??_lcd_8bit_send_custom_char 0059  
             ?_lcd_8bit_send_char_data 003C    __end_of_lcd_8bit_send_char_data_pos 1834  
          _lcd_8bit_send_char_data_pos 17EE                                  tablat 000FF5  
                                status 000FD8          ??_lcd_8bit_send_char_data_pos 0051  
                      __initialization 1874                           __end_of_main 1874  
               lcd_8bit_set_cursor@lcd 0045                 lcd_8bit_set_cursor@ret 004B  
               lcd_8bit_set_cursor@row 0047                                 ??_main 005C  
                        __activetblptr 000002                       led_turn_on@F3050 0067  
            _lcd_8bit_send_custom_char 168E                 ?_lcd_4bit_send_command 003D  
                               clear_0 189A                                 isa$std 000001  
            gpio_pin_logic_write@logic 0031         lcd_8bit_send_char_data_pos@lcd 004C  
       lcd_8bit_send_char_data_pos@ret 0051         lcd_8bit_send_char_data_pos@row 004E  
                        led_init@F3045 0068                           __pdataCOMRAM 0001  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                           __accesstop 0080                __end_of__initialization 18A0  
                        ___rparam_used 000001                       ??_lcd_send_4bits 003C  
      lcd_8bit_send_custom_char@column 0055                         __pcstackCOMRAM 002F  
             lcd_4bit_send_command@lcd 003D               lcd_4bit_send_command@ret 0040  
                   _lcd_8bit_intialize 127E                    ?_lcd_8bit_intialize 0045  
                 ??_lcd_8bit_intialize 0047                      led_turn_off@F3055 0066  
                      led_toggle@F3060 0065    __end_of_lcd_8bit_send_enable_signal 18DE  
          _lcd_8bit_send_enable_signal 18AA         lcd_8bit_send_enable_signal@lcd 0039  
       lcd_8bit_send_enable_signal@ret 003B          ??_lcd_8bit_send_enable_signal 003B  
                              __Hparam 0000                                __Lparam 0000  
                _lcd_8bit_send_command 15FE                           __psmallconst 1000  
                              __pcinit 1874                                __ramtop 1000  
                              __ptext0 1834                                __ptext1 168E  
                              __ptext2 17EE                                __ptext3 14C6  
                              __ptext4 156E                                __ptext5 127E  
                              __ptext6 15FE                                __ptext7 18AA  
                              __ptext8 13A2                                __ptext9 1714  
                           _customchar 1001        lcd_8bit_send_char_data_pos@data 0050  
lcd_8bit_intialize@l_data_pins_counter 004A  lcd_4bit_intialize@l_data_pins_counter 0046  
                 end_of_initialization 18A0                      lcd_send_4bits@lcd 0039  
                    lcd_send_4bits@ret 003C                          __Lmediumconst 0000  
           __end_of_lcd_4bit_intialize 14C6                ??_lcd_4bit_send_command 0040  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
    __end_of_lcd_8bit_send_custom_char 1714       lcd_8bit_send_custom_char@mem_pos 0058  
                   relay_turn_on@F3044 0063                 ?_lcd_8bit_send_command 003C  
        convert_uint16_to_string@F3195 005C                _gpio_pin_direction_init 100E  
                        __pidataCOMRAM 1912                    start_initialization 1874  
         ?_lcd_4bit_send_enable_signal 0039                _lcd_8bit_send_char_data 156E  
                  _lcd_8bit_set_cursor 14C6           lcd_4bit_send_command@command 003F  
             lcd_8bit_send_command@lcd 003C               lcd_8bit_send_command@ret 0043  
                          __pbssCOMRAM 005C           ?_lcd_8bit_send_char_data_pos 004C  
                 ?_lcd_8bit_set_cursor 0045           __end_of_gpio_pin_logic_write 127E  
            ??_gpio_pin_direction_init 0031            lcd_8bit_send_char_data@data 003E  
                          __smallconst 1000                  ??_lcd_8bit_set_cursor 0049  
         lcd_8bit_send_custom_char@lcd 0052           lcd_8bit_send_custom_char@row 0054  
            ??_lcd_8bit_send_char_data 003F          __end_of_lcd_4bit_send_command 1786  
 lcd_8bit_send_char_data@l_pin_counter 0044                  lcd_8bit_intialize@lcd 0045  
                   _lcd_4bit_intialize 13A2                  lcd_8bit_intialize@ret 0049  
                            _port_regs 000B      lcd_8bit_send_char_data_pos@column 004F  
                            _tris_regs 0015                    ?_lcd_4bit_intialize 0041  
      __end_of_gpio_pin_direction_init 1152              lcd_8bit_set_cursor@coulmn 0048  
                            copy_data0 1888                ??_lcd_8bit_send_command 003F  
 lcd_8bit_send_custom_char@lcd_counter 005B                   ??_lcd_4bit_intialize 0043  
                             __Hrparam 0000                               __Lrparam 0000  
      __end_of_lcd_8bit_send_char_data 15FE             ?_lcd_8bit_send_custom_char 0052  
                 _gpio_pin_logic_write 1152             lcd_8bit_send_char_data@lcd 003C  
           lcd_8bit_send_char_data@ret 0043                               __ptext10 1786  
                             __ptext11 18DE                               __ptext12 1152  
                             __ptext13 100E                               _lat_regs 0001  
                   __end_of_customchar 1009                               isa$xinst 000000  
                       _lcd_send_4bits 1786                  ?_gpio_pin_logic_write 002F  
         ?_lcd_8bit_send_enable_signal 0039                gpio_pin_logic_write@ret 0038  
       lcd_4bit_send_enable_signal@lcd 0039         lcd_4bit_send_enable_signal@ret 003B  
               __end_of_lcd_send_4bits 17EE          gpio_pin_direction_init@my_pin 002F  
           gpio_pin_direction_init@ret 0037           lcd_8bit_send_command@command 003E  
           __end_of_lcd_8bit_intialize 13A2  
