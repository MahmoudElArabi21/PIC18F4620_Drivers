

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 06 05:01:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   001720                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _lat_regs
    67   001720  89                 	db	137
    68   001721  0F                 	db	15
    69   001722  8A                 	db	138
    70   001723  0F                 	db	15
    71   001724  8B                 	db	139
    72   001725  0F                 	db	15
    73   001726  8C                 	db	140
    74   001727  0F                 	db	15
    75   001728  8D                 	db	141
    76   001729  0F                 	db	15
    77                           
    78                           ;initializer for _port_regs
    79   00172A  80                 	db	128
    80   00172B  0F                 	db	15
    81   00172C  81                 	db	129
    82   00172D  0F                 	db	15
    83   00172E  82                 	db	130
    84   00172F  0F                 	db	15
    85   001730  83                 	db	131
    86   001731  0F                 	db	15
    87   001732  84                 	db	132
    88   001733  0F                 	db	15
    89                           
    90                           ;initializer for _tris_regs
    91   001734  92                 	db	146
    92   001735  0F                 	db	15
    93   001736  93                 	db	147
    94   001737  0F                 	db	15
    95   001738  94                 	db	148
    96   001739  0F                 	db	15
    97   00173A  95                 	db	149
    98   00173B  0F                 	db	15
    99   00173C  96                 	db	150
   100   00173D  0F                 	db	15
   101                           
   102                           ;initializer for _led2
   103   00173E  08                 	db	8
   104                           
   105                           ;initializer for _keypad
   106   00173F  02                 	db	2
   107   001740  0A                 	db	10
   108   001741  12                 	db	18
   109   001742  1A                 	db	26
   110   001743  62                 	db	98
   111   001744  6A                 	db	106
   112   001745  72                 	db	114
   113   001746  7A                 	db	122
   114                           
   115                           	psect	smallconst
   116   001000                     __psmallconst:
   117                           	callstack 0
   118   001000  00                 	db	0
   119   001001                     _btn_values:
   120                           	callstack 0
   121   001001  37                 	db	55
   122   001002  38                 	db	56
   123   001003  39                 	db	57
   124   001004  2F                 	db	47
   125   001005  34                 	db	52
   126   001006  35                 	db	53
   127   001007  36                 	db	54
   128   001008  2A                 	db	42
   129   001009  31                 	db	49
   130   00100A  32                 	db	50
   131   00100B  33                 	db	51
   132   00100C  2D                 	db	45
   133   00100D  23                 	db	35
   134   00100E  30                 	db	48
   135   00100F  3D                 	db	61
   136   001010  2B                 	db	43
   137   001011                     __end_of_btn_values:
   138                           	callstack 0
   139   000000                     _LATA	set	3977
   140   000000                     _PORTE	set	3972
   141   000000                     _PORTD	set	3971
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _TRISA	set	3986
   146   000000                     _TRISE	set	3990
   147   000000                     _TRISD	set	3989
   148   000000                     _TRISC	set	3988
   149   000000                     _TRISB	set	3987
   150   000000                     _LATE	set	3981
   151   000000                     _LATD	set	3980
   152   000000                     _LATC	set	3979
   153   000000                     _LATB	set	3978
   154   001011                     STR_1:
   155   001011  25                 	db	37
   156   001012  69                 	db	105	;'i'
   157   001013  00                 	db	0
   158   001014  00                 	db	0	; dummy byte at the end
   159   000000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163   0016EA                     __pcinit:
   164                           	callstack 0
   165   0016EA                     start_initialization:
   166                           	callstack 0
   167   0016EA                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Initialize objects allocated to COMRAM (39 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172   0016EA  0E20               	movlw	low __pidataCOMRAM
   173   0016EC  6EF6               	movwf	tblptrl,c
   174   0016EE  0E17               	movlw	high __pidataCOMRAM
   175   0016F0  6EF7               	movwf	tblptrh,c
   176   0016F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177   0016F4  6EF8               	movwf	tblptru,c
   178   0016F6  EE00  F001         	lfsr	0,__pdataCOMRAM
   179   0016FA  EE10 F027          	lfsr	1,39
   180   0016FE                     copy_data0:
   181   0016FE  0009               	tblrd		*+
   182   001700  CFF5 FFEE          	movff	tablat,postinc0
   183   001704  50E5               	movf	postdec1,w,c
   184   001706  50E1               	movf	fsr1l,w,c
   185   001708  E1FA               	bnz	copy_data0
   186                           
   187                           ; Clear objects allocated to COMRAM (14 bytes)
   188   00170A  EE00  F03E         	lfsr	0,__pbssCOMRAM
   189   00170E  0E0E               	movlw	14
   190   001710                     clear_0:
   191   001710  6AEE               	clrf	postinc0,c
   192   001712  06E8               	decf	wreg,f,c
   193   001714  E1FD               	bnz	clear_0
   194   001716                     end_of_initialization:
   195                           	callstack 0
   196   001716                     __end_of__initialization:
   197                           	callstack 0
   198   001716  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199   001718  6EF8               	movwf	tblptru,c
   200   00171A  0100               	movlb	0
   201   00171C  EFAC  F00A         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204   00003E                     __pbssCOMRAM:
   205                           	callstack 0
   206   00003E                     	ds	6
   207   000044                     relay_turn_off@F3049:
   208                           	callstack 0
   209   000044                     	ds	1
   210   000045                     relay_turn_on@F3044:
   211                           	callstack 0
   212   000045                     	ds	1
   213   000046                     relay_initialize@F3039:
   214                           	callstack 0
   215   000046                     	ds	1
   216   000047                     led_toggle@F3060:
   217                           	callstack 0
   218   000047                     	ds	1
   219   000048                     led_turn_off@F3055:
   220                           	callstack 0
   221   000048                     	ds	1
   222   000049                     led_turn_on@F3050:
   223                           	callstack 0
   224   000049                     	ds	1
   225   00004A                     led_init@F3045:
   226                           	callstack 0
   227   00004A                     	ds	1
   228   00004B                     _led1:
   229                           	callstack 0
   230   00004B                     	ds	1
   231                           
   232                           	psect	dataCOMRAM
   233   000001                     __pdataCOMRAM:
   234                           	callstack 0
   235   000001                     _lat_regs:
   236                           	callstack 0
   237   000001                     	ds	10
   238   00000B                     _port_regs:
   239                           	callstack 0
   240   00000B                     	ds	10
   241   000015                     _tris_regs:
   242                           	callstack 0
   243   000015                     	ds	10
   244   00001F                     _led2:
   245                           	callstack 0
   246   00001F                     	ds	1
   247   000020                     _keypad:
   248                           	callstack 0
   249   000020                     	ds	8
   250                           
   251                           	psect	cstackCOMRAM
   252   000028                     __pcstackCOMRAM:
   253                           	callstack 0
   254   000028                     gpio_pin_direction_init@my_pin:
   255                           	callstack 0
   256   000028                     gpio_pin_logic_write@my_pin:
   257                           	callstack 0
   258   000028                     gpio_pin_logic_read@my_pin:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262   000028                     	ds	2
   263   00002A                     ??_gpio_pin_direction_init:
   264   00002A                     gpio_pin_logic_write@logic:
   265                           	callstack 0
   266   00002A                     gpio_pin_logic_read@retlogic:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x2
   270   00002A                     	ds	1
   271   00002B                     ??_gpio_pin_logic_write:
   272                           
   273                           ; 1 bytes @ 0x3
   274   00002B                     	ds	1
   275   00002C                     ??_gpio_pin_logic_read:
   276                           
   277                           ; 1 bytes @ 0x4
   278   00002C                     	ds	4
   279   000030                     gpio_pin_direction_init@ret:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x8
   283   000030                     	ds	1
   284   000031                     gpio_pin_logic_write@ret:
   285                           	callstack 0
   286   000031                     gpio_pin_logic_read@ret:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x9
   290   000031                     	ds	1
   291   000032                     led_turn_on@my_led:
   292                           	callstack 0
   293   000032                     led_turn_off@my_led:
   294                           	callstack 0
   295   000032                     gpio_pin_initialize@my_pin:
   296                           	callstack 0
   297   000032                     keypad_get_value@_keypad_obj:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xA
   301   000032                     	ds	2
   302   000034                     ??_led_turn_on:
   303   000034                     ??_led_turn_off:
   304   000034                     gpio_pin_initialize@ret:
   305                           	callstack 0
   306   000034                     keypad_get_value@value:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xC
   310   000034                     	ds	1
   311   000035                     led_turn_on@my_pin:
   312                           	callstack 0
   313   000035                     led_turn_off@my_pin:
   314                           	callstack 0
   315   000035                     led_init@my_led:
   316                           	callstack 0
   317   000035                     keypad_initialize@_keypad_obj:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xD
   321   000035                     	ds	1
   322   000036                     ??_keypad_get_value:
   323                           
   324                           ; 1 bytes @ 0xE
   325   000036                     	ds	1
   326   000037                     ??_keypad_initialize:
   327   000037                     ??_led_init:
   328                           
   329                           ; 1 bytes @ 0xF
   330   000037                     	ds	1
   331   000038                     led_init@ret:
   332                           	callstack 0
   333   000038                     keypad_get_value@ret:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x10
   337   000038                     	ds	1
   338   000039                     led_init@my_pin:
   339                           	callstack 0
   340   000039                     keypad_initialize@ret:
   341                           	callstack 0
   342   000039                     keypad_get_value@column_logic:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x11
   346   000039                     	ds	1
   347   00003A                     keypad_initialize@rows_counter:
   348                           	callstack 0
   349   00003A                     keypad_get_value@l_counter:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x12
   353   00003A                     	ds	1
   354   00003B                     keypad_initialize@columns_counter:
   355                           	callstack 0
   356   00003B                     keypad_get_value@l_rows_counter:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x13
   360   00003B                     	ds	1
   361   00003C                     keypad_get_value@l_columns_counter:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x14
   365   00003C                     	ds	1
   366   00003D                     main@retval:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x15
   370   00003D                     	ds	1
   371                           
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 48 in file "app.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  retval          1   21[COMRAM] unsigned char 
   382 ;;  ret             1    0        unsigned char 
   383 ;; Return value:  Size  Location     Type
   384 ;;                  2  419[None  ] int 
   385 ;; Registers used:
   386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   393 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;Total ram usage:        1 bytes
   397 ;; Hardware stack levels required when called: 3
   398 ;; This function calls:
   399 ;;		_keypad_get_value
   400 ;;		_keypad_initialize
   401 ;;		_led_init
   402 ;;		_led_turn_off
   403 ;;		_led_turn_on
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text0
   410   001558                     __ptext0:
   411                           	callstack 0
   412   001558                     _main:
   413                           	callstack 28
   414   001558  0E20               	movlw	low _keypad
   415   00155A  6E35               	movwf	keypad_initialize@_keypad_obj^0,c
   416   00155C  0E00               	movlw	high _keypad
   417   00155E  6E36               	movwf	(keypad_initialize@_keypad_obj+1)^0,c
   418   001560  EC2D  F00A         	call	_keypad_initialize	;wreg free
   419   001564  0E4B               	movlw	low _led1
   420   001566  6E35               	movwf	led_init@my_led^0,c
   421   001568  0E00               	movlw	high _led1
   422   00156A  6E36               	movwf	(led_init@my_led+1)^0,c
   423   00156C  EC6D  F00A         	call	_led_init	;wreg free
   424                           
   425                           ;app.c: 53:     uint8 retval = 0;
   426   001570  0E00               	movlw	0
   427   001572  6E3D               	movwf	main@retval^0,c
   428   001574                     l2788:
   429   001574  0E20               	movlw	low _keypad
   430   001576  6E32               	movwf	keypad_get_value@_keypad_obj^0,c
   431   001578  0E00               	movlw	high _keypad
   432   00157A  6E33               	movwf	(keypad_get_value@_keypad_obj+1)^0,c
   433   00157C  0E3D               	movlw	low main@retval
   434   00157E  6E34               	movwf	keypad_get_value@value^0,c
   435   001580  0E00               	movlw	high main@retval
   436   001582  6E35               	movwf	(keypad_get_value@value+1)^0,c
   437   001584  EC43  F009         	call	_keypad_get_value	;wreg free
   438   001588                     
   439                           ;app.c: 56:         if(retval == '7'){
   440   001588  0E37               	movlw	55
   441   00158A  183D               	xorwf	main@retval^0,w,c
   442   00158C  A4D8               	btfss	status,2,c
   443   00158E  EFCB  F00A         	goto	u1601
   444   001592  EFCD  F00A         	goto	u1600
   445   001596                     u1601:
   446   001596  EFD3  F00A         	goto	l2794
   447   00159A                     u1600:
   448   00159A                     
   449                           ;app.c: 57:             led_turn_on(&led1);
   450   00159A  0E4B               	movlw	low _led1
   451   00159C  6E32               	movwf	led_turn_on@my_led^0,c
   452   00159E  0E00               	movlw	high _led1
   453   0015A0  6E33               	movwf	(led_turn_on@my_led+1)^0,c
   454   0015A2  ECE6  F00A         	call	_led_turn_on	;wreg free
   455   0015A6                     l2794:
   456                           
   457                           ;app.c: 59:         if(retval == '8'){
   458   0015A6  0E38               	movlw	56
   459   0015A8  183D               	xorwf	main@retval^0,w,c
   460   0015AA  A4D8               	btfss	status,2,c
   461   0015AC  EFDA  F00A         	goto	u1611
   462   0015B0  EFDC  F00A         	goto	u1610
   463   0015B4                     u1611:
   464   0015B4  EFBA  F00A         	goto	l2788
   465   0015B8                     u1610:
   466   0015B8                     
   467                           ;app.c: 60:             led_turn_off(&led1);
   468   0015B8  0E4B               	movlw	low _led1
   469   0015BA  6E32               	movwf	led_turn_off@my_led^0,c
   470   0015BC  0E00               	movlw	high _led1
   471   0015BE  6E33               	movwf	(led_turn_off@my_led+1)^0,c
   472   0015C0  EC1B  F00B         	call	_led_turn_off	;wreg free
   473                           
   474                           ;app.c: 61:         }
   475   0015C4  EFBA  F00A         	goto	l2788
   476   0015C8  EF00  F000         	goto	start
   477   0015CC                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _led_turn_on *****************
   481 ;; Defined at:
   482 ;;		line 15 in file "ECU_L/LED/led.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  my_led          2   10[COMRAM] PTR const struct .
   485 ;;		 -> led1(1), 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  my_pin          1   13[COMRAM] struct .
   488 ;;  ret             1    0        unsigned char 
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      unsigned char 
   491 ;; Registers used:
   492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        4 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_gpio_pin_logic_write
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text1
   513   0015CC                     __ptext1:
   514                           	callstack 0
   515   0015CC                     _led_turn_on:
   516                           	callstack 29
   517   0015CC                     
   518                           ;ECU_L/LED/led.c: 17:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_high};
   519   0015CC  C049  F035         	movff	led_turn_on@F3050,led_turn_on@my_pin
   520   0015D0  C032  FFD9         	movff	led_turn_on@my_led,fsr2l
   521   0015D4  C033  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   522   0015D8  50DF               	movf	223,w,c
   523   0015DA  0B07               	andlw	7
   524   0015DC  6E34               	movwf	??_led_turn_on^0,c
   525   0015DE  5035               	movf	led_turn_on@my_pin^0,w,c
   526   0015E0  1834               	xorwf	??_led_turn_on^0,w,c
   527   0015E2  0BF8               	andlw	-8
   528   0015E4  1834               	xorwf	??_led_turn_on^0,w,c
   529   0015E6  6E35               	movwf	led_turn_on@my_pin^0,c
   530   0015E8  C032  FFD9         	movff	led_turn_on@my_led,fsr2l
   531   0015EC  C033  FFDA         	movff	led_turn_on@my_led+1,fsr2h
   532   0015F0  30DF               	rrcf	223,w,c
   533   0015F2  32E8               	rrcf	wreg,f,c
   534   0015F4  32E8               	rrcf	wreg,f,c
   535   0015F6  0B07               	andlw	7
   536   0015F8  6E34               	movwf	??_led_turn_on^0,c
   537   0015FA  4634               	rlncf	??_led_turn_on^0,f,c
   538   0015FC  4634               	rlncf	??_led_turn_on^0,f,c
   539   0015FE  4634               	rlncf	??_led_turn_on^0,f,c
   540   001600  5035               	movf	led_turn_on@my_pin^0,w,c
   541   001602  1834               	xorwf	??_led_turn_on^0,w,c
   542   001604  0BC7               	andlw	-57
   543   001606  1834               	xorwf	??_led_turn_on^0,w,c
   544   001608  6E35               	movwf	led_turn_on@my_pin^0,c
   545   00160A  9C35               	bcf	led_turn_on@my_pin^0,6,c
   546   00160C  8E35               	bsf	led_turn_on@my_pin^0,7,c
   547   00160E                     
   548                           ;ECU_L/LED/led.c: 18:     if(my_led == ((void*)0)){
   549   00160E  5032               	movf	led_turn_on@my_led^0,w,c
   550   001610  1033               	iorwf	(led_turn_on@my_led+1)^0,w,c
   551   001612  A4D8               	btfss	status,2,c
   552   001614  EF0E  F00B         	goto	u1211
   553   001618  EF10  F00B         	goto	u1210
   554   00161C                     u1211:
   555   00161C  EF12  F00B         	goto	l2312
   556   001620                     u1210:
   557   001620                     
   558                           ;ECU_L/LED/led.c: 20:     }
   559   001620  EF1A  F00B         	goto	l245
   560   001624                     l2312:
   561   001624  0E35               	movlw	low led_turn_on@my_pin
   562   001626  6E28               	movwf	gpio_pin_logic_write@my_pin^0,c
   563   001628  0E00               	movlw	high led_turn_on@my_pin
   564   00162A  6E29               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   565   00162C  0E01               	movlw	1
   566   00162E  6E2A               	movwf	gpio_pin_logic_write@logic^0,c
   567   001630  ECAD  F008         	call	_gpio_pin_logic_write	;wreg free
   568   001634                     l245:
   569   001634  0012               	return		;funcret
   570   001636                     __end_of_led_turn_on:
   571                           	callstack 0
   572                           
   573 ;; *************** function _led_turn_off *****************
   574 ;; Defined at:
   575 ;;		line 26 in file "ECU_L/LED/led.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  my_led          2   10[COMRAM] PTR const struct .
   578 ;;		 -> led1(1), 
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  my_pin          1   13[COMRAM] struct .
   581 ;;  ret             1    0        unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      unsigned char 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        4 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 1
   598 ;; This function calls:
   599 ;;		_gpio_pin_logic_write
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text2
   606   001636                     __ptext2:
   607                           	callstack 0
   608   001636                     _led_turn_off:
   609                           	callstack 29
   610   001636                     
   611                           ;ECU_L/LED/led.c: 28:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio
      +                          _output, gpio_low};
   612   001636  C048  F035         	movff	led_turn_off@F3055,led_turn_off@my_pin
   613   00163A  C032  FFD9         	movff	led_turn_off@my_led,fsr2l
   614   00163E  C033  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   615   001642  50DF               	movf	223,w,c
   616   001644  0B07               	andlw	7
   617   001646  6E34               	movwf	??_led_turn_off^0,c
   618   001648  5035               	movf	led_turn_off@my_pin^0,w,c
   619   00164A  1834               	xorwf	??_led_turn_off^0,w,c
   620   00164C  0BF8               	andlw	-8
   621   00164E  1834               	xorwf	??_led_turn_off^0,w,c
   622   001650  6E35               	movwf	led_turn_off@my_pin^0,c
   623   001652  C032  FFD9         	movff	led_turn_off@my_led,fsr2l
   624   001656  C033  FFDA         	movff	led_turn_off@my_led+1,fsr2h
   625   00165A  30DF               	rrcf	223,w,c
   626   00165C  32E8               	rrcf	wreg,f,c
   627   00165E  32E8               	rrcf	wreg,f,c
   628   001660  0B07               	andlw	7
   629   001662  6E34               	movwf	??_led_turn_off^0,c
   630   001664  4634               	rlncf	??_led_turn_off^0,f,c
   631   001666  4634               	rlncf	??_led_turn_off^0,f,c
   632   001668  4634               	rlncf	??_led_turn_off^0,f,c
   633   00166A  5035               	movf	led_turn_off@my_pin^0,w,c
   634   00166C  1834               	xorwf	??_led_turn_off^0,w,c
   635   00166E  0BC7               	andlw	-57
   636   001670  1834               	xorwf	??_led_turn_off^0,w,c
   637   001672  6E35               	movwf	led_turn_off@my_pin^0,c
   638   001674  9C35               	bcf	led_turn_off@my_pin^0,6,c
   639   001676  9E35               	bcf	led_turn_off@my_pin^0,7,c
   640   001678                     
   641                           ;ECU_L/LED/led.c: 29:     if(my_led == ((void*)0)){
   642   001678  5032               	movf	led_turn_off@my_led^0,w,c
   643   00167A  1033               	iorwf	(led_turn_off@my_led+1)^0,w,c
   644   00167C  A4D8               	btfss	status,2,c
   645   00167E  EF43  F00B         	goto	u1221
   646   001682  EF45  F00B         	goto	u1220
   647   001686                     u1221:
   648   001686  EF47  F00B         	goto	l2332
   649   00168A                     u1220:
   650   00168A                     
   651                           ;ECU_L/LED/led.c: 31:     }
   652   00168A  EF4F  F00B         	goto	l252
   653   00168E                     l2332:
   654   00168E  0E35               	movlw	low led_turn_off@my_pin
   655   001690  6E28               	movwf	gpio_pin_logic_write@my_pin^0,c
   656   001692  0E00               	movlw	high led_turn_off@my_pin
   657   001694  6E29               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
   658   001696  0E00               	movlw	0
   659   001698  6E2A               	movwf	gpio_pin_logic_write@logic^0,c
   660   00169A  ECAD  F008         	call	_gpio_pin_logic_write	;wreg free
   661   00169E                     l252:
   662   00169E  0012               	return		;funcret
   663   0016A0                     __end_of_led_turn_off:
   664                           	callstack 0
   665                           
   666 ;; *************** function _led_init *****************
   667 ;; Defined at:
   668 ;;		line 4 in file "ECU_L/LED/led.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  my_led          2   13[COMRAM] PTR const struct .
   671 ;;		 -> led1(1), 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  my_pin          1   17[COMRAM] struct .
   674 ;;  ret             1   16[COMRAM] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      unsigned char 
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;Total ram usage:        5 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 2
   691 ;; This function calls:
   692 ;;		_gpio_pin_initialize
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text3
   699   0014DA                     __ptext3:
   700                           	callstack 0
   701   0014DA                     _led_init:
   702                           	callstack 28
   703   0014DA                     
   704                           ;ECU_L/LED/led.c: 6:     pin_config_t my_pin = {my_led->led_port, my_led->led_pin, gpio_
      +                          output, my_led->led_status};
   705   0014DA  C04A  F039         	movff	led_init@F3045,led_init@my_pin
   706   0014DE  C035  FFD9         	movff	led_init@my_led,fsr2l
   707   0014E2  C036  FFDA         	movff	led_init@my_led+1,fsr2h
   708   0014E6  50DF               	movf	223,w,c
   709   0014E8  0B07               	andlw	7
   710   0014EA  6E37               	movwf	??_led_init^0,c
   711   0014EC  5039               	movf	led_init@my_pin^0,w,c
   712   0014EE  1837               	xorwf	??_led_init^0,w,c
   713   0014F0  0BF8               	andlw	-8
   714   0014F2  1837               	xorwf	??_led_init^0,w,c
   715   0014F4  6E39               	movwf	led_init@my_pin^0,c
   716   0014F6  C035  FFD9         	movff	led_init@my_led,fsr2l
   717   0014FA  C036  FFDA         	movff	led_init@my_led+1,fsr2h
   718   0014FE  30DF               	rrcf	223,w,c
   719   001500  32E8               	rrcf	wreg,f,c
   720   001502  32E8               	rrcf	wreg,f,c
   721   001504  0B07               	andlw	7
   722   001506  6E37               	movwf	??_led_init^0,c
   723   001508  4637               	rlncf	??_led_init^0,f,c
   724   00150A  4637               	rlncf	??_led_init^0,f,c
   725   00150C  4637               	rlncf	??_led_init^0,f,c
   726   00150E  5039               	movf	led_init@my_pin^0,w,c
   727   001510  1837               	xorwf	??_led_init^0,w,c
   728   001512  0BC7               	andlw	-57
   729   001514  1837               	xorwf	??_led_init^0,w,c
   730   001516  6E39               	movwf	led_init@my_pin^0,c
   731   001518  9C39               	bcf	led_init@my_pin^0,6,c
   732   00151A  C035  FFD9         	movff	led_init@my_led,fsr2l
   733   00151E  C036  FFDA         	movff	led_init@my_led+1,fsr2h
   734   001522  ACDF               	btfss	indf2,6,c
   735   001524  D002               	bra	u1195
   736   001526  8E39               	bsf	led_init@my_pin^0,7,c
   737   001528  D001               	bra	u1197
   738   00152A                     u1195:
   739   00152A  9E39               	bcf	led_init@my_pin^0,7,c
   740   00152C                     u1197:
   741   00152C                     
   742                           ;ECU_L/LED/led.c: 7:     if(my_led == ((void*)0)){
   743   00152C  5035               	movf	led_init@my_led^0,w,c
   744   00152E  1036               	iorwf	(led_init@my_led+1)^0,w,c
   745   001530  A4D8               	btfss	status,2,c
   746   001532  EF9D  F00A         	goto	u1201
   747   001536  EF9F  F00A         	goto	u1200
   748   00153A                     u1201:
   749   00153A  EFA3  F00A         	goto	l2290
   750   00153E                     u1200:
   751   00153E                     
   752                           ;ECU_L/LED/led.c: 8:         ret = (Std_ReturnType)0x00;
   753   00153E  0E00               	movlw	0
   754   001540  6E38               	movwf	led_init@ret^0,c
   755                           
   756                           ;ECU_L/LED/led.c: 9:     }
   757   001542  EFAA  F00A         	goto	l2292
   758   001546                     l2290:
   759                           
   760                           ;ECU_L/LED/led.c: 11:         ret = gpio_pin_initialize(&my_pin);
   761   001546  0E39               	movlw	low led_init@my_pin
   762   001548  6E32               	movwf	gpio_pin_initialize@my_pin^0,c
   763   00154A  0E00               	movlw	high led_init@my_pin
   764   00154C  6E33               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   765   00154E  EC50  F00B         	call	_gpio_pin_initialize	;wreg free
   766   001552  6E38               	movwf	led_init@ret^0,c
   767   001554                     l2292:
   768                           
   769                           ;ECU_L/LED/led.c: 13:     return ret;
   770   001554  5038               	movf	led_init@ret^0,w,c
   771   001556  0012               	return		;funcret
   772   001558                     __end_of_led_init:
   773                           	callstack 0
   774                           
   775 ;; *************** function _keypad_initialize *****************
   776 ;; Defined at:
   777 ;;		line 9 in file "ECU_L/KEYPAD/keypad.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  _keypad_obj     2   13[COMRAM] PTR const struct .
   780 ;;		 -> keypad(8), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  columns_coun    1   19[COMRAM] unsigned char 
   783 ;;  rows_counter    1   18[COMRAM] unsigned char 
   784 ;;  ret             1   17[COMRAM] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      unsigned char 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;Total ram usage:        7 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 2
   801 ;; This function calls:
   802 ;;		_gpio_pin_direction_init
   803 ;;		_gpio_pin_initialize
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text4
   810   00145A                     __ptext4:
   811                           	callstack 0
   812   00145A                     _keypad_initialize:
   813                           	callstack 28
   814   00145A                     
   815                           ;ECU_L/KEYPAD/keypad.c: 11:     uint8 rows_counter = 0, columns_counter = 0;
   816   00145A  0E00               	movlw	0
   817   00145C  6E3A               	movwf	keypad_initialize@rows_counter^0,c
   818   00145E  0E00               	movlw	0
   819   001460  6E3B               	movwf	keypad_initialize@columns_counter^0,c
   820   001462                     
   821                           ;ECU_L/KEYPAD/keypad.c: 12:     if(((void*)0) == _keypad_obj){
   822   001462  5035               	movf	keypad_initialize@_keypad_obj^0,w,c
   823   001464  1036               	iorwf	(keypad_initialize@_keypad_obj+1)^0,w,c
   824   001466  A4D8               	btfss	status,2,c
   825   001468  EF38  F00A         	goto	u1231
   826   00146C  EF3A  F00A         	goto	u1230
   827   001470                     u1231:
   828   001470  EF3E  F00A         	goto	l2342
   829   001474                     u1230:
   830   001474                     
   831                           ;ECU_L/KEYPAD/keypad.c: 13:         ret = (Std_ReturnType)0x00;
   832   001474  0E00               	movlw	0
   833   001476  6E39               	movwf	keypad_initialize@ret^0,c
   834                           
   835                           ;ECU_L/KEYPAD/keypad.c: 14:     }
   836   001478  EF6B  F00A         	goto	l2366
   837   00147C                     l2342:
   838                           
   839                           ;ECU_L/KEYPAD/keypad.c: 16:         for(rows_counter=0; rows_counter<4; rows_counter++){
   840   00147C  0E00               	movlw	0
   841   00147E  6E3A               	movwf	keypad_initialize@rows_counter^0,c
   842   001480                     l2348:
   843   001480  503A               	movf	keypad_initialize@rows_counter^0,w,c
   844   001482  2435               	addwf	keypad_initialize@_keypad_obj^0,w,c
   845   001484  6E32               	movwf	gpio_pin_initialize@my_pin^0,c
   846   001486  0E00               	movlw	0
   847   001488  2036               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
   848   00148A  6E33               	movwf	(gpio_pin_initialize@my_pin+1)^0,c
   849   00148C  EC50  F00B         	call	_gpio_pin_initialize	;wreg free
   850   001490                     
   851                           ;ECU_L/KEYPAD/keypad.c: 18:         }
   852   001490  2A3A               	incf	keypad_initialize@rows_counter^0,f,c
   853   001492  0E03               	movlw	3
   854   001494  643A               	cpfsgt	keypad_initialize@rows_counter^0,c
   855   001496  EF4F  F00A         	goto	u1241
   856   00149A  EF51  F00A         	goto	u1240
   857   00149E                     u1241:
   858   00149E  EF40  F00A         	goto	l2348
   859   0014A2                     u1240:
   860   0014A2                     
   861                           ;ECU_L/KEYPAD/keypad.c: 19:         for(columns_counter=0; columns_counter<4; columns_co
      +                          unter++){
   862   0014A2  0E00               	movlw	0
   863   0014A4  6E3B               	movwf	keypad_initialize@columns_counter^0,c
   864   0014A6                     l2360:
   865                           
   866                           ;ECU_L/KEYPAD/keypad.c: 20:             ret = gpio_pin_direction_init(&(_keypad_obj->key
      +                          pad_columns_pins[columns_counter]));
   867   0014A6  503B               	movf	keypad_initialize@columns_counter^0,w,c
   868   0014A8  2435               	addwf	keypad_initialize@_keypad_obj^0,w,c
   869   0014AA  6E37               	movwf	??_keypad_initialize^0,c
   870   0014AC  0E00               	movlw	0
   871   0014AE  2036               	addwfc	(keypad_initialize@_keypad_obj+1)^0,w,c
   872   0014B0  6E38               	movwf	(??_keypad_initialize+1)^0,c
   873   0014B2  0E04               	movlw	4
   874   0014B4  2437               	addwf	??_keypad_initialize^0,w,c
   875   0014B6  6E28               	movwf	gpio_pin_direction_init@my_pin^0,c
   876   0014B8  0E00               	movlw	0
   877   0014BA  2038               	addwfc	(??_keypad_initialize+1)^0,w,c
   878   0014BC  6E29               	movwf	(gpio_pin_direction_init@my_pin+1)^0,c
   879   0014BE  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
   880   0014C2  6E39               	movwf	keypad_initialize@ret^0,c
   881   0014C4                     
   882                           ;ECU_L/KEYPAD/keypad.c: 21:         }
   883   0014C4  2A3B               	incf	keypad_initialize@columns_counter^0,f,c
   884   0014C6  0E03               	movlw	3
   885   0014C8  643B               	cpfsgt	keypad_initialize@columns_counter^0,c
   886   0014CA  EF69  F00A         	goto	u1251
   887   0014CE  EF6B  F00A         	goto	u1250
   888   0014D2                     u1251:
   889   0014D2  EF53  F00A         	goto	l2360
   890   0014D6                     u1250:
   891   0014D6                     l2366:
   892                           
   893                           ;ECU_L/KEYPAD/keypad.c: 23:     return ret;
   894   0014D6  5039               	movf	keypad_initialize@ret^0,w,c
   895   0014D8  0012               	return		;funcret
   896   0014DA                     __end_of_keypad_initialize:
   897                           	callstack 0
   898                           
   899 ;; *************** function _gpio_pin_initialize *****************
   900 ;; Defined at:
   901 ;;		line 79 in file "MCAL/GPIO/gpio.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  my_pin          2   10[COMRAM] PTR const struct .
   904 ;;		 -> keypad.keypad_row_pins(4), keypad(8), relay_initialize@rel_pin(1), led_init@my_pin(1), 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  ret             1   12[COMRAM] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      unsigned char 
   909 ;; Registers used:
   910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;Total ram usage:        3 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; Hardware stack levels required when called: 1
   923 ;; This function calls:
   924 ;;		_gpio_pin_direction_init
   925 ;;		_gpio_pin_logic_write
   926 ;; This function is called by:
   927 ;;		_led_init
   928 ;;		_keypad_initialize
   929 ;;		_seven_segement_intialize
   930 ;;		_button_inittialze
   931 ;;		_dc_motor_initialize
   932 ;;		_relay_initialize
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text5
   937   0016A0                     __ptext5:
   938                           	callstack 0
   939   0016A0                     _gpio_pin_initialize:
   940                           	callstack 28
   941   0016A0                     
   942                           ;MCAL/GPIO/gpio.c: 81:     if (((void*)0) == my_pin){
   943   0016A0  5032               	movf	gpio_pin_initialize@my_pin^0,w,c
   944   0016A2  1033               	iorwf	(gpio_pin_initialize@my_pin+1)^0,w,c
   945   0016A4  A4D8               	btfss	status,2,c
   946   0016A6  EF57  F00B         	goto	u1021
   947   0016AA  EF59  F00B         	goto	u1020
   948   0016AE                     u1021:
   949   0016AE  EF5D  F00B         	goto	l2104
   950   0016B2                     u1020:
   951   0016B2                     
   952                           ;MCAL/GPIO/gpio.c: 82:         ret = (Std_ReturnType)0x00;
   953   0016B2  0E00               	movlw	0
   954   0016B4  6E34               	movwf	gpio_pin_initialize@ret^0,c
   955                           
   956                           ;MCAL/GPIO/gpio.c: 83:     }
   957   0016B6  EF73  F00B         	goto	l2106
   958   0016BA                     l2104:
   959                           
   960                           ;MCAL/GPIO/gpio.c: 85:         ret = gpio_pin_direction_init(my_pin);
   961   0016BA  C032  F028         	movff	gpio_pin_initialize@my_pin,gpio_pin_direction_init@my_pin
   962   0016BE  C033  F029         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_direction_init@my_pin+1
   963   0016C2  EC0B  F008         	call	_gpio_pin_direction_init	;wreg free
   964   0016C6  6E34               	movwf	gpio_pin_initialize@ret^0,c
   965                           
   966                           ;MCAL/GPIO/gpio.c: 86:         ret = gpio_pin_logic_write(my_pin, my_pin->logic);
   967   0016C8  C032  F028         	movff	gpio_pin_initialize@my_pin,gpio_pin_logic_write@my_pin
   968   0016CC  C033  F029         	movff	gpio_pin_initialize@my_pin+1,gpio_pin_logic_write@my_pin+1
   969   0016D0  C032  FFD9         	movff	gpio_pin_initialize@my_pin,fsr2l
   970   0016D4  C033  FFDA         	movff	gpio_pin_initialize@my_pin+1,fsr2h
   971   0016D8  0E00               	movlw	0
   972   0016DA  BEDF               	btfsc	indf2,7,c
   973   0016DC  0E01               	movlw	1
   974   0016DE  6E2A               	movwf	gpio_pin_logic_write@logic^0,c
   975   0016E0  ECAD  F008         	call	_gpio_pin_logic_write	;wreg free
   976   0016E4  6E34               	movwf	gpio_pin_initialize@ret^0,c
   977   0016E6                     l2106:
   978                           
   979                           ;MCAL/GPIO/gpio.c: 88:     return ret;
   980   0016E6  5034               	movf	gpio_pin_initialize@ret^0,w,c
   981   0016E8  0012               	return		;funcret
   982   0016EA                     __end_of_gpio_pin_initialize:
   983                           	callstack 0
   984                           
   985 ;; *************** function _gpio_pin_direction_init *****************
   986 ;; Defined at:
   987 ;;		line 13 in file "MCAL/GPIO/gpio.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  my_pin          2    0[COMRAM] PTR const struct .
   990 ;;		 -> keypad.keypad_columns_pins(4), keypad.keypad_row_pins(4), keypad(8), relay_initialize@rel_pin(1), 
   991 ;;		 -> led_init@my_pin(1), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  ret             1    8[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      unsigned char 
   996 ;; Registers used:
   997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        9 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_gpio_pin_initialize
  1013 ;;		_keypad_initialize
  1014 ;;		_lcd_4bit_intialize
  1015 ;;		_lcd_8bit_intialize
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text6
  1020   001016                     __ptext6:
  1021                           	callstack 0
  1022   001016                     _gpio_pin_direction_init:
  1023                           	callstack 28
  1024   001016                     
  1025                           ;MCAL/GPIO/gpio.c: 14:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1026   001016  0E01               	movlw	1
  1027   001018  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1028   00101A                     
  1029                           ;MCAL/GPIO/gpio.c: 15:     if(((void*)0) == my_pin || my_pin->pin > 7){
  1030   00101A  5028               	movf	gpio_pin_direction_init@my_pin^0,w,c
  1031   00101C  1029               	iorwf	(gpio_pin_direction_init@my_pin+1)^0,w,c
  1032   00101E  B4D8               	btfsc	status,2,c
  1033   001020  EF14  F008         	goto	u961
  1034   001024  EF16  F008         	goto	u960
  1035   001028                     u961:
  1036   001028  EF27  F008         	goto	l2080
  1037   00102C                     u960:
  1038   00102C  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1039   001030  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1040   001034  30DF               	rrcf	223,w,c
  1041   001036  32E8               	rrcf	wreg,f,c
  1042   001038  32E8               	rrcf	wreg,f,c
  1043   00103A  0B07               	andlw	7
  1044   00103C  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1045   00103E  0E07               	movlw	7
  1046   001040  642A               	cpfsgt	??_gpio_pin_direction_init^0,c
  1047   001042  EF25  F008         	goto	u971
  1048   001046  EF27  F008         	goto	u970
  1049   00104A                     u971:
  1050   00104A  EF8A  F008         	goto	l2088
  1051   00104E                     u970:
  1052   00104E                     l2080:
  1053                           
  1054                           ;MCAL/GPIO/gpio.c: 16:         ret = (Std_ReturnType)0x00;
  1055   00104E  0E00               	movlw	0
  1056   001050  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  1057                           
  1058                           ;MCAL/GPIO/gpio.c: 17:     }
  1059   001052  EFAB  F008         	goto	l2090
  1060   001056                     l2082:
  1061                           
  1062                           ;MCAL/GPIO/gpio.c: 21:                 (*tris_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1063   001056  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1064   00105A  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1065   00105E  30DF               	rrcf	223,w,c
  1066   001060  32E8               	rrcf	wreg,f,c
  1067   001062  32E8               	rrcf	wreg,f,c
  1068   001064  0B07               	andlw	7
  1069   001066  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1070   001068  0E01               	movlw	1
  1071   00106A  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1072   00106C  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1073   00106E  EF3B  F008         	goto	u984
  1074   001072                     u985:
  1075   001072  90D8               	bcf	status,0,c
  1076   001074  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1077   001076                     u984:
  1078   001076  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1079   001078  EF39  F008         	goto	u985
  1080   00107C  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1081   00107E  0AFF               	xorlw	255
  1082   001080  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1083   001082  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1084   001086  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1085   00108A  50DF               	movf	223,w,c
  1086   00108C  0B07               	andlw	7
  1087   00108E  6E2D               	movwf	(??_gpio_pin_direction_init+3)^0,c
  1088   001090  502D               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  1089   001092  0D02               	mullw	2
  1090   001094  0E15               	movlw	low _tris_regs
  1091   001096  24F3               	addwf	243,w,c
  1092   001098  6ED9               	movwf	fsr2l,c
  1093   00109A  0E00               	movlw	high _tris_regs
  1094   00109C  20F4               	addwfc	prodh,w,c
  1095   00109E  6EDA               	movwf	fsr2h,c
  1096   0010A0  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+4
  1097   0010A4  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+5
  1098   0010A8  C02E  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  1099   0010AC  C02F  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  1100   0010B0  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1101   0010B2  16DF               	andwf	indf2,f,c
  1102                           
  1103                           ;MCAL/GPIO/gpio.c: 22:                 break;
  1104   0010B4  EFAB  F008         	goto	l2090
  1105   0010B8                     l2084:
  1106                           
  1107                           ;MCAL/GPIO/gpio.c: 24:                 (*tris_regs[my_pin->port] |=(1<<my_pin->pin));
  1108   0010B8  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1109   0010BC  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1110   0010C0  30DF               	rrcf	223,w,c
  1111   0010C2  32E8               	rrcf	wreg,f,c
  1112   0010C4  32E8               	rrcf	wreg,f,c
  1113   0010C6  0B07               	andlw	7
  1114   0010C8  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1115   0010CA  0E01               	movlw	1
  1116   0010CC  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  1117   0010CE  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  1118   0010D0  EF6C  F008         	goto	u994
  1119   0010D4                     u995:
  1120   0010D4  90D8               	bcf	status,0,c
  1121   0010D6  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  1122   0010D8                     u994:
  1123   0010D8  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  1124   0010DA  EF6A  F008         	goto	u995
  1125   0010DE  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1126   0010E2  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1127   0010E6  50DF               	movf	223,w,c
  1128   0010E8  0B07               	andlw	7
  1129   0010EA  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  1130   0010EC  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  1131   0010EE  0D02               	mullw	2
  1132   0010F0  0E15               	movlw	low _tris_regs
  1133   0010F2  24F3               	addwf	243,w,c
  1134   0010F4  6ED9               	movwf	fsr2l,c
  1135   0010F6  0E00               	movlw	high _tris_regs
  1136   0010F8  20F4               	addwfc	prodh,w,c
  1137   0010FA  6EDA               	movwf	fsr2h,c
  1138   0010FC  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+3
  1139   001100  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+4
  1140   001104  C02D  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  1141   001108  C02E  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  1142   00110C  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1143   00110E  12DF               	iorwf	indf2,f,c
  1144                           
  1145                           ;MCAL/GPIO/gpio.c: 25:                 break;
  1146   001110  EFAB  F008         	goto	l2090
  1147   001114                     l2088:
  1148   001114  C028  FFD9         	movff	gpio_pin_direction_init@my_pin,fsr2l
  1149   001118  C029  FFDA         	movff	gpio_pin_direction_init@my_pin+1,fsr2h
  1150   00111C  BCDF               	btfsc	indf2,6,c
  1151   00111E  EF93  F008         	goto	u1001
  1152   001122  EF96  F008         	goto	u1000
  1153   001126                     u1001:
  1154   001126  0E01               	movlw	1
  1155   001128  EF97  F008         	goto	u1010
  1156   00112C                     u1000:
  1157   00112C  0E00               	movlw	0
  1158   00112E                     u1010:
  1159   00112E  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  1160   001130  6A2B               	clrf	(??_gpio_pin_direction_init+1)^0,c
  1161                           
  1162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 1, Range of values is 0 to 0
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte            4     3 (average)
  1168                           ;	Chosen strategy is simple_byte
  1169   001132  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  1170   001134  0A00               	xorlw	0	; case 0
  1171   001136  B4D8               	btfsc	status,2,c
  1172   001138  EFA0  F008         	goto	l2806
  1173   00113C  EF27  F008         	goto	l2080
  1174   001140                     l2806:
  1175                           
  1176                           ; Switch size 1, requested type "simple"
  1177                           ; Number of cases is 2, Range of values is 0 to 1
  1178                           ; switch strategies available:
  1179                           ; Name         Instructions Cycles
  1180                           ; simple_byte            7     4 (average)
  1181                           ;	Chosen strategy is simple_byte
  1182   001140  502A               	movf	??_gpio_pin_direction_init^0,w,c
  1183   001142  0A00               	xorlw	0	; case 0
  1184   001144  B4D8               	btfsc	status,2,c
  1185   001146  EF2B  F008         	goto	l2082
  1186   00114A  0A01               	xorlw	1	; case 1
  1187   00114C  B4D8               	btfsc	status,2,c
  1188   00114E  EF5C  F008         	goto	l2084
  1189   001152  EF27  F008         	goto	l2080
  1190   001156                     l2090:
  1191                           
  1192                           ;MCAL/GPIO/gpio.c: 29:     return ret;
  1193   001156  5030               	movf	gpio_pin_direction_init@ret^0,w,c
  1194   001158  0012               	return		;funcret
  1195   00115A                     __end_of_gpio_pin_direction_init:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _keypad_get_value *****************
  1199 ;; Defined at:
  1200 ;;		line 26 in file "ECU_L/KEYPAD/keypad.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  _keypad_obj     2   10[COMRAM] PTR const struct .
  1203 ;;		 -> keypad(8), 
  1204 ;;  value           2   12[COMRAM] PTR unsigned char 
  1205 ;;		 -> main@retval(1), 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  l_columns_co    1   20[COMRAM] unsigned char 
  1208 ;;  l_rows_count    1   19[COMRAM] unsigned char 
  1209 ;;  l_counter       1   18[COMRAM] unsigned char 
  1210 ;;  column_logic    1   17[COMRAM] enum E2965
  1211 ;;  ret             1   16[COMRAM] unsigned char 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      unsigned char 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1225 ;;Total ram usage:       11 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		_gpio_pin_logic_read
  1230 ;;		_gpio_pin_logic_write
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text7
  1237   001286                     __ptext7:
  1238                           	callstack 0
  1239   001286                     _keypad_get_value:
  1240                           	callstack 29
  1241   001286                     
  1242                           ;ECU_L/KEYPAD/keypad.c: 28:     uint8 l_rows_counter = 0, l_columns_counter = 0, l_count
      +                          er = 0;
  1243   001286  0E00               	movlw	0
  1244   001288  6E3B               	movwf	keypad_get_value@l_rows_counter^0,c
  1245   00128A  0E00               	movlw	0
  1246   00128C  6E3C               	movwf	keypad_get_value@l_columns_counter^0,c
  1247   00128E  0E00               	movlw	0
  1248   001290  6E3A               	movwf	keypad_get_value@l_counter^0,c
  1249                           
  1250                           ;ECU_L/KEYPAD/keypad.c: 29:     logic_t column_logic = 0;
  1251   001292  0E00               	movlw	0
  1252   001294  6E39               	movwf	keypad_get_value@column_logic^0,c
  1253   001296                     
  1254                           ;ECU_L/KEYPAD/keypad.c: 30:     if((((void*)0) == _keypad_obj) || (((void*)0) == value))
      +                          {
  1255   001296  5032               	movf	keypad_get_value@_keypad_obj^0,w,c
  1256   001298  1033               	iorwf	(keypad_get_value@_keypad_obj+1)^0,w,c
  1257   00129A  B4D8               	btfsc	status,2,c
  1258   00129C  EF52  F009         	goto	u1261
  1259   0012A0  EF54  F009         	goto	u1260
  1260   0012A4                     u1261:
  1261   0012A4  EF5D  F009         	goto	l2376
  1262   0012A8                     u1260:
  1263   0012A8  5034               	movf	keypad_get_value@value^0,w,c
  1264   0012AA  1035               	iorwf	(keypad_get_value@value+1)^0,w,c
  1265   0012AC  A4D8               	btfss	status,2,c
  1266   0012AE  EF5B  F009         	goto	u1271
  1267   0012B2  EF5D  F009         	goto	u1270
  1268   0012B6                     u1271:
  1269   0012B6  EF61  F009         	goto	l2378
  1270   0012BA                     u1270:
  1271   0012BA                     l2376:
  1272                           
  1273                           ;ECU_L/KEYPAD/keypad.c: 31:         ret = (Std_ReturnType)0x00;
  1274   0012BA  0E00               	movlw	0
  1275   0012BC  6E38               	movwf	keypad_get_value@ret^0,c
  1276                           
  1277                           ;ECU_L/KEYPAD/keypad.c: 32:     }
  1278   0012BE  EFCF  F009         	goto	l2420
  1279   0012C2                     l2378:
  1280                           
  1281                           ;ECU_L/KEYPAD/keypad.c: 34:         for(l_rows_counter=0; l_rows_counter<4; l_rows_count
      +                          er++){
  1282   0012C2  0E00               	movlw	0
  1283   0012C4  6E3B               	movwf	keypad_get_value@l_rows_counter^0,c
  1284   0012C6                     l2384:
  1285                           
  1286                           ;ECU_L/KEYPAD/keypad.c: 35:             for(l_counter=0; l_counter<4; l_counter++){
  1287   0012C6  0E00               	movlw	0
  1288   0012C8  6E3A               	movwf	keypad_get_value@l_counter^0,c
  1289   0012CA                     l2390:
  1290   0012CA  503A               	movf	keypad_get_value@l_counter^0,w,c
  1291   0012CC  2432               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1292   0012CE  6E28               	movwf	gpio_pin_logic_write@my_pin^0,c
  1293   0012D0  0E00               	movlw	0
  1294   0012D2  2033               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1295   0012D4  6E29               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1296   0012D6  0E00               	movlw	0
  1297   0012D8  6E2A               	movwf	gpio_pin_logic_write@logic^0,c
  1298   0012DA  ECAD  F008         	call	_gpio_pin_logic_write	;wreg free
  1299   0012DE                     
  1300                           ;ECU_L/KEYPAD/keypad.c: 37:             }
  1301   0012DE  2A3A               	incf	keypad_get_value@l_counter^0,f,c
  1302   0012E0  0E03               	movlw	3
  1303   0012E2  643A               	cpfsgt	keypad_get_value@l_counter^0,c
  1304   0012E4  EF76  F009         	goto	u1281
  1305   0012E8  EF78  F009         	goto	u1280
  1306   0012EC                     u1281:
  1307   0012EC  EF65  F009         	goto	l2390
  1308   0012F0                     u1280:
  1309   0012F0                     
  1310                           ;ECU_L/KEYPAD/keypad.c: 38:             gpio_pin_logic_write(&(_keypad_obj->keypad_row_p
      +                          ins[l_rows_counter]), 1);
  1311   0012F0  503B               	movf	keypad_get_value@l_rows_counter^0,w,c
  1312   0012F2  2432               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1313   0012F4  6E28               	movwf	gpio_pin_logic_write@my_pin^0,c
  1314   0012F6  0E00               	movlw	0
  1315   0012F8  2033               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1316   0012FA  6E29               	movwf	(gpio_pin_logic_write@my_pin+1)^0,c
  1317   0012FC  0E01               	movlw	1
  1318   0012FE  6E2A               	movwf	gpio_pin_logic_write@logic^0,c
  1319   001300  ECAD  F008         	call	_gpio_pin_logic_write	;wreg free
  1320   001304                     
  1321                           ;ECU_L/KEYPAD/keypad.c: 39:             _delay((unsigned long)((10)*(4000000UL/4000.0)))
      +                          ;
  1322   001304  0E0D               	movlw	13
  1323   001306  6E36               	movwf	??_keypad_get_value^0,c
  1324   001308  0EFC               	movlw	252
  1325   00130A                     u1627:
  1326   00130A  2EE8               	decfsz	wreg,f,c
  1327   00130C  D7FE               	bra	u1627
  1328   00130E  2E36               	decfsz	??_keypad_get_value^0,f,c
  1329   001310  D7FC               	bra	u1627
  1330   001312                     
  1331                           ;ECU_L/KEYPAD/keypad.c: 40:             for(l_columns_counter=0; l_columns_counter<4; l_
      +                          columns_counter++){
  1332   001312  0E00               	movlw	0
  1333   001314  6E3C               	movwf	keypad_get_value@l_columns_counter^0,c
  1334   001316                     l2406:
  1335                           
  1336                           ;ECU_L/KEYPAD/keypad.c: 41:                 ret = gpio_pin_logic_read(&(_keypad_obj->key
      +                          pad_columns_pins[l_columns_counter]), &column_logic);
  1337   001316  503C               	movf	keypad_get_value@l_columns_counter^0,w,c
  1338   001318  2432               	addwf	keypad_get_value@_keypad_obj^0,w,c
  1339   00131A  6E36               	movwf	??_keypad_get_value^0,c
  1340   00131C  0E00               	movlw	0
  1341   00131E  2033               	addwfc	(keypad_get_value@_keypad_obj+1)^0,w,c
  1342   001320  6E37               	movwf	(??_keypad_get_value+1)^0,c
  1343   001322  0E04               	movlw	4
  1344   001324  2436               	addwf	??_keypad_get_value^0,w,c
  1345   001326  6E28               	movwf	gpio_pin_logic_read@my_pin^0,c
  1346   001328  0E00               	movlw	0
  1347   00132A  2037               	addwfc	(??_keypad_get_value+1)^0,w,c
  1348   00132C  6E29               	movwf	(gpio_pin_logic_read@my_pin+1)^0,c
  1349   00132E  0E39               	movlw	low keypad_get_value@column_logic
  1350   001330  6E2A               	movwf	gpio_pin_logic_read@retlogic^0,c
  1351   001332  0E00               	movlw	high keypad_get_value@column_logic
  1352   001334  6E2B               	movwf	(gpio_pin_logic_read@retlogic+1)^0,c
  1353   001336  ECD1  F009         	call	_gpio_pin_logic_read	;wreg free
  1354   00133A  6E38               	movwf	keypad_get_value@ret^0,c
  1355   00133C                     
  1356                           ;ECU_L/KEYPAD/keypad.c: 42:                 if(1 == column_logic){
  1357   00133C  0439               	decf	keypad_get_value@column_logic^0,w,c
  1358   00133E  A4D8               	btfss	status,2,c
  1359   001340  EFA4  F009         	goto	u1291
  1360   001344  EFA6  F009         	goto	u1290
  1361   001348                     u1291:
  1362   001348  EFBD  F009         	goto	l2412
  1363   00134C                     u1290:
  1364   00134C                     
  1365                           ;ECU_L/KEYPAD/keypad.c: 43:                     *value = btn_values[l_rows_counter][l_co
      +                          lumns_counter];
  1366   00134C  503B               	movf	keypad_get_value@l_rows_counter^0,w,c
  1367   00134E  0D04               	mullw	4
  1368   001350  0E01               	movlw	low _btn_values
  1369   001352  24F3               	addwf	243,w,c
  1370   001354  6E36               	movwf	??_keypad_get_value^0,c
  1371   001356  0E10               	movlw	high _btn_values
  1372   001358  20F4               	addwfc	prodh,w,c
  1373   00135A  6E37               	movwf	(??_keypad_get_value+1)^0,c
  1374   00135C  503C               	movf	keypad_get_value@l_columns_counter^0,w,c
  1375   00135E  2636               	addwf	??_keypad_get_value^0,f,c
  1376   001360  0E00               	movlw	0
  1377   001362  2237               	addwfc	(??_keypad_get_value+1)^0,f,c
  1378   001364  C036  FFF6         	movff	??_keypad_get_value,tblptrl
  1379   001368  C037  FFF7         	movff	??_keypad_get_value+1,tblptrh
  1380   00136C                     	if	0	;tblptru may be non-zero
  1381   00136C                     	endif
  1382   00136C                     	if	0	;tblptru may be non-zero
  1383   00136C                     	endif
  1384   00136C  C034  FFD9         	movff	keypad_get_value@value,fsr2l
  1385   001370  C035  FFDA         	movff	keypad_get_value@value+1,fsr2h
  1386   001374  0008               	tblrd		*
  1387   001376  CFF5 FFDF          	movff	tablat,indf2
  1388   00137A                     l2412:
  1389                           
  1390                           ;ECU_L/KEYPAD/keypad.c: 45:             }
  1391   00137A  2A3C               	incf	keypad_get_value@l_columns_counter^0,f,c
  1392   00137C  0E03               	movlw	3
  1393   00137E  643C               	cpfsgt	keypad_get_value@l_columns_counter^0,c
  1394   001380  EFC4  F009         	goto	u1301
  1395   001384  EFC6  F009         	goto	u1300
  1396   001388                     u1301:
  1397   001388  EF8B  F009         	goto	l2406
  1398   00138C                     u1300:
  1399   00138C                     
  1400                           ;ECU_L/KEYPAD/keypad.c: 46:         }
  1401   00138C  2A3B               	incf	keypad_get_value@l_rows_counter^0,f,c
  1402   00138E  0E03               	movlw	3
  1403   001390  643B               	cpfsgt	keypad_get_value@l_rows_counter^0,c
  1404   001392  EFCD  F009         	goto	u1311
  1405   001396  EFCF  F009         	goto	u1310
  1406   00139A                     u1311:
  1407   00139A  EF63  F009         	goto	l2384
  1408   00139E                     u1310:
  1409   00139E                     l2420:
  1410                           
  1411                           ;ECU_L/KEYPAD/keypad.c: 48:     return ret;
  1412   00139E  5038               	movf	keypad_get_value@ret^0,w,c
  1413   0013A0  0012               	return		;funcret
  1414   0013A2                     __end_of_keypad_get_value:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _gpio_pin_logic_write *****************
  1418 ;; Defined at:
  1419 ;;		line 41 in file "MCAL/GPIO/gpio.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1422 ;;		 -> keypad.keypad_row_pins(4), keypad(8), relay_turn_off@rel_pin(1), relay_turn_on@rel_pin(1), 
  1423 ;;		 -> relay_initialize@rel_pin(1), led_turn_off@my_pin(1), led_turn_on@my_pin(1), led_init@my_pin(1), 
  1424 ;;  logic           1    2[COMRAM] unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  ret             1    9[COMRAM] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      unsigned char 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;Total ram usage:       10 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_led_turn_on
  1446 ;;		_led_turn_off
  1447 ;;		_gpio_pin_initialize
  1448 ;;		_keypad_get_value
  1449 ;;		_seven_segement_write_number
  1450 ;;		_dc_motor_move_right
  1451 ;;		_dc_motor_move_left
  1452 ;;		_dc_motor_stop
  1453 ;;		_lcd_4bit_send_command
  1454 ;;		_lcd_4bit_send_char_data
  1455 ;;		_lcd_8bit_send_command
  1456 ;;		_lcd_8bit_send_char_data
  1457 ;;		_lcd_send_4bits
  1458 ;;		_lcd_4bit_send_enable_signal
  1459 ;;		_lcd_8bit_send_enable_signal
  1460 ;;		_relay_turn_on
  1461 ;;		_relay_turn_off
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text8
  1466   00115A                     __ptext8:
  1467                           	callstack 0
  1468   00115A                     _gpio_pin_logic_write:
  1469                           	callstack 29
  1470   00115A                     
  1471                           ;MCAL/GPIO/gpio.c: 42:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1472   00115A  0E01               	movlw	1
  1473   00115C  6E31               	movwf	gpio_pin_logic_write@ret^0,c
  1474   00115E                     
  1475                           ;MCAL/GPIO/gpio.c: 43:     if ((((void*)0) == my_pin) || (my_pin->pin) > 7){
  1476   00115E  5028               	movf	gpio_pin_logic_write@my_pin^0,w,c
  1477   001160  1029               	iorwf	(gpio_pin_logic_write@my_pin+1)^0,w,c
  1478   001162  B4D8               	btfsc	status,2,c
  1479   001164  EFB6  F008         	goto	u921
  1480   001168  EFB8  F008         	goto	u920
  1481   00116C                     u921:
  1482   00116C  EFC9  F008         	goto	l2056
  1483   001170                     u920:
  1484   001170  C028  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1485   001174  C029  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1486   001178  30DF               	rrcf	223,w,c
  1487   00117A  32E8               	rrcf	wreg,f,c
  1488   00117C  32E8               	rrcf	wreg,f,c
  1489   00117E  0B07               	andlw	7
  1490   001180  6E2B               	movwf	??_gpio_pin_logic_write^0,c
  1491   001182  0E07               	movlw	7
  1492   001184  642B               	cpfsgt	??_gpio_pin_logic_write^0,c
  1493   001186  EFC7  F008         	goto	u931
  1494   00118A  EFC9  F008         	goto	u930
  1495   00118E                     u931:
  1496   00118E  EF2C  F009         	goto	l2064
  1497   001192                     u930:
  1498   001192                     l2056:
  1499                           
  1500                           ;MCAL/GPIO/gpio.c: 44:         ret = (Std_ReturnType)0x00;
  1501   001192  0E00               	movlw	0
  1502   001194  6E31               	movwf	gpio_pin_logic_write@ret^0,c
  1503                           
  1504                           ;MCAL/GPIO/gpio.c: 45:     }
  1505   001196  EF41  F009         	goto	l2066
  1506   00119A                     l2058:
  1507                           
  1508                           ;MCAL/GPIO/gpio.c: 49:                 (*lat_regs[my_pin->port] &= ~(1<<my_pin->pin));
  1509   00119A  C028  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1510   00119E  C029  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1511   0011A2  30DF               	rrcf	223,w,c
  1512   0011A4  32E8               	rrcf	wreg,f,c
  1513   0011A6  32E8               	rrcf	wreg,f,c
  1514   0011A8  0B07               	andlw	7
  1515   0011AA  6E2B               	movwf	??_gpio_pin_logic_write^0,c
  1516   0011AC  0E01               	movlw	1
  1517   0011AE  6E2C               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1518   0011B0  2A2B               	incf	??_gpio_pin_logic_write^0,f,c
  1519   0011B2  EFDD  F008         	goto	u944
  1520   0011B6                     u945:
  1521   0011B6  90D8               	bcf	status,0,c
  1522   0011B8  362C               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1523   0011BA                     u944:
  1524   0011BA  2E2B               	decfsz	??_gpio_pin_logic_write^0,f,c
  1525   0011BC  EFDB  F008         	goto	u945
  1526   0011C0  502C               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1527   0011C2  0AFF               	xorlw	255
  1528   0011C4  6E2D               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1529   0011C6  C028  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1530   0011CA  C029  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1531   0011CE  50DF               	movf	223,w,c
  1532   0011D0  0B07               	andlw	7
  1533   0011D2  6E2E               	movwf	(??_gpio_pin_logic_write+3)^0,c
  1534   0011D4  502E               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  1535   0011D6  0D02               	mullw	2
  1536   0011D8  0E01               	movlw	low _lat_regs
  1537   0011DA  24F3               	addwf	243,w,c
  1538   0011DC  6ED9               	movwf	fsr2l,c
  1539   0011DE  0E00               	movlw	high _lat_regs
  1540   0011E0  20F4               	addwfc	prodh,w,c
  1541   0011E2  6EDA               	movwf	fsr2h,c
  1542   0011E4  CFDE F02F          	movff	postinc2,??_gpio_pin_logic_write+4
  1543   0011E8  CFDD F030          	movff	postdec2,??_gpio_pin_logic_write+5
  1544   0011EC  C02F  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  1545   0011F0  C030  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  1546   0011F4  502D               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1547   0011F6  16DF               	andwf	indf2,f,c
  1548                           
  1549                           ;MCAL/GPIO/gpio.c: 50:                 break;
  1550   0011F8  EF41  F009         	goto	l2066
  1551   0011FC                     l2060:
  1552                           
  1553                           ;MCAL/GPIO/gpio.c: 52:                 (*lat_regs[my_pin->port] |=(1<<my_pin->pin));
  1554   0011FC  C028  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1555   001200  C029  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1556   001204  30DF               	rrcf	223,w,c
  1557   001206  32E8               	rrcf	wreg,f,c
  1558   001208  32E8               	rrcf	wreg,f,c
  1559   00120A  0B07               	andlw	7
  1560   00120C  6E2B               	movwf	??_gpio_pin_logic_write^0,c
  1561   00120E  0E01               	movlw	1
  1562   001210  6E2C               	movwf	(??_gpio_pin_logic_write+1)^0,c
  1563   001212  2A2B               	incf	??_gpio_pin_logic_write^0,f,c
  1564   001214  EF0E  F009         	goto	u954
  1565   001218                     u955:
  1566   001218  90D8               	bcf	status,0,c
  1567   00121A  362C               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  1568   00121C                     u954:
  1569   00121C  2E2B               	decfsz	??_gpio_pin_logic_write^0,f,c
  1570   00121E  EF0C  F009         	goto	u955
  1571   001222  C028  FFD9         	movff	gpio_pin_logic_write@my_pin,fsr2l
  1572   001226  C029  FFDA         	movff	gpio_pin_logic_write@my_pin+1,fsr2h
  1573   00122A  50DF               	movf	223,w,c
  1574   00122C  0B07               	andlw	7
  1575   00122E  6E2D               	movwf	(??_gpio_pin_logic_write+2)^0,c
  1576   001230  502D               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  1577   001232  0D02               	mullw	2
  1578   001234  0E01               	movlw	low _lat_regs
  1579   001236  24F3               	addwf	243,w,c
  1580   001238  6ED9               	movwf	fsr2l,c
  1581   00123A  0E00               	movlw	high _lat_regs
  1582   00123C  20F4               	addwfc	prodh,w,c
  1583   00123E  6EDA               	movwf	fsr2h,c
  1584   001240  CFDE F02E          	movff	postinc2,??_gpio_pin_logic_write+3
  1585   001244  CFDD F02F          	movff	postdec2,??_gpio_pin_logic_write+4
  1586   001248  C02E  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  1587   00124C  C02F  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  1588   001250  502C               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1589   001252  12DF               	iorwf	indf2,f,c
  1590                           
  1591                           ;MCAL/GPIO/gpio.c: 53:                 break;
  1592   001254  EF41  F009         	goto	l2066
  1593   001258                     l2064:
  1594   001258  502A               	movf	gpio_pin_logic_write@logic^0,w,c
  1595   00125A  6E2B               	movwf	??_gpio_pin_logic_write^0,c
  1596   00125C  6A2C               	clrf	(??_gpio_pin_logic_write+1)^0,c
  1597                           
  1598                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1599                           ; Switch size 1, requested type "simple"
  1600                           ; Number of cases is 1, Range of values is 0 to 0
  1601                           ; switch strategies available:
  1602                           ; Name         Instructions Cycles
  1603                           ; simple_byte            4     3 (average)
  1604                           ;	Chosen strategy is simple_byte
  1605   00125E  502C               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  1606   001260  0A00               	xorlw	0	; case 0
  1607   001262  B4D8               	btfsc	status,2,c
  1608   001264  EF36  F009         	goto	l2808
  1609   001268  EFC9  F008         	goto	l2056
  1610   00126C                     l2808:
  1611                           
  1612                           ; Switch size 1, requested type "simple"
  1613                           ; Number of cases is 2, Range of values is 0 to 1
  1614                           ; switch strategies available:
  1615                           ; Name         Instructions Cycles
  1616                           ; simple_byte            7     4 (average)
  1617                           ;	Chosen strategy is simple_byte
  1618   00126C  502B               	movf	??_gpio_pin_logic_write^0,w,c
  1619   00126E  0A00               	xorlw	0	; case 0
  1620   001270  B4D8               	btfsc	status,2,c
  1621   001272  EFCD  F008         	goto	l2058
  1622   001276  0A01               	xorlw	1	; case 1
  1623   001278  B4D8               	btfsc	status,2,c
  1624   00127A  EFFE  F008         	goto	l2060
  1625   00127E  EFC9  F008         	goto	l2056
  1626   001282                     l2066:
  1627                           
  1628                           ;MCAL/GPIO/gpio.c: 57:     return ret;
  1629   001282  5031               	movf	gpio_pin_logic_write@ret^0,w,c
  1630   001284  0012               	return		;funcret
  1631   001286                     __end_of_gpio_pin_logic_write:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _gpio_pin_logic_read *****************
  1635 ;; Defined at:
  1636 ;;		line 59 in file "MCAL/GPIO/gpio.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  my_pin          2    0[COMRAM] PTR const struct .
  1639 ;;		 -> keypad.keypad_columns_pins(4), keypad(8), 
  1640 ;;  retlogic        2    2[COMRAM] PTR enum E2965
  1641 ;;		 -> keypad_get_value@column_logic(1), button_read_status@Pin_Logic_Status(1), 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  ret             1    9[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      unsigned char 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;Total ram usage:       10 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_keypad_get_value
  1663 ;;		_button_read_status
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text9
  1668   0013A2                     __ptext9:
  1669                           	callstack 0
  1670   0013A2                     _gpio_pin_logic_read:
  1671                           	callstack 29
  1672   0013A2                     
  1673                           ;MCAL/GPIO/gpio.c: 60:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1674   0013A2  0E01               	movlw	1
  1675   0013A4  6E31               	movwf	gpio_pin_logic_read@ret^0,c
  1676   0013A6                     
  1677                           ;MCAL/GPIO/gpio.c: 61:     if(((void*)0) == my_pin || my_pin->pin > 7 || ((void*)0) == r
      +                          etlogic){
  1678   0013A6  5028               	movf	gpio_pin_logic_read@my_pin^0,w,c
  1679   0013A8  1029               	iorwf	(gpio_pin_logic_read@my_pin+1)^0,w,c
  1680   0013AA  B4D8               	btfsc	status,2,c
  1681   0013AC  EFDA  F009         	goto	u1031
  1682   0013B0  EFDC  F009         	goto	u1030
  1683   0013B4                     u1031:
  1684   0013B4  EFF6  F009         	goto	l2118
  1685   0013B8                     u1030:
  1686   0013B8  C028  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
  1687   0013BC  C029  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
  1688   0013C0  30DF               	rrcf	223,w,c
  1689   0013C2  32E8               	rrcf	wreg,f,c
  1690   0013C4  32E8               	rrcf	wreg,f,c
  1691   0013C6  0B07               	andlw	7
  1692   0013C8  6E2C               	movwf	??_gpio_pin_logic_read^0,c
  1693   0013CA  0E08               	movlw	8
  1694   0013CC  602C               	cpfslt	??_gpio_pin_logic_read^0,c
  1695   0013CE  EFEB  F009         	goto	u1041
  1696   0013D2  EFED  F009         	goto	u1040
  1697   0013D6                     u1041:
  1698   0013D6  EFF6  F009         	goto	l2118
  1699   0013DA                     u1040:
  1700   0013DA  502A               	movf	gpio_pin_logic_read@retlogic^0,w,c
  1701   0013DC  102B               	iorwf	(gpio_pin_logic_read@retlogic+1)^0,w,c
  1702   0013DE  A4D8               	btfss	status,2,c
  1703   0013E0  EFF4  F009         	goto	u1051
  1704   0013E4  EFF6  F009         	goto	u1050
  1705   0013E8                     u1051:
  1706   0013E8  EFFA  F009         	goto	l2120
  1707   0013EC                     u1050:
  1708   0013EC                     l2118:
  1709                           
  1710                           ;MCAL/GPIO/gpio.c: 62:         ret = (Std_ReturnType)0x00;
  1711   0013EC  0E00               	movlw	0
  1712   0013EE  6E31               	movwf	gpio_pin_logic_read@ret^0,c
  1713                           
  1714                           ;MCAL/GPIO/gpio.c: 63:     }
  1715   0013F0  EF2B  F00A         	goto	l2122
  1716   0013F4                     l2120:
  1717                           
  1718                           ;MCAL/GPIO/gpio.c: 65:         *retlogic = ((*port_regs[my_pin->port]>>my_pin->pin) & 1)
      +                          ;
  1719   0013F4  C028  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
  1720   0013F8  C029  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
  1721   0013FC  30DF               	rrcf	223,w,c
  1722   0013FE  32E8               	rrcf	wreg,f,c
  1723   001400  32E8               	rrcf	wreg,f,c
  1724   001402  0B07               	andlw	7
  1725   001404  6E2C               	movwf	??_gpio_pin_logic_read^0,c
  1726   001406  C028  FFD9         	movff	gpio_pin_logic_read@my_pin,fsr2l
  1727   00140A  C029  FFDA         	movff	gpio_pin_logic_read@my_pin+1,fsr2h
  1728   00140E  50DF               	movf	223,w,c
  1729   001410  0B07               	andlw	7
  1730   001412  6E2D               	movwf	(??_gpio_pin_logic_read+1)^0,c
  1731   001414  502D               	movf	(??_gpio_pin_logic_read+1)^0,w,c
  1732   001416  0D02               	mullw	2
  1733   001418  0E0B               	movlw	low _port_regs
  1734   00141A  24F3               	addwf	243,w,c
  1735   00141C  6ED9               	movwf	fsr2l,c
  1736   00141E  0E00               	movlw	high _port_regs
  1737   001420  20F4               	addwfc	prodh,w,c
  1738   001422  6EDA               	movwf	fsr2h,c
  1739   001424  CFDE F02E          	movff	postinc2,??_gpio_pin_logic_read+2
  1740   001428  CFDD F02F          	movff	postdec2,??_gpio_pin_logic_read+3
  1741   00142C  C02E  FFD9         	movff	??_gpio_pin_logic_read+2,fsr2l
  1742   001430  C02F  FFDA         	movff	??_gpio_pin_logic_read+3,fsr2h
  1743   001434  50DF               	movf	indf2,w,c
  1744   001436  6E30               	movwf	(??_gpio_pin_logic_read+4)^0,c
  1745   001438  2A2C               	incf	??_gpio_pin_logic_read^0,f,c
  1746   00143A  EF21  F00A         	goto	u1064
  1747   00143E                     u1065:
  1748   00143E  90D8               	bcf	status,0,c
  1749   001440  3230               	rrcf	(??_gpio_pin_logic_read+4)^0,f,c
  1750   001442                     u1064:
  1751   001442  2E2C               	decfsz	??_gpio_pin_logic_read^0,f,c
  1752   001444  EF1F  F00A         	goto	u1065
  1753   001448  5030               	movf	(??_gpio_pin_logic_read+4)^0,w,c
  1754   00144A  0B01               	andlw	1
  1755   00144C  C02A  FFD9         	movff	gpio_pin_logic_read@retlogic,fsr2l
  1756   001450  C02B  FFDA         	movff	gpio_pin_logic_read@retlogic+1,fsr2h
  1757   001454  6EDF               	movwf	indf2,c
  1758   001456                     l2122:
  1759                           
  1760                           ;MCAL/GPIO/gpio.c: 67:     return ret;
  1761   001456  5031               	movf	gpio_pin_logic_read@ret^0,w,c
  1762   001458  0012               	return		;funcret
  1763   00145A                     __end_of_gpio_pin_logic_read:
  1764                           	callstack 0
  1765                           
  1766                           	psect	rparam
  1767   000000                     
  1768                           	psect	idloc
  1769                           
  1770                           ;Config register IDLOC0 @ 0x200000
  1771                           ;	unspecified, using default values
  1772   200000                     	org	2097152
  1773   200000  FF                 	db	255
  1774                           
  1775                           ;Config register IDLOC1 @ 0x200001
  1776                           ;	unspecified, using default values
  1777   200001                     	org	2097153
  1778   200001  FF                 	db	255
  1779                           
  1780                           ;Config register IDLOC2 @ 0x200002
  1781                           ;	unspecified, using default values
  1782   200002                     	org	2097154
  1783   200002  FF                 	db	255
  1784                           
  1785                           ;Config register IDLOC3 @ 0x200003
  1786                           ;	unspecified, using default values
  1787   200003                     	org	2097155
  1788   200003  FF                 	db	255
  1789                           
  1790                           ;Config register IDLOC4 @ 0x200004
  1791                           ;	unspecified, using default values
  1792   200004                     	org	2097156
  1793   200004  FF                 	db	255
  1794                           
  1795                           ;Config register IDLOC5 @ 0x200005
  1796                           ;	unspecified, using default values
  1797   200005                     	org	2097157
  1798   200005  FF                 	db	255
  1799                           
  1800                           ;Config register IDLOC6 @ 0x200006
  1801                           ;	unspecified, using default values
  1802   200006                     	org	2097158
  1803   200006  FF                 	db	255
  1804                           
  1805                           ;Config register IDLOC7 @ 0x200007
  1806                           ;	unspecified, using default values
  1807   200007                     	org	2097159
  1808   200007  FF                 	db	255
  1809                           
  1810                           	psect	config
  1811                           
  1812                           ; Padding undefined space
  1813   300000                     	org	3145728
  1814   300000  FF                 	db	255
  1815                           
  1816                           ;Config register CONFIG1H @ 0x300001
  1817                           ;	unspecified, using default values
  1818                           ;	Oscillator Selection bits
  1819                           ;	OSC = 0x7, unprogrammed default
  1820                           ;	Fail-Safe Clock Monitor Enable bit
  1821                           ;	FCMEN = 0x0, unprogrammed default
  1822                           ;	Internal/External Oscillator Switchover bit
  1823                           ;	IESO = 0x0, unprogrammed default
  1824   300001                     	org	3145729
  1825   300001  07                 	db	7
  1826                           
  1827                           ;Config register CONFIG2L @ 0x300002
  1828                           ;	unspecified, using default values
  1829                           ;	Power-up Timer Enable bit
  1830                           ;	PWRT = 0x1, unprogrammed default
  1831                           ;	Brown-out Reset Enable bits
  1832                           ;	BOREN = 0x3, unprogrammed default
  1833                           ;	Brown Out Reset Voltage bits
  1834                           ;	BORV = 0x3, unprogrammed default
  1835   300002                     	org	3145730
  1836   300002  1F                 	db	31
  1837                           
  1838                           ;Config register CONFIG2H @ 0x300003
  1839                           ;	unspecified, using default values
  1840                           ;	Watchdog Timer Enable bit
  1841                           ;	WDT = 0x1, unprogrammed default
  1842                           ;	Watchdog Timer Postscale Select bits
  1843                           ;	WDTPS = 0xF, unprogrammed default
  1844   300003                     	org	3145731
  1845   300003  1F                 	db	31
  1846                           
  1847                           ; Padding undefined space
  1848   300004                     	org	3145732
  1849   300004  FF                 	db	255
  1850                           
  1851                           ;Config register CONFIG3H @ 0x300005
  1852                           ;	unspecified, using default values
  1853                           ;	CCP2 MUX bit
  1854                           ;	CCP2MX = 0x1, unprogrammed default
  1855                           ;	PORTB A/D Enable bit
  1856                           ;	PBADEN = 0x1, unprogrammed default
  1857                           ;	Low-Power Timer1 Oscillator Enable bit
  1858                           ;	LPT1OSC = 0x0, unprogrammed default
  1859                           ;	MCLR Pin Enable bit
  1860                           ;	MCLRE = 0x1, unprogrammed default
  1861   300005                     	org	3145733
  1862   300005  83                 	db	131
  1863                           
  1864                           ;Config register CONFIG4L @ 0x300006
  1865                           ;	unspecified, using default values
  1866                           ;	Stack Full/Underflow Reset Enable bit
  1867                           ;	STVREN = 0x1, unprogrammed default
  1868                           ;	Single-Supply ICSP Enable bit
  1869                           ;	LVP = 0x1, unprogrammed default
  1870                           ;	Extended Instruction Set Enable bit
  1871                           ;	XINST = 0x0, unprogrammed default
  1872                           ;	Background Debugger Enable bit
  1873                           ;	DEBUG = 0x1, unprogrammed default
  1874   300006                     	org	3145734
  1875   300006  85                 	db	133
  1876                           
  1877                           ; Padding undefined space
  1878   300007                     	org	3145735
  1879   300007  FF                 	db	255
  1880                           
  1881                           ;Config register CONFIG5L @ 0x300008
  1882                           ;	unspecified, using default values
  1883                           ;	Code Protection bit
  1884                           ;	CP0 = 0x1, unprogrammed default
  1885                           ;	Code Protection bit
  1886                           ;	CP1 = 0x1, unprogrammed default
  1887                           ;	Code Protection bit
  1888                           ;	CP2 = 0x1, unprogrammed default
  1889                           ;	Code Protection bit
  1890                           ;	CP3 = 0x1, unprogrammed default
  1891   300008                     	org	3145736
  1892   300008  0F                 	db	15
  1893                           
  1894                           ;Config register CONFIG5H @ 0x300009
  1895                           ;	unspecified, using default values
  1896                           ;	Boot Block Code Protection bit
  1897                           ;	CPB = 0x1, unprogrammed default
  1898                           ;	Data EEPROM Code Protection bit
  1899                           ;	CPD = 0x1, unprogrammed default
  1900   300009                     	org	3145737
  1901   300009  C0                 	db	192
  1902                           
  1903                           ;Config register CONFIG6L @ 0x30000A
  1904                           ;	unspecified, using default values
  1905                           ;	Write Protection bit
  1906                           ;	WRT0 = 0x1, unprogrammed default
  1907                           ;	Write Protection bit
  1908                           ;	WRT1 = 0x1, unprogrammed default
  1909                           ;	Write Protection bit
  1910                           ;	WRT2 = 0x1, unprogrammed default
  1911                           ;	Write Protection bit
  1912                           ;	WRT3 = 0x1, unprogrammed default
  1913   30000A                     	org	3145738
  1914   30000A  0F                 	db	15
  1915                           
  1916                           ;Config register CONFIG6H @ 0x30000B
  1917                           ;	unspecified, using default values
  1918                           ;	Configuration Register Write Protection bit
  1919                           ;	WRTC = 0x1, unprogrammed default
  1920                           ;	Boot Block Write Protection bit
  1921                           ;	WRTB = 0x1, unprogrammed default
  1922                           ;	Data EEPROM Write Protection bit
  1923                           ;	WRTD = 0x1, unprogrammed default
  1924   30000B                     	org	3145739
  1925   30000B  E0                 	db	224
  1926                           
  1927                           ;Config register CONFIG7L @ 0x30000C
  1928                           ;	unspecified, using default values
  1929                           ;	Table Read Protection bit
  1930                           ;	EBTR0 = 0x1, unprogrammed default
  1931                           ;	Table Read Protection bit
  1932                           ;	EBTR1 = 0x1, unprogrammed default
  1933                           ;	Table Read Protection bit
  1934                           ;	EBTR2 = 0x1, unprogrammed default
  1935                           ;	Table Read Protection bit
  1936                           ;	EBTR3 = 0x1, unprogrammed default
  1937   30000C                     	org	3145740
  1938   30000C  0F                 	db	15
  1939                           
  1940                           ;Config register CONFIG7H @ 0x30000D
  1941                           ;	unspecified, using default values
  1942                           ;	Boot Block Table Read Protection bit
  1943                           ;	EBTRB = 0x1, unprogrammed default
  1944   30000D                     	org	3145741
  1945   30000D  40                 	db	64
  1946                           tosu	equ	0xFFF
  1947                           tosh	equ	0xFFE
  1948                           tosl	equ	0xFFD
  1949                           stkptr	equ	0xFFC
  1950                           pclatu	equ	0xFFB
  1951                           pclath	equ	0xFFA
  1952                           pcl	equ	0xFF9
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           prodh	equ	0xFF4
  1958                           prodl	equ	0xFF3
  1959                           indf0	equ	0xFEF
  1960                           postinc0	equ	0xFEE
  1961                           postdec0	equ	0xFED
  1962                           preinc0	equ	0xFEC
  1963                           plusw0	equ	0xFEB
  1964                           fsr0h	equ	0xFEA
  1965                           fsr0l	equ	0xFE9
  1966                           wreg	equ	0xFE8
  1967                           indf1	equ	0xFE7
  1968                           postinc1	equ	0xFE6
  1969                           postdec1	equ	0xFE5
  1970                           preinc1	equ	0xFE4
  1971                           plusw1	equ	0xFE3
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           bsr	equ	0xFE0
  1975                           indf2	equ	0xFDF
  1976                           postinc2	equ	0xFDE
  1977                           postdec2	equ	0xFDD
  1978                           preinc2	equ	0xFDC
  1979                           plusw2	equ	0xFDB
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        39
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S1227$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1227$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> main@retval(COMRAM[1]), 

    keypad_get_value@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad(COMRAM[8]), 

    keypad_initialize@_keypad_obj	PTR const struct . size(2) Largest target is 8
		 -> keypad(COMRAM[8]), 

    gpio_pin_initialize@my_pin	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), relay_initialize@rel_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_logic_read@retlogic	PTR enum E2965 size(2) Largest target is 1
		 -> keypad_get_value@column_logic(COMRAM[1]), button_read_status@Pin_Logic_Status(COMRAM[1]), 

    gpio_pin_logic_read@my_pin	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_columns_pins(COMRAM[4]), keypad(COMRAM[8]), 

    gpio_pin_logic_write@my_pin	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), relay_turn_off@rel_pin(COMRAM[1]), relay_turn_on@rel_pin(COMRAM[1]), 
		 -> relay_initialize@rel_pin(COMRAM[1]), led_turn_off@my_pin(COMRAM[1]), led_turn_on@my_pin(COMRAM[1]), led_init@my_pin(COMRAM[1]), 

    gpio_pin_direction_init@my_pin	PTR const struct . size(2) Largest target is 8
		 -> keypad.keypad_columns_pins(COMRAM[4]), keypad.keypad_row_pins(COMRAM[4]), keypad(COMRAM[8]), relay_initialize@rel_pin(COMRAM[1]), 
		 -> led_init@my_pin(COMRAM[1]), 

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    led_turn_off@my_led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_on@my_led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_init@my_led	PTR const struct . size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _led_turn_on->_gpio_pin_logic_write
    _led_turn_off->_gpio_pin_logic_write
    _led_init->_gpio_pin_initialize
    _keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_logic_write
    _keypad_get_value->_gpio_pin_logic_read
    _keypad_get_value->_gpio_pin_logic_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   30605
                                             21 COMRAM     1     1      0
                   _keypad_get_value
                  _keypad_initialize
                           _led_init
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          5     3      2    5074
                                             10 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         5     3      2    5074
                                             10 COMRAM     4     2      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _led_init                                             5     3      2    6780
                                             13 COMRAM     5     3      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _keypad_initialize                                    7     5      2    7645
                                             13 COMRAM     7     5      2
            _gpio_pin_direction_init
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     1      2    6552
                                             10 COMRAM     3     1      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_init                              9     7      2     787
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    11     7      4    5959
                                             10 COMRAM    11     7      4
                _gpio_pin_logic_read
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_write                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_logic_read                                 10     6      4     460
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad_get_value
     _gpio_pin_logic_read
     _gpio_pin_logic_write
   _keypad_initialize
     _gpio_pin_direction_init
     _gpio_pin_initialize
       _gpio_pin_direction_init
       _gpio_pin_logic_write
   _led_init
     _gpio_pin_initialize
   _led_turn_off
     _gpio_pin_logic_write
   _led_turn_on
     _gpio_pin_logic_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     16      4B       1       59.1%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      39        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 06 05:01:23 2023

                              l332 1158                                l252 169E  
                              l245 1634                                l238 1556  
                              l351 1284                                l370 16E8  
                              l461 13A0                                l358 1458  
                              l447 14D8                                u920 1170  
                              u921 116C                                u930 1192  
                              u931 118E                                u944 11BA  
                              u960 102C                                u945 11B6  
                              u961 1028                                u954 121C  
                              u970 104E                                u955 1218  
                              u971 104A                                u984 1076  
                              u985 1072                                u994 10D8  
                              u995 10D4               keypad_initialize@ret 0039  
           ??_gpio_pin_logic_write 002B                                prod 000FF3  
                              wreg 000FE8              relay_initialize@F3039 0046  
       gpio_pin_logic_write@my_pin 0028                       ?_led_turn_on 0032  
                             l2100 16A0                               l2110 13A2  
                             l2102 16B2                               l2120 13F4  
                             l2112 13A6                               l2104 16BA  
                             l2122 1456                               l2114 13B8  
                             l2050 115A                               l2106 16E6  
                             l2116 13DA                               l2060 11FC  
                             l2052 115E                               l2300 15D0  
                             l2118 13EC                               l2054 1170  
                             l2310 1620                               l2302 15E8  
                             l2064 1258                               l2056 1192  
                             l2400 1312                               l2080 104E  
                             l2320 163A                               l2312 1624  
                             l2304 160A                               l2058 119A  
                             l2066 1282                               l2410 134C  
                             l2082 1056                               l2090 1156  
                             l2074 1016                               l2330 168A  
                             l2322 1652                               l2306 160C  
                             l2412 137A                               l2420 139E  
                             l2084 10B8                               l2076 101A  
                             l2340 1474                               l2332 168E  
                             l2324 1674                               l2316 1636  
                             l2308 160E                               l2414 137C  
                             l2406 1316                               l2078 102C  
                             l2350 1490                               l2342 147C  
                             l2326 1676                               l2318 1636  
                             l2416 138C                               l2408 133C  
                             l2088 1114                               l2360 14A6  
                             l2352 1492                               l2336 145A  
                             l2280 14F6                               l2328 1678  
                             l2418 138E                               l2370 1286  
                             l2098 16A0                               l2362 14C4  
                             l2354 14A2                               l2338 1462  
                             l2290 1546                               l2282 1518  
                             l2274 14DA                               l2372 1296  
                             l2364 14C6                               l2348 1480  
                             l2292 1554                               l2284 151A  
                             l2276 14DA                               l2390 12CA  
                             l2374 12A8                               l2366 14D6  
                             l2286 152C                               l2278 14DE  
                             l2392 12DE                               l2384 12C6  
                             l2376 12BA                               l2288 153E  
                             l2296 15CC                               l2394 12E0  
                             l2378 12C2                               l2298 15CC  
                             l2396 12F0                               l2398 1304  
                             l2806 1140                               l2808 126C  
                             l2790 1588                               l2782 1558  
                             l2792 159A                               l2784 1558  
                             l2794 15A6                               l2786 1564  
                             l2796 15B8                               l2788 1574  
                             STR_1 1011                               u1000 112C  
                             u1001 1126                               u1010 112E  
                             u1020 16B2                               u1021 16AE  
                             u1030 13B8                               u1031 13B4  
                             u1040 13DA                               u1200 153E  
                             u1041 13D6                               u1201 153A  
                             u1050 13EC                               u1210 1620  
                             u1051 13E8                               u1211 161C  
                             u1300 138C                               u1220 168A  
                             u1301 1388                               u1221 1686  
                             u1310 139E                               u1230 1474  
                             u1311 139A                               u1231 1470  
                             u1064 1442                               u1240 14A2  
                             u1065 143E                               u1241 149E  
                             u1250 14D6                               u1251 14D2  
                             u1260 12A8                               u1261 12A4  
                             _LATA 000F89                               u1270 12BA  
                             _LATB 000F8A                               u1271 12B6  
                             _LATC 000F8B                               u1280 12F0  
                             u1600 159A                               _LATD 000F8C  
                             u1281 12EC                               u1601 1596  
                             _LATE 000F8D                               u1290 134C  
                             u1610 15B8                               u1291 1348  
                             u1195 152A                               u1611 15B4  
                             u1197 152C                               u1627 130A  
                             _led1 004B                               _led2 001F  
                             _main 1558                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             fsr2l 000FD9           ?_gpio_pin_direction_init 0028  
                             prodl 000FF3                               start 0000  
                      led_init@ret 0038                      ?_led_turn_off 0032  
                     ___param_bank 000000                              ?_main 0028  
              relay_turn_off@F3049 0044                              _PORTA 000F80  
                            _PORTB 000F81                              _PORTC 000F82  
                            _PORTD 000F83                              _PORTE 000F84  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                            _TRISE 000F96           __end_of_keypad_get_value 13A2  
                            tablat 000FF5                              status 000FD8  
                   ??_led_turn_off 0034  keypad_get_value@l_columns_counter 003C  
                  __initialization 16EA                keypad_get_value@ret 0038  
                     __end_of_main 15CC                             ??_main 003D  
                    __activetblptr 000002                   led_turn_on@F3050 0049  
        keypad_get_value@l_counter 003A                   __end_of_led_init 1558  
                           _keypad 0020                             clear_0 1710  
                           isa$std 000001          gpio_pin_logic_write@logic 002A  
                    led_init@F3045 004A                       __pdataCOMRAM 0001  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                       __accesstop 0080            __end_of__initialization 1716  
                    ___rparam_used 000001                     __pcstackCOMRAM 0028  
             __end_of_led_turn_off 16A0                  led_turn_off@F3055 0048  
                  led_toggle@F3060 0047                  led_turn_on@my_led 0032  
                led_turn_on@my_pin 0035                  ?_keypad_get_value 0032  
                        ?_led_init 0035                 ??_keypad_get_value 0036  
                       _btn_values 1001                            __Hparam 0000  
                          __Lparam 0000                _gpio_pin_initialize 16A0  
 keypad_initialize@columns_counter 003B                       __psmallconst 1000  
              _gpio_pin_logic_read 13A2                            __pcinit 16EA  
                          __ramtop 1000                            __ptext0 1558  
                          __ptext1 15CC                            __ptext2 1636  
                          __ptext3 14DA                            __ptext4 145A  
                          __ptext5 16A0                            __ptext6 1016  
                          __ptext7 1286                            __ptext8 115A  
                          __ptext9 13A2               ?_gpio_pin_initialize 0032  
                       ??_led_init 0037               end_of_initialization 1716  
             ?_gpio_pin_logic_read 0028                      __Lmediumconst 0000  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
     keypad_get_value@column_logic 0039                     led_init@my_led 0035  
                   led_init@my_pin 0039              ??_gpio_pin_initialize 0034  
            ??_gpio_pin_logic_read 002C                         main@retval 003D  
                     _led_turn_off 1636                 relay_turn_on@F3044 0045  
            keypad_get_value@value 0034      convert_uint16_to_string@F3195 003E  
          _gpio_pin_direction_init 1016                      __pidataCOMRAM 1720  
              start_initialization 16EA                      ??_led_turn_on 0034  
                      __pbssCOMRAM 003E                __end_of_led_turn_on 1636  
     __end_of_gpio_pin_logic_write 1286      keypad_initialize@rows_counter 003A  
        ??_gpio_pin_direction_init 002A                        __smallconst 1000  
        gpio_pin_initialize@my_pin 0032                 led_turn_off@my_led 0032  
               led_turn_off@my_pin 0035                          _port_regs 000B  
                        _tris_regs 0015             gpio_pin_initialize@ret 0034  
  __end_of_gpio_pin_direction_init 115A                        _led_turn_on 15CC  
                        copy_data0 16FE                  _keypad_initialize 145A  
               ?_keypad_initialize 0035                           __Hrparam 0000  
                         __Lrparam 0000                ??_keypad_initialize 0037  
      __end_of_gpio_pin_initialize 16EA                 __end_of_btn_values 1011  
      keypad_get_value@_keypad_obj 0032        __end_of_gpio_pin_logic_read 145A  
             _gpio_pin_logic_write 115A          __end_of_keypad_initialize 14DA  
                         _led_init 14DA                           _lat_regs 0001  
                 _keypad_get_value 1286                           isa$xinst 000000  
            ?_gpio_pin_logic_write 0028     keypad_get_value@l_rows_counter 003B  
          gpio_pin_logic_write@ret 0031             gpio_pin_logic_read@ret 0031  
     keypad_initialize@_keypad_obj 0035          gpio_pin_logic_read@my_pin 0028  
      gpio_pin_logic_read@retlogic 002A      gpio_pin_direction_init@my_pin 0028  
       gpio_pin_direction_init@ret 0030  
